#include "Switch_RM.h"


namespace dps
{
	Switch_RM::Switch_RM( SimpleGPCSystem *_gpc ):SimpleGPCSoftware( _gpc, "Switch_RM" )
	{
		return;
	}

	Switch_RM::~Switch_RM( void )
	{
		return;
	}

	void Switch_RM::OnPreStep( double simt, double simdt, double mjd )
	{
		unsigned short FF1_IOM6_CH1 = ReadCOMPOOL_IS( SCP_FF1_IOM6_CH1_DATA );
		unsigned short FF2_IOM6_CH1 = ReadCOMPOOL_IS( SCP_FF2_IOM6_CH1_DATA );
		unsigned short FF3_IOM15_CH1 = ReadCOMPOOL_IS( SCP_FF3_IOM15_CH1_DATA );
		unsigned short FF4_IOM15_CH1 = ReadCOMPOOL_IS( SCP_FF4_IOM15_CH1_DATA );
		unsigned short FF1_IOM12_CH1 = ReadCOMPOOL_IS( SCP_FF1_IOM12_CH1_DATA );
		unsigned short FF2_IOM12_CH1 = ReadCOMPOOL_IS( SCP_FF2_IOM12_CH1_DATA );
		unsigned short FF3_IOM12_CH1 = ReadCOMPOOL_IS( SCP_FF3_IOM12_CH1_DATA );
		unsigned short FF4_IOM12_CH1 = ReadCOMPOOL_IS( SCP_FF4_IOM12_CH1_DATA );
		unsigned short FF1_IOM12_CH0 = ReadCOMPOOL_IS( SCP_FF1_IOM12_CH0_DATA );
		unsigned short FF2_IOM12_CH0 = ReadCOMPOOL_IS( SCP_FF2_IOM12_CH0_DATA );
		unsigned short FF3_IOM12_CH0 = ReadCOMPOOL_IS( SCP_FF3_IOM12_CH0_DATA );
		unsigned short FF4_IOM12_CH0 = ReadCOMPOOL_IS( SCP_FF4_IOM12_CH0_DATA );

		// LH_RHC_PLUS_PITCH_TRIM
		bool LH_RHC_PLUS_PITCH_TRIM_A = ((FF1_IOM6_CH1 & 0x0002) != 0);
		bool LH_RHC_PLUS_PITCH_TRIM_B = ((FF2_IOM6_CH1 & 0x0002) != 0);
		WriteCOMPOOL_IS( SCP_LH_RHC_PLUS_PITCH_TRIM, LH_RHC_PLUS_PITCH_TRIM_A & LH_RHC_PLUS_PITCH_TRIM_B );
		// LH_RHC_MINUS_PITCH_TRIM
		bool LH_RHC_MINUS_PITCH_TRIM_A = ((FF1_IOM6_CH1 & 0x0004) != 0);
		bool LH_RHC_MINUS_PITCH_TRIM_B = ((FF2_IOM6_CH1 & 0x0004) != 0);
		WriteCOMPOOL_IS( SCP_LH_RHC_MINUS_PITCH_TRIM, LH_RHC_MINUS_PITCH_TRIM_A & LH_RHC_MINUS_PITCH_TRIM_B );
		// LH_RHC_PLUS_ROLL_TRIM
		bool LH_RHC_PLUS_ROLL_TRIM_A = ((FF1_IOM6_CH1 & 0x0008) != 0);
		bool LH_RHC_PLUS_ROLL_TRIM_B = ((FF2_IOM6_CH1 & 0x0008) != 0);
		WriteCOMPOOL_IS( SCP_LH_RHC_PLUS_ROLL_TRIM, LH_RHC_PLUS_ROLL_TRIM_A & LH_RHC_PLUS_ROLL_TRIM_B );
		// LH_RHC_MINUS_ROLL_TRIM
		bool LH_RHC_MINUS_ROLL_TRIM_A = ((FF1_IOM6_CH1 & 0x0010) != 0);
		bool LH_RHC_MINUS_ROLL_TRIM_B = ((FF2_IOM6_CH1 & 0x0010) != 0);
		WriteCOMPOOL_IS( SCP_LH_RHC_MINUS_ROLL_TRIM, LH_RHC_MINUS_ROLL_TRIM_A & LH_RHC_MINUS_ROLL_TRIM_B );
		// RH_RHC_PLUS_PITCH_TRIM
		bool RH_RHC_PLUS_PITCH_TRIM_A = ((FF3_IOM15_CH1 & 0x0002) != 0);
		bool RH_RHC_PLUS_PITCH_TRIM_B = ((FF4_IOM15_CH1 & 0x0002) != 0);
		WriteCOMPOOL_IS( SCP_RH_RHC_PLUS_PITCH_TRIM, RH_RHC_PLUS_PITCH_TRIM_A & RH_RHC_PLUS_PITCH_TRIM_B );
		// RH_RHC_MINUS_PITCH_TRIM
		bool RH_RHC_MINUS_PITCH_TRIM_A = ((FF3_IOM15_CH1 & 0x0004) != 0);
		bool RH_RHC_MINUS_PITCH_TRIM_B = ((FF4_IOM15_CH1 & 0x0004) != 0);
		WriteCOMPOOL_IS( SCP_RH_RHC_MINUS_PITCH_TRIM, RH_RHC_MINUS_PITCH_TRIM_A & RH_RHC_MINUS_PITCH_TRIM_B );
		// RH_RHC_PLUS_ROLL_TRIM
		bool RH_RHC_PLUS_ROLL_TRIM_A = ((FF3_IOM15_CH1 & 0x0008) != 0);
		bool RH_RHC_PLUS_ROLL_TRIM_B = ((FF4_IOM15_CH1 & 0x0008) != 0);
		WriteCOMPOOL_IS( SCP_RH_RHC_PLUS_ROLL_TRIM, RH_RHC_PLUS_ROLL_TRIM_A & RH_RHC_PLUS_ROLL_TRIM_B );
		// RH_RHC_MINUS_ROLL_TRIM
		bool RH_RHC_MINUS_ROLL_TRIM_A = ((FF3_IOM15_CH1 & 0x0010) != 0);
		bool RH_RHC_MINUS_ROLL_TRIM_B = ((FF4_IOM15_CH1 & 0x0010) != 0);
		WriteCOMPOOL_IS( SCP_RH_RHC_MINUS_ROLL_TRIM, RH_RHC_MINUS_ROLL_TRIM_A & RH_RHC_MINUS_ROLL_TRIM_B );

		// LH_RHC_TRIM_INHIBIT
		bool LH_RHC_TRIM_INHIBIT_A = ((FF1_IOM12_CH1 & 0x0100) != 0);
		bool LH_RHC_TRIM_INHIBIT_B = ((FF2_IOM12_CH1 & 0x0100) != 0);
		WriteCOMPOOL_IS( SCP_LH_RHC_TRIM_INHIBIT, LH_RHC_TRIM_INHIBIT_A & LH_RHC_TRIM_INHIBIT_B );
		// RH_RHC_TRIM_INHIBIT
		bool RH_RHC_TRIM_INHIBIT_A = ((FF3_IOM12_CH1 & 0x0100) != 0);
		bool RH_RHC_TRIM_INHIBIT_B = ((FF4_IOM12_CH1 & 0x0100) != 0);
		WriteCOMPOOL_IS( SCP_RH_RHC_TRIM_INHIBIT, RH_RHC_TRIM_INHIBIT_A & RH_RHC_TRIM_INHIBIT_B );

		// LH_PLUS_PITCH_TRIM
		bool LH_PLUS_PITCH_TRIM_A = ((FF1_IOM12_CH0 & 0x0002) != 0);
		bool LH_PLUS_PITCH_TRIM_B = ((FF2_IOM12_CH0 & 0x0002) != 0);
		WriteCOMPOOL_IS( SCP_LH_PLUS_PITCH_TRIM, LH_PLUS_PITCH_TRIM_A & LH_PLUS_PITCH_TRIM_B );
		// LH_MINUS_PITCH_TRIM
		bool LH_MINUS_PITCH_TRIM_A = ((FF1_IOM12_CH0 & 0x0004) != 0);
		bool LH_MINUS_PITCH_TRIM_B = ((FF2_IOM12_CH0 & 0x0004) != 0);
		WriteCOMPOOL_IS( SCP_LH_MINUS_PITCH_TRIM, LH_MINUS_PITCH_TRIM_A & LH_MINUS_PITCH_TRIM_B );
		// LH_PLUS_ROLL_TRIM
		bool LH_PLUS_ROLL_TRIM_A = ((FF1_IOM12_CH0 & 0x0008) != 0);
		bool LH_PLUS_ROLL_TRIM_B = ((FF2_IOM12_CH0 & 0x0008) != 0);
		WriteCOMPOOL_IS( SCP_LH_PLUS_ROLL_TRIM, LH_PLUS_ROLL_TRIM_A & LH_PLUS_ROLL_TRIM_B );
		// LH_MINUS_ROLL_TRIM
		bool LH_MINUS_ROLL_TRIM_A = ((FF1_IOM12_CH0 & 0x0010) != 0);
		bool LH_MINUS_ROLL_TRIM_B = ((FF2_IOM12_CH0 & 0x0010) != 0);
		WriteCOMPOOL_IS( SCP_LH_MINUS_ROLL_TRIM, LH_MINUS_ROLL_TRIM_A & LH_MINUS_ROLL_TRIM_B );
		// LH_PLUS_YAW_TRIM
		bool LH_PLUS_YAW_TRIM_A = ((FF1_IOM12_CH0 & 0x0020) != 0);
		bool LH_PLUS_YAW_TRIM_B = ((FF2_IOM12_CH0 & 0x0020) != 0);
		WriteCOMPOOL_IS( SCP_LH_PLUS_YAW_TRIM, LH_PLUS_YAW_TRIM_A & LH_PLUS_YAW_TRIM_B );
		// LH_MINUS_YAW_TRIM
		bool LH_MINUS_YAW_TRIM_A = ((FF1_IOM12_CH0 & 0x0040) != 0);
		bool LH_MINUS_YAW_TRIM_B = ((FF2_IOM12_CH0 & 0x0040) != 0);
		WriteCOMPOOL_IS( SCP_LH_MINUS_YAW_TRIM, LH_MINUS_YAW_TRIM_A & LH_MINUS_YAW_TRIM_B );
		// RH_PLUS_PITCH_TRIM
		bool RH_PLUS_PITCH_TRIM_A = ((FF3_IOM12_CH0 & 0x0002) != 0);
		bool RH_PLUS_PITCH_TRIM_B = ((FF4_IOM12_CH0 & 0x0002) != 0);
		WriteCOMPOOL_IS( SCP_RH_PLUS_PITCH_TRIM, RH_PLUS_PITCH_TRIM_A & RH_PLUS_PITCH_TRIM_B );
		// RH_MINUS_PITCH_TRIM
		bool RH_MINUS_PITCH_TRIM_A = ((FF3_IOM12_CH0 & 0x0004) != 0);
		bool RH_MINUS_PITCH_TRIM_B = ((FF4_IOM12_CH0 & 0x0004) != 0);
		WriteCOMPOOL_IS( SCP_RH_MINUS_PITCH_TRIM, RH_MINUS_PITCH_TRIM_A & RH_MINUS_PITCH_TRIM_B );
		// RH_PLUS_ROLL_TRIM
		bool RH_PLUS_ROLL_TRIM_A = ((FF3_IOM12_CH0 & 0x0008) != 0);
		bool RH_PLUS_ROLL_TRIM_B = ((FF4_IOM12_CH0 & 0x0008) != 0);
		WriteCOMPOOL_IS( SCP_RH_PLUS_ROLL_TRIM, RH_PLUS_ROLL_TRIM_A & RH_PLUS_ROLL_TRIM_B );
		// RH_MINUS_ROLL_TRIM
		bool RH_MINUS_ROLL_TRIM_A = ((FF3_IOM12_CH0 & 0x0010) != 0);
		bool RH_MINUS_ROLL_TRIM_B = ((FF4_IOM12_CH0 & 0x0010) != 0);
		WriteCOMPOOL_IS( SCP_RH_MINUS_ROLL_TRIM, RH_MINUS_ROLL_TRIM_A & RH_MINUS_ROLL_TRIM_B );
		// RH_PLUS_YAW_TRIM
		bool RH_PLUS_YAW_TRIM_A = ((FF3_IOM12_CH0 & 0x0020) != 0);
		bool RH_PLUS_YAW_TRIM_B = ((FF4_IOM12_CH0 & 0x0020) != 0);
		WriteCOMPOOL_IS( SCP_RH_PLUS_YAW_TRIM, RH_PLUS_YAW_TRIM_A & RH_PLUS_YAW_TRIM_B );
		// RH_MINUS_YAW_TRIM
		bool RH_MINUS_YAW_TRIM_A = ((FF3_IOM12_CH0 & 0x0040) != 0);
		bool RH_MINUS_YAW_TRIM_B = ((FF4_IOM12_CH0 & 0x0040) != 0);
		WriteCOMPOOL_IS( SCP_RH_MINUS_YAW_TRIM, RH_MINUS_YAW_TRIM_A & RH_MINUS_YAW_TRIM_B );


		unsigned short FF1_IOM4_CH0 = ReadCOMPOOL_IS( SCP_FF1_IOM4_CH0_DATA );
		unsigned short FF2_IOM4_CH0 = ReadCOMPOOL_IS( SCP_FF2_IOM4_CH0_DATA );
		unsigned short FF3_IOM4_CH0 = ReadCOMPOOL_IS( SCP_FF3_IOM4_CH0_DATA );
		unsigned short FF4_IOM4_CH0 = ReadCOMPOOL_IS( SCP_FF4_IOM4_CH0_DATA );

		// LH_BODY_FLAP_UP
		bool LH_BODY_FLAP_UP_A = ((FF1_IOM4_CH0 & 0x0008) != 0);
		bool LH_BODY_FLAP_UP_B = ((FF2_IOM4_CH0 & 0x0008) != 0);
		WriteCOMPOOL_IS( SCP_LH_BODY_FLAP_UP, LH_BODY_FLAP_UP_A & LH_BODY_FLAP_UP_B );
		// LH_BODY_FLAP_DOWN
		bool LH_BODY_FLAP_DOWN_A = ((FF1_IOM4_CH0 & 0x0010) != 0);
		bool LH_BODY_FLAP_DOWN_B = ((FF2_IOM4_CH0 & 0x0010) != 0);
		WriteCOMPOOL_IS( SCP_LH_BODY_FLAP_DOWN, LH_BODY_FLAP_DOWN_A & LH_BODY_FLAP_DOWN_B );
		// RH_BODY_FLAP_UP
		bool RH_BODY_FLAP_UP_A = ((FF3_IOM4_CH0 & 0x0008) != 0);
		bool RH_BODY_FLAP_UP_B = ((FF4_IOM4_CH0 & 0x0008) != 0);
		WriteCOMPOOL_IS( SCP_RH_BODY_FLAP_UP, RH_BODY_FLAP_UP_A & RH_BODY_FLAP_UP_B );
		// RH_BODY_FLAP_DOWN
		bool RH_BODY_FLAP_DOWN_A = ((FF3_IOM4_CH0 & 0x0010) != 0);
		bool RH_BODY_FLAP_DOWN_B = ((FF4_IOM4_CH0 & 0x0010) != 0);
		WriteCOMPOOL_IS( SCP_RH_BODY_FLAP_DOWN, RH_BODY_FLAP_DOWN_A & RH_BODY_FLAP_DOWN_B );


		unsigned short FF1_IOM9_CH2 = ReadCOMPOOL_IS( SCP_FF1_IOM9_CH2_DATA );
		unsigned short FF2_IOM9_CH2 = ReadCOMPOOL_IS( SCP_FF2_IOM9_CH2_DATA );
		unsigned short FF3_IOM9_CH2 = ReadCOMPOOL_IS( SCP_FF3_IOM9_CH2_DATA );
		unsigned short FF4_IOM9_CH2 = ReadCOMPOOL_IS( SCP_FF4_IOM9_CH2_DATA );

		// MPS_BACKUP_LH2_PRPLT_DUMP_START
		bool MPS_BACKUP_LH2_PRPLT_DUMP_START_A = ((FF3_IOM9_CH2 & 0x0100) != 0);
		bool MPS_BACKUP_LH2_PRPLT_DUMP_START_B = ((FF4_IOM9_CH2 & 0x0100) != 0);
		WriteCOMPOOL_IS( SCP_MPS_BACKUP_LH2_PRPLT_DUMP_START, MPS_BACKUP_LH2_PRPLT_DUMP_START_A & MPS_BACKUP_LH2_PRPLT_DUMP_START_B );

		// MPS_BACKUP_LH2_PRPLT_DUMP_STOP
		bool MPS_BACKUP_LH2_PRPLT_DUMP_STOP_A = ((FF3_IOM9_CH2 & 0x0200) != 0);
		bool MPS_BACKUP_LH2_PRPLT_DUMP_STOP_B = ((FF4_IOM9_CH2 & 0x0200) != 0);
		WriteCOMPOOL_IS( SCP_MPS_BACKUP_LH2_PRPLT_DUMP_STOP, MPS_BACKUP_LH2_PRPLT_DUMP_STOP_A & MPS_BACKUP_LH2_PRPLT_DUMP_STOP_B );

		// MPS_PRPLT_DUMP_SEQUENCE_START
		bool MPS_PRPLT_DUMP_SEQUENCE_START_A = ((FF1_IOM9_CH2 & 0x0100) != 0);
		bool MPS_PRPLT_DUMP_SEQUENCE_START_B = ((FF2_IOM9_CH2 & 0x0100) != 0);
		WriteCOMPOOL_IS( SCP_MPS_PRPLT_DUMP_SEQUENCE_START, MPS_PRPLT_DUMP_SEQUENCE_START_A & MPS_PRPLT_DUMP_SEQUENCE_START_B );

		// MPS_PRPLT_DUMP_SEQUENCE_STOP
		bool MPS_PRPLT_DUMP_SEQUENCE_STOP_A = ((FF1_IOM9_CH2 & 0x0200) != 0);
		bool MPS_PRPLT_DUMP_SEQUENCE_STOP_B = ((FF2_IOM9_CH2 & 0x0200) != 0);
		WriteCOMPOOL_IS( SCP_MPS_PRPLT_DUMP_SEQUENCE_STOP, MPS_PRPLT_DUMP_SEQUENCE_STOP_A & MPS_PRPLT_DUMP_SEQUENCE_STOP_B );


		unsigned short FF2_IOM4_CH2 = ReadCOMPOOL_IS( SCP_FF2_IOM4_CH2_DATA );
		unsigned short FF3_IOM4_CH2 = ReadCOMPOOL_IS( SCP_FF3_IOM4_CH2_DATA );
		unsigned short FF4_IOM4_CH2 = ReadCOMPOOL_IS( SCP_FF4_IOM4_CH2_DATA );

		// MPS_ENG_LIMIT_CONTROL_ENABLE
		bool MPS_ENG_LIMIT_CONTROL_NO_1_ENABLE = ((FF2_IOM4_CH2 & 0x0002) != 0);
		bool MPS_ENG_LIMIT_CONTROL_NO_2_ENABLE = ((FF3_IOM4_CH2 & 0x0002) != 0);
		bool MPS_ENG_LIMIT_CONTROL_NO_3_ENABLE = ((FF4_IOM4_CH2 & 0x0002) != 0);
		WriteCOMPOOL_IS( SCP_MPS_ENG_LIMIT_CONTROL_ENABLE,
			(MPS_ENG_LIMIT_CONTROL_NO_1_ENABLE & MPS_ENG_LIMIT_CONTROL_NO_2_ENABLE) |
			(MPS_ENG_LIMIT_CONTROL_NO_1_ENABLE & MPS_ENG_LIMIT_CONTROL_NO_3_ENABLE) |
			(MPS_ENG_LIMIT_CONTROL_NO_2_ENABLE & MPS_ENG_LIMIT_CONTROL_NO_3_ENABLE) );

		// MPS_ENG_LIMIT_CONTROL_INHIBIT
		bool MPS_ENG_LIMIT_CONTROL_NO_1_INHIBIT = ((FF2_IOM4_CH2 & 0x0004) != 0);
		bool MPS_ENG_LIMIT_CONTROL_NO_2_INHIBIT = ((FF3_IOM4_CH2 & 0x0004) != 0);
		bool MPS_ENG_LIMIT_CONTROL_NO_3_INHIBIT = ((FF4_IOM4_CH2 & 0x0004) != 0);
		WriteCOMPOOL_IS( SCP_MPS_ENG_LIMIT_CONTROL_INHIBIT,
			(MPS_ENG_LIMIT_CONTROL_NO_1_INHIBIT & MPS_ENG_LIMIT_CONTROL_NO_2_INHIBIT) |
			(MPS_ENG_LIMIT_CONTROL_NO_1_INHIBIT & MPS_ENG_LIMIT_CONTROL_NO_3_INHIBIT) |
			(MPS_ENG_LIMIT_CONTROL_NO_2_INHIBIT & MPS_ENG_LIMIT_CONTROL_NO_3_INHIBIT) );

		// MPS_ENG_LIMIT_CONTROL_AUTO
		bool MPS_ENG_LIMIT_CONTROL_NO_1_AUTO = ((FF2_IOM4_CH2 & 0x0008) != 0);
		bool MPS_ENG_LIMIT_CONTROL_NO_2_AUTO = ((FF3_IOM4_CH2 & 0x0008) != 0);
		bool MPS_ENG_LIMIT_CONTROL_NO_3_AUTO = ((FF4_IOM4_CH2 & 0x0008) != 0);
		WriteCOMPOOL_IS( SCP_MPS_ENG_LIMIT_CONTROL_AUTO,
			(MPS_ENG_LIMIT_CONTROL_NO_1_AUTO & MPS_ENG_LIMIT_CONTROL_NO_2_AUTO) |
			(MPS_ENG_LIMIT_CONTROL_NO_1_AUTO & MPS_ENG_LIMIT_CONTROL_NO_3_AUTO) |
			(MPS_ENG_LIMIT_CONTROL_NO_2_AUTO & MPS_ENG_LIMIT_CONTROL_NO_3_AUTO) );


		unsigned short FF4_IOM6_CH1 = ReadCOMPOOL_IS( SCP_FF4_IOM6_CH1_DATA );
		unsigned short FF3_IOM6_CH1 = ReadCOMPOOL_IS( SCP_FF3_IOM6_CH1_DATA );
		unsigned short FF1_IOM15_CH1 = ReadCOMPOOL_IS( SCP_FF1_IOM15_CH1_DATA );

		// SRB_SEPARATION_AUTO_CMD
		bool SRB_SEPARATION_AUTO_A_CMD = ((FF1_IOM6_CH1 & 0x0020) != 0);
		bool SRB_SEPARATION_AUTO_B_CMD = ((FF4_IOM6_CH1 & 0x0020) != 0);
		bool SRB_SEPARATION_AUTO_C_CMD = ((FF3_IOM6_CH1 & 0x0020) != 0);
		WriteCOMPOOL_IS( SCP_SRB_SEPARATION_AUTO_CMD,
			(SRB_SEPARATION_AUTO_A_CMD & SRB_SEPARATION_AUTO_B_CMD) |
			(SRB_SEPARATION_AUTO_A_CMD & SRB_SEPARATION_AUTO_C_CMD) |
			(SRB_SEPARATION_AUTO_B_CMD & SRB_SEPARATION_AUTO_C_CMD) );

		// SRB_SEPARATION_MANUAL_AUTO_ENABLE_CMD
		bool SRB_SEPARATION_MANUAL_AUTO_ENABLE_A_CMD = ((FF1_IOM6_CH1 & 0x0040) != 0);
		bool SRB_SEPARATION_MANUAL_AUTO_ENABLE_B_CMD = ((FF4_IOM6_CH1 & 0x0040) != 0);
		bool SRB_SEPARATION_MANUAL_AUTO_ENABLE_C_CMD = ((FF3_IOM6_CH1 & 0x0040) != 0);
		WriteCOMPOOL_IS( SCP_SRB_SEPARATION_MANUAL_AUTO_ENABLE_CMD,
			(SRB_SEPARATION_MANUAL_AUTO_ENABLE_A_CMD & SRB_SEPARATION_MANUAL_AUTO_ENABLE_B_CMD) |
			(SRB_SEPARATION_MANUAL_AUTO_ENABLE_A_CMD & SRB_SEPARATION_MANUAL_AUTO_ENABLE_C_CMD) |
			(SRB_SEPARATION_MANUAL_AUTO_ENABLE_B_CMD & SRB_SEPARATION_MANUAL_AUTO_ENABLE_C_CMD) );

		// SRB_SEPARATION_INITIATE_CMD
		bool SRB_SEPARATION_INITIATE_A_CMD = ((FF1_IOM6_CH1 & 0x0080) != 0);
		bool SRB_SEPARATION_INITIATE_B_CMD = ((FF4_IOM6_CH1 & 0x0080) != 0);
		bool SRB_SEPARATION_INITIATE_C_CMD = ((FF3_IOM6_CH1 & 0x0080) != 0);
		WriteCOMPOOL_IS( SCP_SRB_SEPARATION_INITIATE_CMD,
			(SRB_SEPARATION_INITIATE_A_CMD & SRB_SEPARATION_INITIATE_B_CMD) |
			(SRB_SEPARATION_INITIATE_A_CMD & SRB_SEPARATION_INITIATE_C_CMD) |
			(SRB_SEPARATION_INITIATE_B_CMD & SRB_SEPARATION_INITIATE_C_CMD) );

		// ET_SEPARATION_MANUAL_ENABLE_CMD
		bool ET_SEPARATION_MANUAL_ENABLE_A_CMD = ((FF1_IOM15_CH1 & 0x0020) != 0);
		bool ET_SEPARATION_MANUAL_ENABLE_B_CMD = ((FF4_IOM15_CH1 & 0x0020) != 0);
		bool ET_SEPARATION_MANUAL_ENABLE_C_CMD = ((FF3_IOM15_CH1 & 0x0020) != 0);
		WriteCOMPOOL_IS( SCP_ET_SEPARATION_MANUAL_ENABLE_CMD,
			(ET_SEPARATION_MANUAL_ENABLE_A_CMD & ET_SEPARATION_MANUAL_ENABLE_B_CMD) |
			(ET_SEPARATION_MANUAL_ENABLE_A_CMD & ET_SEPARATION_MANUAL_ENABLE_C_CMD) |
			(ET_SEPARATION_MANUAL_ENABLE_B_CMD & ET_SEPARATION_MANUAL_ENABLE_C_CMD) );

		// ET_SEPARATION_INITIATE_CMD
		bool ET_SEPARATION_INITIATE_A_CMD = ((FF1_IOM15_CH1 & 0x0040) != 0);
		bool ET_SEPARATION_INITIATE_B_CMD = ((FF4_IOM15_CH1 & 0x0040) != 0);
		bool ET_SEPARATION_INITIATE_C_CMD = ((FF3_IOM15_CH1 & 0x0040) != 0);
		WriteCOMPOOL_IS( SCP_ET_SEPARATION_INITIATE_CMD,
			(ET_SEPARATION_INITIATE_A_CMD & ET_SEPARATION_INITIATE_B_CMD) |
			(ET_SEPARATION_INITIATE_A_CMD & ET_SEPARATION_INITIATE_C_CMD) |
			(ET_SEPARATION_INITIATE_B_CMD & ET_SEPARATION_INITIATE_C_CMD) );

		// ET_SEPARATION_AUTO_CMD
		bool ET_SEPARATION_AUTO_A_CMD = ((FF1_IOM15_CH1 & 0x0080) != 0);
		bool ET_SEPARATION_AUTO_B_CMD = ((FF4_IOM15_CH1 & 0x0080) != 0);
		bool ET_SEPARATION_AUTO_C_CMD = ((FF3_IOM15_CH1 & 0x0080) != 0);
		WriteCOMPOOL_IS( SCP_ET_SEPARATION_AUTO_CMD,
			(ET_SEPARATION_AUTO_A_CMD & ET_SEPARATION_AUTO_B_CMD) |
			(ET_SEPARATION_AUTO_A_CMD & ET_SEPARATION_AUTO_C_CMD) |
			(ET_SEPARATION_AUTO_B_CMD & ET_SEPARATION_AUTO_C_CMD) );


		unsigned short FF2_IOM9_CH1 = ReadCOMPOOL_IS( SCP_FF2_IOM9_CH1_DATA );
		unsigned short FF3_IOM9_CH1 = ReadCOMPOOL_IS( SCP_FF3_IOM9_CH1_DATA );

		// TODO safing cmd
		// MPS_ME_1_SHUTDOWN_CMD
		bool MPS_ME_1_SHUTDOWN_CMD_A = ((FF1_IOM4_CH0 & 0x0020) != 0);
		bool MPS_ME_1_SHUTDOWN_CMD_B = ((FF2_IOM4_CH0 & 0x0020) != 0);
		WriteCOMPOOL_IS( SCP_MPS_ME_1_SHUTDOWN_CMD, MPS_ME_1_SHUTDOWN_CMD_A & MPS_ME_1_SHUTDOWN_CMD_B );

		// TODO safing cmd
		// MPS_ME_2_SHUTDOWN_CMD
		bool MPS_ME_2_SHUTDOWN_CMD_A = ((FF2_IOM9_CH1 & 0x0001) != 0);
		bool MPS_ME_2_SHUTDOWN_CMD_B = ((FF3_IOM9_CH1 & 0x0001) != 0);
		WriteCOMPOOL_IS( SCP_MPS_ME_2_SHUTDOWN_CMD, MPS_ME_2_SHUTDOWN_CMD_A & MPS_ME_2_SHUTDOWN_CMD_B );

		// TODO safing cmd
		// MPS_ME_3_SHUTDOWN_CMD
		bool MPS_ME_3_SHUTDOWN_CMD_A = ((FF3_IOM4_CH0 & 0x0020) != 0);
		bool MPS_ME_3_SHUTDOWN_CMD_B = ((FF4_IOM4_CH0 & 0x0020) != 0);
		WriteCOMPOOL_IS( SCP_MPS_ME_3_SHUTDOWN_CMD, MPS_ME_3_SHUTDOWN_CMD_A & MPS_ME_3_SHUTDOWN_CMD_B );


		unsigned short FF1_IOM9_CH1 = ReadCOMPOOL_IS( SCP_FF1_IOM9_CH1_DATA );

		// SENSE_SWITCH
		bool SENSE_SW_Z_CON_A = ((FF1_IOM9_CH1 & 0x0002) != 0);
		bool SENSE_SW_Z_CON_B = ((FF2_IOM9_CH1 & 0x0002) != 0);
		bool SENSE_SW_Z_CON_C = ((FF3_IOM9_CH1 & 0x0002) != 0);
		bool SENSE_SW_X_CON_A = ((FF1_IOM9_CH1 & 0x0004) != 0);
		bool SENSE_SW_X_CON_B = ((FF2_IOM9_CH1 & 0x0004) != 0);
		bool SENSE_SW_X_CON_C = ((FF3_IOM9_CH1 & 0x0004) != 0);
		bool SENSE_SW_Z = (SENSE_SW_Z_CON_A & SENSE_SW_Z_CON_B) |
			(SENSE_SW_Z_CON_A & SENSE_SW_Z_CON_C) |
			(SENSE_SW_Z_CON_B & SENSE_SW_Z_CON_C);
		bool SENSE_SW_X = (SENSE_SW_X_CON_A & SENSE_SW_X_CON_B) |
			(SENSE_SW_X_CON_A & SENSE_SW_X_CON_C) |
			(SENSE_SW_X_CON_B & SENSE_SW_X_CON_C);
		WriteCOMPOOL_IS( SCP_SENSE_SWITCH, (!SENSE_SW_Z && SENSE_SW_X) ? 1 : 0 );// TODO C&W dilemma

		// ENTRY ROLL MODE
		unsigned short SEL_L_GAIN = 0;
		unsigned short SEL_NO_Y_JET = 0;
		if (ReadCOMPOOL_IS( SCP_ENTRY_SW_OVERRIDE ) != 1)// ignore switch if override on
		{
			unsigned short FF1_IOM4_CH2 = ReadCOMPOOL_IS( SCP_FF1_IOM4_CH2_DATA );
			unsigned short FF4_IOM9_CH1 = ReadCOMPOOL_IS( SCP_FF4_IOM9_CH1_DATA );
			unsigned short FF4_IOM12_CH2 = ReadCOMPOOL_IS( SCP_FF4_IOM12_CH2_DATA );

			unsigned short ENTRY_ROLL_MODE_NO_Y_JET_A = (FF1_IOM4_CH2 & 0x0008) >> 3;
			unsigned short ENTRY_ROLL_MODE_NO_Y_JET_B = (FF2_IOM4_CH0 & 0x0004) >> 2;
			unsigned short ENTRY_ROLL_MODE_NO_Y_JET_C = (FF3_IOM12_CH1 & 0x0004) >> 2;
			unsigned short ENTRY_ROLL_MODE_NO_Y_JET_D = (FF4_IOM12_CH2 & 0x8000) >> 15;
			unsigned short ENTRY_ROLL_MODE_L_GAIN_A = (FF1_IOM9_CH1 & 0x0008) >> 3;
			unsigned short ENTRY_ROLL_MODE_L_GAIN_B = (FF2_IOM9_CH1 & 0x0008) >> 3;
			unsigned short ENTRY_ROLL_MODE_L_GAIN_C = (FF3_IOM9_CH1 & 0x0008) >> 3;
			unsigned short ENTRY_ROLL_MODE_L_GAIN_D = (FF4_IOM9_CH1 & 0x0008) >> 3;

			unsigned short ENTRY_ROLL_MODE_NO_Y_JET_COUNT = ENTRY_ROLL_MODE_NO_Y_JET_A + ENTRY_ROLL_MODE_NO_Y_JET_B + ENTRY_ROLL_MODE_NO_Y_JET_C + ENTRY_ROLL_MODE_NO_Y_JET_D;
			unsigned short ENTRY_ROLL_MODE_L_GAIN_COUNT = ENTRY_ROLL_MODE_L_GAIN_A + ENTRY_ROLL_MODE_L_GAIN_B + ENTRY_ROLL_MODE_L_GAIN_C + ENTRY_ROLL_MODE_L_GAIN_D;

			if (ENTRY_ROLL_MODE_L_GAIN_COUNT > ENTRY_ROLL_MODE_NO_Y_JET_COUNT)
			{
				if (ENTRY_ROLL_MODE_L_GAIN_COUNT > 1) SEL_L_GAIN = 1;
			}
			else if (ENTRY_ROLL_MODE_NO_Y_JET_COUNT > ENTRY_ROLL_MODE_L_GAIN_COUNT)
			{
				if (ENTRY_ROLL_MODE_NO_Y_JET_COUNT > 1) SEL_NO_Y_JET = 1;
			}
		}
		WriteCOMPOOL_IS( SCP_SEL_L_GAIN, SEL_L_GAIN );
		WriteCOMPOOL_IS( SCP_SEL_NO_Y_JET, SEL_NO_Y_JET );


		unsigned short FF1_IOM4_CH1 = ReadCOMPOOL_IS( SCP_FF1_IOM4_CH1_DATA );
		unsigned short FF2_IOM4_CH1 = ReadCOMPOOL_IS( SCP_FF2_IOM4_CH1_DATA );
		unsigned short FF3_IOM4_CH1 = ReadCOMPOOL_IS( SCP_FF3_IOM4_CH1_DATA );
		unsigned short FF1_IOM4_CH2 = ReadCOMPOOL_IS( SCP_FF1_IOM4_CH2_DATA );
		unsigned short FF2_IOM12_CH2 = ReadCOMPOOL_IS( SCP_FF2_IOM12_CH2_DATA );
		unsigned short FF3_IOM12_CH2 = ReadCOMPOOL_IS( SCP_FF3_IOM12_CH2_DATA );
		unsigned short FF4_IOM12_CH2 = ReadCOMPOOL_IS( SCP_FF4_IOM12_CH2_DATA );

		// FCS_LH_PITCH_AUTO_MODE
		bool FCS_LH_PITCH_AUTO_MODE_A = ((FF1_IOM4_CH1 & 0x0400) != 0);
		bool FCS_LH_PITCH_AUTO_MODE_B = ((FF2_IOM4_CH1 & 0x0400) != 0);
		bool FCS_LH_PITCH_AUTO_MODE_C = ((FF3_IOM4_CH1 & 0x0400) != 0);
		WriteCOMPOOL_IS( SCP_FCS_LH_PITCH_AUTO_MODE,
			(FCS_LH_PITCH_AUTO_MODE_A & FCS_LH_PITCH_AUTO_MODE_B) |
			(FCS_LH_PITCH_AUTO_MODE_A & FCS_LH_PITCH_AUTO_MODE_C) |
			(FCS_LH_PITCH_AUTO_MODE_B & FCS_LH_PITCH_AUTO_MODE_C) );

		// FCS_LH_PITCH_CSS_MODE
		bool FCS_LH_PITCH_CSS_MODE_A = ((FF1_IOM4_CH1 & 0x0800) != 0);
		bool FCS_LH_PITCH_CSS_MODE_B = ((FF2_IOM4_CH1 & 0x0800) != 0);
		bool FCS_LH_PITCH_CSS_MODE_C = ((FF3_IOM4_CH1 & 0x0800) != 0);
		WriteCOMPOOL_IS( SCP_FCS_LH_PITCH_CSS_MODE,
			(FCS_LH_PITCH_CSS_MODE_A & FCS_LH_PITCH_CSS_MODE_B) |
			(FCS_LH_PITCH_CSS_MODE_A & FCS_LH_PITCH_CSS_MODE_C) |
			(FCS_LH_PITCH_CSS_MODE_B & FCS_LH_PITCH_CSS_MODE_C) );

		// FCS_LH_RY_AUTO_MODE
		bool FCS_LH_RY_AUTO_MODE_A = ((FF1_IOM4_CH1 & 0x2000) != 0);
		bool FCS_LH_RY_AUTO_MODE_B = ((FF2_IOM4_CH1 & 0x2000) != 0);
		bool FCS_LH_RY_AUTO_MODE_C = ((FF3_IOM4_CH1 & 0x2000) != 0);
		WriteCOMPOOL_IS( SCP_FCS_LH_RY_AUTO_MODE,
			(FCS_LH_RY_AUTO_MODE_A & FCS_LH_RY_AUTO_MODE_B) |
			(FCS_LH_RY_AUTO_MODE_A & FCS_LH_RY_AUTO_MODE_C) |
			(FCS_LH_RY_AUTO_MODE_B & FCS_LH_RY_AUTO_MODE_C) );

		// FCS_LH_RY_CSS_MODE
		bool FCS_LH_RY_CSS_MODE_A = ((FF1_IOM4_CH1 & 0x4000) != 0);
		bool FCS_LH_RY_CSS_MODE_B = ((FF2_IOM4_CH1 & 0x4000) != 0);
		bool FCS_LH_RY_CSS_MODE_C = ((FF3_IOM4_CH1 & 0x4000) != 0);
		WriteCOMPOOL_IS( SCP_FCS_LH_RY_CSS_MODE,
			(FCS_LH_RY_CSS_MODE_A & FCS_LH_RY_CSS_MODE_B) |
			(FCS_LH_RY_CSS_MODE_A & FCS_LH_RY_CSS_MODE_C) |
			(FCS_LH_RY_CSS_MODE_B & FCS_LH_RY_CSS_MODE_C) );

		// LH_BODY_FLAP_AUTO_MANUAL
		bool LH_BODY_FLAP_AUTO_MANUAL_A = ((FF1_IOM4_CH1 & 0x8000) != 0);
		bool LH_BODY_FLAP_AUTO_MANUAL_B = ((FF2_IOM4_CH1 & 0x8000) != 0);
		bool LH_BODY_FLAP_AUTO_MANUAL_C = ((FF3_IOM4_CH1 & 0x8000) != 0);
		WriteCOMPOOL_IS( SCP_LH_BODY_FLAP_AUTO_MANUAL,
			(LH_BODY_FLAP_AUTO_MANUAL_A & LH_BODY_FLAP_AUTO_MANUAL_B) |
			(LH_BODY_FLAP_AUTO_MANUAL_A & LH_BODY_FLAP_AUTO_MANUAL_C) |
			(LH_BODY_FLAP_AUTO_MANUAL_B & LH_BODY_FLAP_AUTO_MANUAL_C) );

		// LH_SPD_BK_THROT_AUTO_MAN
		bool LH_SPD_BK_THROT_AUTO_MAN_A = ((FF1_IOM4_CH2 & 0x0001) != 0);
		bool LH_SPD_BK_THROT_AUTO_MAN_B = ((FF2_IOM4_CH2 & 0x0001) != 0);
		bool LH_SPD_BK_THROT_AUTO_MAN_C = ((FF3_IOM4_CH2 & 0x0001) != 0);
		WriteCOMPOOL_IS( SCP_LH_SPD_BK_THROT_AUTO_MAN,
			(LH_SPD_BK_THROT_AUTO_MAN_A & LH_SPD_BK_THROT_AUTO_MAN_B) |
			(LH_SPD_BK_THROT_AUTO_MAN_A & LH_SPD_BK_THROT_AUTO_MAN_C) |
			(LH_SPD_BK_THROT_AUTO_MAN_B & LH_SPD_BK_THROT_AUTO_MAN_C) );

		// FCS_RH_PITCH_AUTO_MODE
		bool FCS_RH_PITCH_AUTO_MODE_A = ((FF2_IOM12_CH1 & 0x0400) != 0);
		bool FCS_RH_PITCH_AUTO_MODE_B = ((FF3_IOM12_CH1 & 0x0400) != 0);
		bool FCS_RH_PITCH_AUTO_MODE_C = ((FF4_IOM12_CH1 & 0x0400) != 0);
		WriteCOMPOOL_IS( SCP_FCS_RH_PITCH_AUTO_MODE,
			(FCS_RH_PITCH_AUTO_MODE_A & FCS_RH_PITCH_AUTO_MODE_B) |
			(FCS_RH_PITCH_AUTO_MODE_A & FCS_RH_PITCH_AUTO_MODE_C) |
			(FCS_RH_PITCH_AUTO_MODE_B & FCS_RH_PITCH_AUTO_MODE_C) );

		// FCS_RH_PITCH_CSS_MODE
		bool FCS_RH_PITCH_CSS_MODE_A = ((FF2_IOM12_CH1 & 0x0800) != 0);
		bool FCS_RH_PITCH_CSS_MODE_B = ((FF3_IOM12_CH1 & 0x0800) != 0);
		bool FCS_RH_PITCH_CSS_MODE_C = ((FF4_IOM12_CH1 & 0x0800) != 0);
		WriteCOMPOOL_IS( SCP_FCS_RH_PITCH_CSS_MODE,
			(FCS_RH_PITCH_CSS_MODE_A & FCS_RH_PITCH_CSS_MODE_B) |
			(FCS_RH_PITCH_CSS_MODE_A & FCS_RH_PITCH_CSS_MODE_C) |
			(FCS_RH_PITCH_CSS_MODE_B & FCS_RH_PITCH_CSS_MODE_C) );

		// FCS_RH_RY_AUTO_MODE
		bool FCS_RH_RY_AUTO_MODE_A = ((FF2_IOM12_CH1 & 0x2000) != 0);
		bool FCS_RH_RY_AUTO_MODE_B = ((FF3_IOM12_CH1 & 0x2000) != 0);
		bool FCS_RH_RY_AUTO_MODE_C = ((FF4_IOM12_CH1 & 0x2000) != 0);
		WriteCOMPOOL_IS( SCP_FCS_RH_RY_AUTO_MODE,
			(FCS_RH_RY_AUTO_MODE_A & FCS_RH_RY_AUTO_MODE_B) |
			(FCS_RH_RY_AUTO_MODE_A & FCS_RH_RY_AUTO_MODE_C) |
			(FCS_RH_RY_AUTO_MODE_B & FCS_RH_RY_AUTO_MODE_C) );

		// FCS_RH_RY_CSS_MODE
		bool FCS_RH_RY_CSS_MODE_A = ((FF2_IOM12_CH1 & 0x4000) != 0);
		bool FCS_RH_RY_CSS_MODE_B = ((FF3_IOM12_CH1 & 0x4000) != 0);
		bool FCS_RH_RY_CSS_MODE_C = ((FF4_IOM12_CH1 & 0x4000) != 0);
		WriteCOMPOOL_IS( SCP_FCS_RH_RY_CSS_MODE,
			(FCS_RH_RY_CSS_MODE_A & FCS_RH_RY_CSS_MODE_B) |
			(FCS_RH_RY_CSS_MODE_A & FCS_RH_RY_CSS_MODE_C) |
			(FCS_RH_RY_CSS_MODE_B & FCS_RH_RY_CSS_MODE_C) );

		// RH_BODY_FLAP_AUTO_MANUAL
		bool RH_BODY_FLAP_AUTO_MANUAL_A = ((FF2_IOM12_CH1 & 0x8000) != 0);
		bool RH_BODY_FLAP_AUTO_MANUAL_B = ((FF3_IOM12_CH1 & 0x8000) != 0);
		bool RH_BODY_FLAP_AUTO_MANUAL_C = ((FF4_IOM12_CH1 & 0x8000) != 0);
		WriteCOMPOOL_IS( SCP_RH_BODY_FLAP_AUTO_MANUAL,
			(RH_BODY_FLAP_AUTO_MANUAL_A & RH_BODY_FLAP_AUTO_MANUAL_B) |
			(RH_BODY_FLAP_AUTO_MANUAL_A & RH_BODY_FLAP_AUTO_MANUAL_C) |
			(RH_BODY_FLAP_AUTO_MANUAL_B & RH_BODY_FLAP_AUTO_MANUAL_C) );

		// RH_SPD_BK_THROT_AUTO_MAN
		bool RH_SPD_BK_THROT_AUTO_MAN_A = ((FF2_IOM12_CH2 & 0x0001) != 0);
		bool RH_SPD_BK_THROT_AUTO_MAN_B = ((FF3_IOM12_CH2 & 0x0001) != 0);
		bool RH_SPD_BK_THROT_AUTO_MAN_C = ((FF4_IOM12_CH2 & 0x0001) != 0);
		WriteCOMPOOL_IS( SCP_RH_SPD_BK_THROT_AUTO_MAN,
			(RH_SPD_BK_THROT_AUTO_MAN_A & RH_SPD_BK_THROT_AUTO_MAN_B) |
			(RH_SPD_BK_THROT_AUTO_MAN_A & RH_SPD_BK_THROT_AUTO_MAN_C) |
			(RH_SPD_BK_THROT_AUTO_MAN_B & RH_SPD_BK_THROT_AUTO_MAN_C) );



		unsigned short FF1_IOM9_CH0 = ReadCOMPOOL_IS( SCP_FF1_IOM9_CH0_DATA );
		unsigned short FF2_IOM9_CH0 = ReadCOMPOOL_IS( SCP_FF2_IOM9_CH0_DATA );
		unsigned short FF3_IOM9_CH0 = ReadCOMPOOL_IS( SCP_FF3_IOM9_CH0_DATA );
		unsigned short FF4_IOM9_CH0 = ReadCOMPOOL_IS( SCP_FF4_IOM9_CH0_DATA );
		unsigned short FF4_IOM9_CH1 = ReadCOMPOOL_IS( SCP_FF4_IOM9_CH1_DATA );
		unsigned short FF1_IOM12_CH2 = ReadCOMPOOL_IS( SCP_FF1_IOM12_CH2_DATA );

		// FWD_DAP_SELECT_A
		bool FWD_DAP_SELECT_A_A = ((FF1_IOM9_CH0 & 0x0010) != 0);
		bool FWD_DAP_SELECT_A_B = ((FF2_IOM9_CH0 & 0x0010) != 0);
		bool FWD_DAP_SELECT_A_C = ((FF3_IOM9_CH0 & 0x0100) != 0);
		WriteCOMPOOL_IS( SCP_FWD_DAP_SELECT_A,
			(FWD_DAP_SELECT_A_A & FWD_DAP_SELECT_A_B) |
			(FWD_DAP_SELECT_A_A & FWD_DAP_SELECT_A_C) |
			(FWD_DAP_SELECT_A_B & FWD_DAP_SELECT_A_C) );

		// FWD_DAP_SELECT_B
		bool FWD_DAP_SELECT_B_A = ((FF1_IOM9_CH0 & 0x0020) != 0);
		bool FWD_DAP_SELECT_B_B = ((FF2_IOM9_CH0 & 0x0020) != 0);
		bool FWD_DAP_SELECT_B_C = ((FF3_IOM9_CH0 & 0x0200) != 0);
		WriteCOMPOOL_IS( SCP_FWD_DAP_SELECT_B,
			(FWD_DAP_SELECT_B_A & FWD_DAP_SELECT_B_B) |
			(FWD_DAP_SELECT_B_A & FWD_DAP_SELECT_B_C) |
			(FWD_DAP_SELECT_B_B & FWD_DAP_SELECT_B_C) );

		// FWD_DAP_AUTO
		bool FWD_DAP_AUTO_A = ((FF1_IOM9_CH0 & 0x0100) != 0);
		bool FWD_DAP_AUTO_B = ((FF2_IOM9_CH0 & 0x0100) != 0);
		bool FWD_DAP_AUTO_C = ((FF3_IOM9_CH0 & 0x0400) != 0);
		WriteCOMPOOL_IS( SCP_FWD_DAP_AUTO,
			(FWD_DAP_AUTO_A & FWD_DAP_AUTO_B) |
			(FWD_DAP_AUTO_A & FWD_DAP_AUTO_C) |
			(FWD_DAP_AUTO_B & FWD_DAP_AUTO_C) );

		// FWD_DAP_MAN
		bool FWD_DAP_MAN_A = ((FF1_IOM9_CH0 & 0x0200) != 0);
		bool FWD_DAP_MAN_B = ((FF2_IOM9_CH0 & 0x0200) != 0);
		bool FWD_DAP_MAN_C = ((FF3_IOM9_CH0 & 0x0800) != 0);
		WriteCOMPOOL_IS( SCP_FWD_DAP_MAN,
			(FWD_DAP_MAN_A & FWD_DAP_MAN_B) |
			(FWD_DAP_MAN_A & FWD_DAP_MAN_C) |
			(FWD_DAP_MAN_B & FWD_DAP_MAN_C) );

		// FWD_RCS_OPTIONS_NORM
		bool FWD_RCS_OPTIONS_NORM_A = ((FF1_IOM9_CH1 & 0x2000) != 0);
		bool FWD_RCS_OPTIONS_NORM_B = ((FF2_IOM9_CH1 & 0x2000) != 0);
		bool FWD_RCS_OPTIONS_NORM_C = ((FF3_IOM12_CH2 & 0x4000) != 0);
		WriteCOMPOOL_IS( SCP_FWD_RCS_OPTIONS_NORM,
			(FWD_RCS_OPTIONS_NORM_A & FWD_RCS_OPTIONS_NORM_B) |
			(FWD_RCS_OPTIONS_NORM_A & FWD_RCS_OPTIONS_NORM_C) |
			(FWD_RCS_OPTIONS_NORM_B & FWD_RCS_OPTIONS_NORM_C) );

		// FWD_RCS_OPTIONS_VERNIER
		bool FWD_RCS_OPTIONS_VERNIER_A = ((FF1_IOM9_CH1 & 0x4000) != 0);
		bool FWD_RCS_OPTIONS_VERNIER_B = ((FF2_IOM9_CH1 & 0x4000) != 0);
		bool FWD_RCS_OPTIONS_VERNIER_C = ((FF3_IOM12_CH2 & 0x8000) != 0);
		WriteCOMPOOL_IS( SCP_FWD_RCS_OPTIONS_VERNIER,
			(FWD_RCS_OPTIONS_VERNIER_A & FWD_RCS_OPTIONS_VERNIER_B) |
			(FWD_RCS_OPTIONS_VERNIER_A & FWD_RCS_OPTIONS_VERNIER_C) |
			(FWD_RCS_OPTIONS_VERNIER_B & FWD_RCS_OPTIONS_VERNIER_C) );

		// FWD_ROTATION_ROLL_DISC_RATE
		bool FWD_ROTATION_ROLL_DISC_RATE_A = ((FF1_IOM9_CH1 & 0x0010) != 0);
		bool FWD_ROTATION_ROLL_DISC_RATE_B = ((FF2_IOM9_CH1 & 0x0010) != 0);
		WriteCOMPOOL_IS( SCP_FWD_ROTATION_ROLL_DISC_RATE, FWD_ROTATION_ROLL_DISC_RATE_A & FWD_ROTATION_ROLL_DISC_RATE_B );

		// FWD_ROTATION_ROLL_ACCEL
		bool FWD_ROTATION_ROLL_ACCEL_A = ((FF1_IOM9_CH1 & 0x0020) != 0);
		bool FWD_ROTATION_ROLL_ACCEL_B = ((FF2_IOM9_CH1 & 0x0020) != 0);
		WriteCOMPOOL_IS( SCP_FWD_ROTATION_ROLL_ACCEL, FWD_ROTATION_ROLL_ACCEL_A & FWD_ROTATION_ROLL_ACCEL_B );

		// FWD_ROTATION_ROLL_PULSE
		bool FWD_ROTATION_ROLL_PULSE_A = ((FF1_IOM9_CH1 & 0x0040) != 0);
		bool FWD_ROTATION_ROLL_PULSE_B = ((FF2_IOM9_CH1 & 0x0040) != 0);
		WriteCOMPOOL_IS( SCP_FWD_ROTATION_ROLL_PULSE, FWD_ROTATION_ROLL_PULSE_A & FWD_ROTATION_ROLL_PULSE_B );

		// FWD_ROTATION_PITCH_DISC_RATE
		bool FWD_ROTATION_PITCH_DISC_RATE_A = ((FF1_IOM9_CH1 & 0x0080) != 0);
		bool FWD_ROTATION_PITCH_DISC_RATE_B = ((FF2_IOM9_CH1 & 0x0080) != 0);
		WriteCOMPOOL_IS( SCP_FWD_ROTATION_PITCH_DISC_RATE, FWD_ROTATION_PITCH_DISC_RATE_A & FWD_ROTATION_PITCH_DISC_RATE_B );

		// FWD_ROTATION_PITCH_ACCEL
		bool FWD_ROTATION_PITCH_ACCEL_A = ((FF1_IOM9_CH1 & 0x0100) != 0);
		bool FWD_ROTATION_PITCH_ACCEL_B = ((FF2_IOM9_CH1 & 0x0100) != 0);
		WriteCOMPOOL_IS( SCP_FWD_ROTATION_PITCH_ACCEL, FWD_ROTATION_PITCH_ACCEL_A & FWD_ROTATION_PITCH_ACCEL_B );

		// FWD_ROTATION_PITCH_PULSE
		bool FWD_ROTATION_PITCH_PULSE_A = ((FF1_IOM9_CH1 & 0x0200) != 0);
		bool FWD_ROTATION_PITCH_PULSE_B = ((FF2_IOM9_CH1 & 0x0200) != 0);
		WriteCOMPOOL_IS( SCP_FWD_ROTATION_PITCH_PULSE, FWD_ROTATION_PITCH_PULSE_A & FWD_ROTATION_PITCH_PULSE_B );

		// FWD_ROTATION_YAW_DISC_RATE
		bool FWD_ROTATION_YAW_DISC_RATE_A = ((FF1_IOM9_CH1 & 0x0400) != 0);
		bool FWD_ROTATION_YAW_DISC_RATE_B = ((FF2_IOM9_CH1 & 0x0400) != 0);
		WriteCOMPOOL_IS( SCP_FWD_ROTATION_YAW_DISC_RATE, FWD_ROTATION_YAW_DISC_RATE_A & FWD_ROTATION_YAW_DISC_RATE_B );

		// FWD_ROTATION_YAW_ACCEL
		bool FWD_ROTATION_YAW_ACCEL_A = ((FF1_IOM9_CH1 & 0x0800) != 0);
		bool FWD_ROTATION_YAW_ACCEL_B = ((FF2_IOM9_CH1 & 0x0800) != 0);
		WriteCOMPOOL_IS( SCP_FWD_ROTATION_YAW_ACCEL, FWD_ROTATION_YAW_ACCEL_A & FWD_ROTATION_YAW_ACCEL_B );

		// FWD_ROTATION_YAW_PULSE
		bool FWD_ROTATION_YAW_PULSE_A = ((FF1_IOM9_CH1 & 0x1000) != 0);
		bool FWD_ROTATION_YAW_PULSE_B = ((FF2_IOM9_CH1 & 0x1000) != 0);
		WriteCOMPOOL_IS( SCP_FWD_ROTATION_YAW_PULSE, FWD_ROTATION_YAW_PULSE_A & FWD_ROTATION_YAW_PULSE_B );

		// FWD_TRANSLATION_X_NORM
		bool FWD_TRANSLATION_X_NORM_A = ((FF1_IOM9_CH1 & 0x8000) != 0);
		bool FWD_TRANSLATION_X_NORM_B = ((FF2_IOM9_CH1 & 0x8000) != 0);
		WriteCOMPOOL_IS( SCP_FWD_TRANSLATION_X_NORM, FWD_TRANSLATION_X_NORM_A & FWD_TRANSLATION_X_NORM_B );

		// FWD_TRANSLATION_X_PULSE
		bool FWD_TRANSLATION_X_PULSE_A = ((FF1_IOM9_CH2 & 0x0001) != 0);
		bool FWD_TRANSLATION_X_PULSE_B = ((FF2_IOM9_CH2 & 0x0001) != 0);
		WriteCOMPOOL_IS( SCP_FWD_TRANSLATION_X_PULSE, FWD_TRANSLATION_X_PULSE_A & FWD_TRANSLATION_X_PULSE_B );

		// FWD_TRANSLATION_X_LVLH
		bool FWD_TRANSLATION_X_LVLH_A = ((FF1_IOM9_CH2 & 0x0002) != 0);
		bool FWD_TRANSLATION_X_LVLH_B = ((FF2_IOM9_CH2 & 0x0002) != 0);
		WriteCOMPOOL_IS( SCP_FWD_TRANSLATION_X_LVLH, FWD_TRANSLATION_X_LVLH_A & FWD_TRANSLATION_X_LVLH_B );

		// FWD_TRANSLATION_Y_NORM
		bool FWD_TRANSLATION_Y_NORM_A = ((FF1_IOM9_CH2 & 0x0004) != 0);
		bool FWD_TRANSLATION_Y_NORM_B = ((FF2_IOM9_CH2 & 0x0004) != 0);
		WriteCOMPOOL_IS( SCP_FWD_TRANSLATION_Y_NORM, FWD_TRANSLATION_Y_NORM_A & FWD_TRANSLATION_Y_NORM_B );

		// FWD_TRANSLATION_Y_PULSE
		bool FWD_TRANSLATION_Y_PULSE_A = ((FF1_IOM9_CH2 & 0x0008) != 0);
		bool FWD_TRANSLATION_Y_PULSE_B = ((FF2_IOM9_CH2 & 0x0008) != 0);
		WriteCOMPOOL_IS( SCP_FWD_TRANSLATION_Y_PULSE, FWD_TRANSLATION_Y_PULSE_A & FWD_TRANSLATION_Y_PULSE_B );

		// FWD_TRANSLATION_Y_LOW_Z
		bool FWD_TRANSLATION_Y_LOW_Z_A = ((FF1_IOM9_CH2 & 0x0010) != 0);
		bool FWD_TRANSLATION_Y_LOW_Z_B = ((FF2_IOM9_CH2 & 0x0010) != 0);
		WriteCOMPOOL_IS( SCP_FWD_TRANSLATION_Y_LOW_Z, FWD_TRANSLATION_Y_LOW_Z_A & FWD_TRANSLATION_Y_LOW_Z_B );

		// FWD_TRANSLATION_Z_NORM
		bool FWD_TRANSLATION_Z_NORM_A = ((FF1_IOM9_CH2 & 0x0020) != 0);
		bool FWD_TRANSLATION_Z_NORM_B = ((FF2_IOM9_CH2 & 0x0020) != 0);
		WriteCOMPOOL_IS( SCP_FWD_TRANSLATION_Z_NORM, FWD_TRANSLATION_Z_NORM_A & FWD_TRANSLATION_Z_NORM_B );

		// FWD_TRANSLATION_Z_PULSE
		bool FWD_TRANSLATION_Z_PULSE_A = ((FF1_IOM9_CH2 & 0x0040) != 0);
		bool FWD_TRANSLATION_Z_PULSE_B = ((FF2_IOM9_CH2 & 0x0040) != 0);
		WriteCOMPOOL_IS( SCP_FWD_TRANSLATION_Z_PULSE, FWD_TRANSLATION_Z_PULSE_A & FWD_TRANSLATION_Z_PULSE_B );

		// FWD_TRANSLATION_Z_HIGH
		bool FWD_TRANSLATION_Z_HIGH_A = ((FF1_IOM9_CH2 & 0x0080) != 0);
		bool FWD_TRANSLATION_Z_HIGH_B = ((FF2_IOM9_CH2 & 0x0080) != 0);
		WriteCOMPOOL_IS( SCP_FWD_TRANSLATION_Z_HIGH, FWD_TRANSLATION_Z_HIGH_A & FWD_TRANSLATION_Z_HIGH_B );

		// AFT_DAP_SELECT_A
		bool AFT_DAP_SELECT_A_A = ((FF3_IOM9_CH0 & 0x0010) != 0);
		bool AFT_DAP_SELECT_A_B = ((FF4_IOM9_CH0 & 0x0010) != 0);
		bool AFT_DAP_SELECT_A_C = ((FF1_IOM9_CH0 & 0x0040) != 0);
		WriteCOMPOOL_IS( SCP_AFT_DAP_SELECT_A,
			(AFT_DAP_SELECT_A_A & AFT_DAP_SELECT_A_B) |
			(AFT_DAP_SELECT_A_A & AFT_DAP_SELECT_A_C) |
			(AFT_DAP_SELECT_A_B & AFT_DAP_SELECT_A_C) );

		// AFT_DAP_SELECT_B
		bool AFT_DAP_SELECT_B_A = ((FF3_IOM9_CH0 & 0x0020) != 0);
		bool AFT_DAP_SELECT_B_B = ((FF4_IOM9_CH0 & 0x0020) != 0);
		bool AFT_DAP_SELECT_B_C = ((FF1_IOM9_CH0 & 0x0080) != 0);
		WriteCOMPOOL_IS( SCP_AFT_DAP_SELECT_B,
			(AFT_DAP_SELECT_B_A & AFT_DAP_SELECT_B_B) |
			(AFT_DAP_SELECT_B_A & AFT_DAP_SELECT_B_C) |
			(AFT_DAP_SELECT_B_B & AFT_DAP_SELECT_B_C) );

		// AFT_DAP_AUTO
		bool AFT_DAP_AUTO_A = ((FF3_IOM9_CH0 & 0x0100) != 0);
		bool AFT_DAP_AUTO_B = ((FF4_IOM9_CH0 & 0x0100) != 0);
		bool AFT_DAP_AUTO_C = ((FF1_IOM9_CH0 & 0x0400) != 0);
		WriteCOMPOOL_IS( SCP_AFT_DAP_AUTO,
			(AFT_DAP_AUTO_A & AFT_DAP_AUTO_B) |
			(AFT_DAP_AUTO_A & AFT_DAP_AUTO_C) |
			(AFT_DAP_AUTO_B & AFT_DAP_AUTO_C) );

		// AFT_DAP_MAN
		bool AFT_DAP_MAN_A = ((FF3_IOM9_CH0 & 0x0200) != 0);
		bool AFT_DAP_MAN_B = ((FF4_IOM9_CH0 & 0x0200) != 0);
		bool AFT_DAP_MAN_C = ((FF1_IOM9_CH0 & 0x0800) != 0);
		WriteCOMPOOL_IS( SCP_AFT_DAP_MAN,
			(AFT_DAP_MAN_A & AFT_DAP_MAN_B) |
			(AFT_DAP_MAN_A & AFT_DAP_MAN_C) |
			(AFT_DAP_MAN_B & AFT_DAP_MAN_C) );

		// AFT_RCS_OPTIONS_NORM
		bool AFT_RCS_OPTIONS_NORM_A = ((FF3_IOM9_CH1 & 0x2000) != 0);
		bool AFT_RCS_OPTIONS_NORM_B = ((FF4_IOM9_CH1 & 0x2000) != 0);
		bool AFT_RCS_OPTIONS_NORM_C = ((FF1_IOM12_CH2 & 0x4000) != 0);
		WriteCOMPOOL_IS( SCP_AFT_RCS_OPTIONS_NORM,
			(AFT_RCS_OPTIONS_NORM_A & AFT_RCS_OPTIONS_NORM_B) |
			(AFT_RCS_OPTIONS_NORM_A & AFT_RCS_OPTIONS_NORM_C) |
			(AFT_RCS_OPTIONS_NORM_B & AFT_RCS_OPTIONS_NORM_C) );

		// AFT_RCS_OPTIONS_VERNIER
		bool AFT_RCS_OPTIONS_VERNIER_A = ((FF3_IOM9_CH1 & 0x4000) != 0);
		bool AFT_RCS_OPTIONS_VERNIER_B = ((FF4_IOM9_CH1 & 0x4000) != 0);
		bool AFT_RCS_OPTIONS_VERNIER_C = ((FF1_IOM12_CH2 & 0x8000) != 0);
		WriteCOMPOOL_IS( SCP_AFT_RCS_OPTIONS_VERNIER,
			(AFT_RCS_OPTIONS_VERNIER_A & AFT_RCS_OPTIONS_VERNIER_B) |
			(AFT_RCS_OPTIONS_VERNIER_A & AFT_RCS_OPTIONS_VERNIER_C) |
			(AFT_RCS_OPTIONS_VERNIER_B & AFT_RCS_OPTIONS_VERNIER_C) );

		// AFT_ROTATION_ROLL_DISC_RATE
		bool AFT_ROTATION_ROLL_DISC_RATE_A = ((FF3_IOM9_CH1 & 0x0010) != 0);
		bool AFT_ROTATION_ROLL_DISC_RATE_B = ((FF4_IOM9_CH1 & 0x0010) != 0);
		WriteCOMPOOL_IS( SCP_AFT_ROTATION_ROLL_DISC_RATE, AFT_ROTATION_ROLL_DISC_RATE_A & AFT_ROTATION_ROLL_DISC_RATE_B );

		// AFT_ROTATION_ROLL_ACCEL
		bool AFT_ROTATION_ROLL_ACCEL_A = ((FF3_IOM9_CH1 & 0x0020) != 0);
		bool AFT_ROTATION_ROLL_ACCEL_B = ((FF4_IOM9_CH1 & 0x0020) != 0);
		WriteCOMPOOL_IS( SCP_AFT_ROTATION_ROLL_ACCEL, AFT_ROTATION_ROLL_ACCEL_A & AFT_ROTATION_ROLL_ACCEL_B );

		// AFT_ROTATION_ROLL_PULSE
		bool AFT_ROTATION_ROLL_PULSE_A = ((FF3_IOM9_CH1 & 0x0040) != 0);
		bool AFT_ROTATION_ROLL_PULSE_B = ((FF4_IOM9_CH1 & 0x0040) != 0);
		WriteCOMPOOL_IS( SCP_AFT_ROTATION_ROLL_PULSE, AFT_ROTATION_ROLL_PULSE_A & AFT_ROTATION_ROLL_PULSE_B );

		// AFT_ROTATION_PITCH_DISC_RATE
		bool AFT_ROTATION_PITCH_DISC_RATE_A = ((FF3_IOM9_CH1 & 0x0080) != 0);
		bool AFT_ROTATION_PITCH_DISC_RATE_B = ((FF4_IOM9_CH1 & 0x0080) != 0);
		WriteCOMPOOL_IS( SCP_AFT_ROTATION_PITCH_DISC_RATE, AFT_ROTATION_PITCH_DISC_RATE_A & AFT_ROTATION_PITCH_DISC_RATE_B );

		// AFT_ROTATION_PITCH_ACCEL
		bool AFT_ROTATION_PITCH_ACCEL_A = ((FF3_IOM9_CH1 & 0x0100) != 0);
		bool AFT_ROTATION_PITCH_ACCEL_B = ((FF4_IOM9_CH1 & 0x0100) != 0);
		WriteCOMPOOL_IS( SCP_AFT_ROTATION_PITCH_ACCEL, AFT_ROTATION_PITCH_ACCEL_A & AFT_ROTATION_PITCH_ACCEL_B );

		// AFT_ROTATION_PITCH_PULSE
		bool AFT_ROTATION_PITCH_PULSE_A = ((FF3_IOM9_CH1 & 0x0200) != 0);
		bool AFT_ROTATION_PITCH_PULSE_B = ((FF4_IOM9_CH1 & 0x0200) != 0);
		WriteCOMPOOL_IS( SCP_AFT_ROTATION_PITCH_PULSE, AFT_ROTATION_PITCH_PULSE_A & AFT_ROTATION_PITCH_PULSE_B );

		// AFT_ROTATION_YAW_DISC_RATE
		bool AFT_ROTATION_YAW_DISC_RATE_A = ((FF3_IOM9_CH1 & 0x0400) != 0);
		bool AFT_ROTATION_YAW_DISC_RATE_B = ((FF4_IOM9_CH1 & 0x0400) != 0);
		WriteCOMPOOL_IS( SCP_AFT_ROTATION_YAW_DISC_RATE, AFT_ROTATION_YAW_DISC_RATE_A & AFT_ROTATION_YAW_DISC_RATE_B );

		// AFT_ROTATION_YAW_ACCEL
		bool AFT_ROTATION_YAW_ACCEL_A = ((FF3_IOM9_CH1 & 0x0800) != 0);
		bool AFT_ROTATION_YAW_ACCEL_B = ((FF4_IOM9_CH1 & 0x0800) != 0);
		WriteCOMPOOL_IS( SCP_AFT_ROTATION_YAW_ACCEL, AFT_ROTATION_YAW_ACCEL_A & AFT_ROTATION_YAW_ACCEL_B );

		// AFT_ROTATION_YAW_PULSE
		bool AFT_ROTATION_YAW_PULSE_A = ((FF3_IOM9_CH1 & 0x1000) != 0);
		bool AFT_ROTATION_YAW_PULSE_B = ((FF4_IOM9_CH1 & 0x1000) != 0);
		WriteCOMPOOL_IS( SCP_AFT_ROTATION_YAW_PULSE, AFT_ROTATION_YAW_PULSE_A & AFT_ROTATION_YAW_PULSE_B );

		// AFT_TRANSLATION_X_NORM
		bool AFT_TRANSLATION_X_NORM_A = ((FF3_IOM9_CH1 & 0x8000) != 0);
		bool AFT_TRANSLATION_X_NORM_B = ((FF4_IOM9_CH1 & 0x8000) != 0);
		WriteCOMPOOL_IS( SCP_AFT_TRANSLATION_X_NORM, AFT_TRANSLATION_X_NORM_A & AFT_TRANSLATION_X_NORM_B );

		// AFT_TRANSLATION_X_PULSE
		bool AFT_TRANSLATION_X_PULSE_A = ((FF3_IOM9_CH2 & 0x0001) != 0);
		bool AFT_TRANSLATION_X_PULSE_B = ((FF4_IOM9_CH2 & 0x0001) != 0);
		WriteCOMPOOL_IS( SCP_AFT_TRANSLATION_X_PULSE, AFT_TRANSLATION_X_PULSE_A & AFT_TRANSLATION_X_PULSE_B );

		// AFT_TRANSLATION_X_LVLH
		bool AFT_TRANSLATION_X_LVLH_A = ((FF3_IOM9_CH2 & 0x0002) != 0);
		bool AFT_TRANSLATION_X_LVLH_B = ((FF4_IOM9_CH2 & 0x0002) != 0);
		WriteCOMPOOL_IS( SCP_AFT_TRANSLATION_X_LVLH, AFT_TRANSLATION_X_LVLH_A & AFT_TRANSLATION_X_LVLH_B );

		// AFT_TRANSLATION_Y_NORM
		bool AFT_TRANSLATION_Y_NORM_A = ((FF3_IOM9_CH2 & 0x0004) != 0);
		bool AFT_TRANSLATION_Y_NORM_B = ((FF4_IOM9_CH2 & 0x0004) != 0);
		WriteCOMPOOL_IS( SCP_AFT_TRANSLATION_Y_NORM, AFT_TRANSLATION_Y_NORM_A & AFT_TRANSLATION_Y_NORM_B );

		// AFT_TRANSLATION_Y_PULSE
		bool AFT_TRANSLATION_Y_PULSE_A = ((FF3_IOM9_CH2 & 0x0008) != 0);
		bool AFT_TRANSLATION_Y_PULSE_B = ((FF4_IOM9_CH2 & 0x0008) != 0);
		WriteCOMPOOL_IS( SCP_AFT_TRANSLATION_Y_PULSE, AFT_TRANSLATION_Y_PULSE_A & AFT_TRANSLATION_Y_PULSE_B );

		// AFT_TRANSLATION_Y_LOW_Z
		bool AFT_TRANSLATION_Y_LOW_Z_A = ((FF3_IOM9_CH2 & 0x0010) != 0);
		bool AFT_TRANSLATION_Y_LOW_Z_B = ((FF4_IOM9_CH2 & 0x0010) != 0);
		WriteCOMPOOL_IS( SCP_AFT_TRANSLATION_Y_LOW_Z, AFT_TRANSLATION_Y_LOW_Z_A & AFT_TRANSLATION_Y_LOW_Z_B );

		// AFT_TRANSLATION_Z_NORM
		bool AFT_TRANSLATION_Z_NORM_A = ((FF3_IOM9_CH2 & 0x0020) != 0);
		bool AFT_TRANSLATION_Z_NORM_B = ((FF4_IOM9_CH2 & 0x0020) != 0);
		WriteCOMPOOL_IS( SCP_AFT_TRANSLATION_Z_NORM, AFT_TRANSLATION_Z_NORM_A & AFT_TRANSLATION_Z_NORM_B );

		// AFT_TRANSLATION_Z_PULSE
		bool AFT_TRANSLATION_Z_PULSE_A = ((FF3_IOM9_CH2 & 0x0040) != 0);
		bool AFT_TRANSLATION_Z_PULSE_B = ((FF4_IOM9_CH2 & 0x0040) != 0);
		WriteCOMPOOL_IS( SCP_AFT_TRANSLATION_Z_PULSE, AFT_TRANSLATION_Z_PULSE_A & AFT_TRANSLATION_Z_PULSE_B );

		// AFT_TRANSLATION_Z_HIGH
		bool AFT_TRANSLATION_Z_HIGH_A = ((FF3_IOM9_CH2 & 0x0080) != 0);
		bool AFT_TRANSLATION_Z_HIGH_B = ((FF4_IOM9_CH2 & 0x0080) != 0);
		WriteCOMPOOL_IS( SCP_AFT_TRANSLATION_Z_HIGH, AFT_TRANSLATION_Z_HIGH_A & AFT_TRANSLATION_Z_HIGH_B );
		return;
	}

	bool Switch_RM::OnMajorModeChange( unsigned int newMajorMode )
	{
		switch (newMajorMode)
		{
			case 101:
			case 102:
			case 103:
			case 104:
			case 105:
			case 106:
			case 201:
			case 202:
			case 301:
			case 302:
			case 303:
			case 304:
			case 305:
			case 601:
			case 602:
			case 603:
			case 801:
			case 901:
				return true;
			default:
				return false;
		}
	}
}
