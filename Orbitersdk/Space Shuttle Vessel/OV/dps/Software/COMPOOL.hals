C	----------------------------------------------------------------
C	SSV COMPOOL definition
C	----------------------------------------------------------------
C	INTEGER:
C	SINGLE => 16b
C	DOUBLE => 32b
C	SCALAR:
C	SINGLE => 32b
C	DOUBLE => 64b
C
C	memory configuration
	DECLARE MC INTEGER SINGLE;
C	current major mode
	DECLARE MM INTEGER SINGLE;
C	new major mode
	DECLARE NEW_MM INTEGER SINGLE;
C
C	MDM return word output
	DECLARE MDM_RETURN INTEGER SINGLE;
C
C	bypass/commfault words
C	word 0:
C	0 - FF1	FF Input Prom Seq 1,2 (MFE)
C	1 - FF2	FF Input Prom Seq 1,2 (MFE)
C	2 - FF3	FF Input Prom Seq 1,2 (MFE)
C	3 - FF4	FF Input Prom Seq 1,2 (MFE)
C	4 - FF1	TACAN/RA (MFE)
C	5 - FF2	TACAN/RA (MFE)
C	6 - FF3	TACAN/RA (MFE)
C	7 -
C	8 - FF1	MSBLS (MFE)
C	9 - FF2	MSBLS (MFE)
C	10 - FF3	MSBLS (MFE)
C	11 -
C	12 - FF1	IMU (MFE)
C	13 - FF2	IMU (MFE)
C	14 - FF3	IMU (MFE)
C	15 -
C	16 -
C	17 -
C	18 - FF1	STU (MFE)
C	19 - FF3	STU (MFE)
C	20 - FF3	Rendezvous Radar (MFE)
C	21 -
C	22 -
C	23 -
C	24 - EIU1	EIU1/P1 (MFE)
C	25 - EIU2	EIU2/P1 (MFE)
C	26 - EIU3	EIU3/P1 (MFE)
C	27 -
C	28 - FA1	FA Input Prom Seq 1,2 (MFE)
C	29 - FA2	FA Input Prom Seq 1,2 (MFE)
C	30 - FA3	FA Input Prom Seq 1,2 (MFE)
C	31 - FA4	FA Input Prom Seq 1,2 (MFE)
	DECLARE COMMFAULT_WORD_0 INTEGER DOUBLE;
C	0 - FF1	MDM Return Word (HFE/HDA)
C	1 - FF2	MDM Return Word (HFE/HDA)
C	2 - FF3	MDM Return Word (HFE/HDA)
C	3 - FF4	MDM Return Word (HFE/HDA)
C	4 - FF1	FF Input Prom Seq 2,6 (HFE/HDA)
C	5 - FF2	FF Input Prom Seq 2,6 (HFE/HDA)
C	6 - FF3	FF Input Prom Seq 2,6 (HFE/HDA)
C	7 - FF4	FF Input Prom Seq 2,6 (HFE/HDA)
C	8 - FF1	ADTA (HFE/HDA)
C	9 - FF2	ADTA (HFE/HDA)
C	10 - FF3	ADTA (HFE/HDA)
C	11 - FF4	ADTA (HFE/HDA)
C	12 - FA1	MDM Return Word (HFE/HDA)
C	13 - FA2	MDM Return Word (HFE/HDA)
C	14 - FA3	MDM Return Word (HFE/HDA)
C	15 - FA4	MDM Return Word (HFE/HDA)
C	16 - FA1	FA Input Prom Seq 3,10 (HFE/HDA)
C	17 - FA2	FA Input Prom Seq 3,10 (HFE/HDA)
C	18 - FA3	FA Input Prom Seq 3,10 (HFE/HDA)
C	19 - FA4	FA Input Prom Seq 3,10 (HFE/HDA)
C	20 - EIU1	EIU1/P1 (HFE)
C	21 - EIU1	EIU1/P4 (HFE)
C	22 - EIU2	EIU2/P1 (HFE)
C	23 - EIU2	EIU2/P4 (HFE)
C	24 - EIU3	EIU3/P1 (HFE)
C	25 - EIU3	EIU3/P4 (HFE)
C	26 -
C	27 -
C	28 -
C	29 - FA2	Hyd. Sys 3 Press. C (HFE/HDA)
C	30 - FA3	OMS Lt. Eng. Press. (HFE/HDA)
C	31 - FA4	OMS Rt. Eng. Press. (HFE/HDA)
	DECLARE COMMFAULT_WORD_1 INTEGER DOUBLE;
C	0 - FF1	MTU1 (MTU)
C	1 - FF2	MTU2 (MTU)
C	2 - FF3	MTU3 (MTU)
C	3 -
C	4 - FF1	NSP1 Discretes (NSP)
C	5 - FF3	NSP2 Discretes (NSP)
C	6 - FF1	NSP1 Data (NSP)
C	7 - FF3	NSP2 Data (NSP)
C	8 - FA1	FA1 MDM (GNC OPS INIT)
C	9 - FA2	FA2 MDM (GNC OPS INIT)
C	10 - FA3	FA3 MDM (GNC OPS INIT)
C	11 - FA4	FA4 MDM (GNC OPS INIT)
C	12 - FF1	FF1 MDM (GNC OPS INIT)
C	13 - FF2	FF2 MDM (GNC OPS INIT)
C	14 - FF3	FF3 MDM (GNC OPS INIT)
C	15 - FF4	FF4 MDM (GNC OPS INIT)
C	16 - LL1	SRB Prom (SRB)
C	17 - LL2	SRB Prom (SRB)
C	18 - LR1	SRB Prom (SRB)
C	19 - LR2	SRB Prom (SRB)
C	20 - FF1	Return Word (IMU)
C	21 - FF2	Return Word (IMU)
C	22 - FF3	Return Word (IMU)
C	23 -
C	24 - FF1	IMU Discretes (IMU)
C	25 - FF2	IMU Discretes (IMU)
C	26 - FF3	IMU Discretes (IMU)
C	27 -
C	28 - FF1	IMU Data (IMU)
C	29 - FF2	IMU Data (IMU)
C	30 - FF3	IMU Data (IMU)
C	31 -
	DECLARE COMMFAULT_WORD_2 INTEGER DOUBLE;
C	0 -
C	1 -
C	2 -
C	3 -
C	4 -
C	5 -
C	6 -
C	7 -
C	8 -
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
C	16 -
C	17 -
C	18 -
C	19 -
C	20 -
C	21 -
C	22 -
C	23 -
C	24 -
C	25 -
C	26 -
C	27 -
C	28 - PF1	PDI (PDI PF1)
C	29 - MCIU	MCIU (MCIU)
C	30 - PF1	PSP1 (PSP PF1)
C	31 - PF2	PSP2 (PSP PF2)
	DECLARE COMMFAULT_WORD_3 INTEGER DOUBLE;
C	0 - PF1	MDM Return Word (PF Low Rate)
C	1 - PF1	KU-Band Radar (PF Low Rate)
C	2 -
C	3 -
C	4 -
C	5 -
C	6 -
C	7 -
C	8 -
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
C	16 - PF2	MDM Return Word (PF Low Rate)
C	17 - PF2	Fuel Cell Purge (PF Low Rate)
C	18 -
C	19 -
C	20 -
C	21 -
C	22 -
C	23 -
C	24 -
C	25 -
C	26 -
C	27 -
C	28 -
C	29 -
C	30 -
C	31 -
	DECLARE COMMFAULT_WORD_4 INTEGER DOUBLE;
C	0 -
C	1 -
C	2 -
C	3 -
C	4 -
C	5 -
C	6 -
C	7 -
C	8 -
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
C	16 -
C	17 -
C	18 -
C	19 -
C	20 -
C	21 -
C	22 -
C	23 -
C	24 -
C	25 -
C	26 -
C	27 -
C	28 -
C	29 -
C	30 -
C	31 -
	DECLARE COMMFAULT_WORD_5 INTEGER DOUBLE;
C	0 -
C	1 -
C	2 -
C	3 -
C	4 -
C	5 -
C	6 -
C	7 -
C	8 -
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
C	16 -
C	17 -
C	18 -
C	19 -
C	20 -
C	21 -
C	22 -
C	23 -
C	24 -
C	25 -
C	26 -
C	27 -
C	28 -
C	29 -
C	30 -
C	31 -
	DECLARE COMMFAULT_WORD_6 INTEGER DOUBLE;
C	0 -
C	1 -
C	2 -
C	3 -
C	4 -
C	5 -
C	6 -
C	7 -
C	8 -
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
C	16 -
C	17 -
C	18 -
C	19 -
C	20 -
C	21 -
C	22 -
C	23 -
C	24 -
C	25 -
C	26 -
C	27 -
C	28 -
C	29 -
C	30 -
C	31 -
	DECLARE COMMFAULT_WORD_7 INTEGER DOUBLE;
C	0 -
C	1 -
C	2 -
C	3 -
C	4 -
C	5 -
C	6 -
C	7 -
C	8 -
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
C	16 -
C	17 -
C	18 -
C	19 -
C	20 -
C	21 -
C	22 -
C	23 -
C	24 -
C	25 -
C	26 -
C	27 -
C	28 -
C	29 -
C	30 -
C	31 -
	DECLARE COMMFAULT_WORD_8 INTEGER DOUBLE;
C	0 -
C	1 -
C	2 -
C	3 -
C	4 -
C	5 -
C	6 -
C	7 -
C	8 -
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
C	16 -
C	17 -
C	18 -
C	19 -
C	20 -
C	21 -
C	22 -
C	23 -
C	24 -
C	25 -
C	26 -
C	27 -
C	28 -
C	29 -
C	30 -
C	31 -
	DECLARE COMMFAULT_WORD_9 INTEGER DOUBLE;
C	0 - PF1	PBD (PF High Rate)
C	1 - PF1	PBD (PF High Rate)
C	2 - PF1	PBD (PF High Rate)
C	3 -
C	4 -
C	5 -
C	6 -
C	7 -
C	8 -
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
C	16 - PF2	PBD (PF High Rate)
C	17 - PF2	PBD (PF High Rate)
C	18 - PF2	PBD (PF High Rate)
C	19 -
C	20 -
C	21 -
C	22 -
C	23 -
C	24 -
C	25 -
C	26 -
C	27 -
C	28 -
C	29 -
C	30 -
C	31 -
	DECLARE COMMFAULT_WORD_10 INTEGER DOUBLE;
C	Commfault counters
	DECLARE COMMFAULT_WORD_COUNTER_0 INTEGER DOUBLE;
	DECLARE COMMFAULT_WORD_COUNTER_1 INTEGER DOUBLE;
	DECLARE COMMFAULT_WORD_COUNTER_2 INTEGER DOUBLE;
	DECLARE COMMFAULT_WORD_COUNTER_3 INTEGER DOUBLE;
	DECLARE COMMFAULT_WORD_COUNTER_4 INTEGER DOUBLE;
	DECLARE COMMFAULT_WORD_COUNTER_5 INTEGER DOUBLE;
	DECLARE COMMFAULT_WORD_COUNTER_6 INTEGER DOUBLE;
	DECLARE COMMFAULT_WORD_COUNTER_7 INTEGER DOUBLE;
	DECLARE COMMFAULT_WORD_COUNTER_8 INTEGER DOUBLE;
	DECLARE COMMFAULT_WORD_COUNTER_9 INTEGER DOUBLE;
	DECLARE COMMFAULT_WORD_COUNTER_10 INTEGER DOUBLE;
C
C	Fault input buffer
	DECLARE FAULT_IN_IDX INTEGER SINGLE;
	DECLARE FAULT_IN_CWCLASS ARRAY(5) INTEGER SINGLE;
	DECLARE FAULT_IN_MSG ARRAY(5) CHARACTER(19);
C	Fault display buffer
	DECLARE FAULT_DISPBUF ARRAY(15) CHARACTER(43);
	DECLARE FAULT_DISPBUF_CNT INTEGER SINGLE;
	DECLARE FAULT_DISPBUF_CLEAR INTEGER SINGLE;
C	Fault message buffer indicator
	DECLARE FAULT_MSG_BUF_IND INTEGER SINGLE;
C	Fault message line buffer
	DECLARE FAULT_MSG_LINE CHARACTER(43);
C	Fault message line state (0 = empty, 1 = flashing, 2 = static)
	DECLARE FAULT_MSG_LINE_STATE INTEGER SINGLE;
C	Illegal Entry indication for each CRT
	DECLARE ILLEGAL_ENTRY_FAULT INTEGER SINGLE;
C
	DECLARE ACK_KEY INTEGER SINGLE;
	DECLARE MSGRESET_KEY INTEGER SINGLE;
C
C	duration of SM tone [s]
	DECLARE SM_TONE_DURATION INTEGER SINGLE;
C
C	outputs to EIUs
	DECLARE EIU_1_CMD INTEGER SINGLE;
	DECLARE EIU_2_CMD INTEGER SINGLE;
	DECLARE EIU_3_CMD INTEGER SINGLE;
C
C	inputs from EIUs
	DECLARE EIU_1_PRIDATA ARRAY(32) INTEGER SINGLE;
	DECLARE EIU_2_PRIDATA ARRAY(32) INTEGER SINGLE;
	DECLARE EIU_3_PRIDATA ARRAY(32) INTEGER SINGLE;
	DECLARE EIU_1_SECDATA ARRAY(6) INTEGER SINGLE;
	DECLARE EIU_2_SECDATA ARRAY(6) INTEGER SINGLE;
	DECLARE EIU_3_SECDATA ARRAY(6) INTEGER SINGLE;
C
C	output to DDU-1
	DECLARE DDU1_ADI ARRAY(14) INTEGER SINGLE;
	DECLARE DDU1_HSI ARRAY(10) INTEGER SINGLE;
	DECLARE DDU1_AVVI ARRAY(6) INTEGER SINGLE;
	DECLARE DDU1_AMI ARRAY(6) INTEGER SINGLE;
C
C	output to DDU-2
	DECLARE DDU2_ADI ARRAY(14) INTEGER SINGLE;
	DECLARE DDU2_HSI ARRAY(10) INTEGER SINGLE;
	DECLARE DDU2_AVVI ARRAY(6) INTEGER SINGLE;
	DECLARE DDU2_AMI ARRAY(6) INTEGER SINGLE;
C
C	output to HUD-1
	DECLARE HUD1_MSG1 ARRAY(31) INTEGER SINGLE;
	DECLARE HUD1_MSG2 ARRAY(12) INTEGER SINGLE;
C
C	output to HUD-2
	DECLARE HUD2_MSG1 ARRAY(31) INTEGER SINGLE;
	DECLARE HUD2_MSG2 ARRAY(12) INTEGER SINGLE;
C
C	MDM FF1 input
C	Radar Altimeter 1 data
	DECLARE FF1_IOM0_CH4_DATA INTEGER SINGLE;
C	3 - LH BODY FLAP UP A
C	4 - LH BODY FLAP DOWN A
C	5 - MPS ME-1 SHUTDOWN CMD A
	DECLARE FF1_IOM4_CH0_DATA INTEGER SINGLE;
C	0 - LH ADI ATTITUDE SEL - INERTIAL
C	1 - LH ADI ATTITUDE SEL - LV/LH
C	2 - LH ADI ATTITUDE SEL - REFERENCE
C	3 - LH ADI RATE SCALE - HIGH
C	4 - LH ADI RATE SCALE - MEDIUM
C	5 - LH ADI RATE SCALE - LOW
C	6 - LH ADI ERROR SCALE - HIGH
C	7 - LH ADI ERROR SCALE - MEDIUM
C	8 - LH ADI ERROR SCALE - LOW
C	10 - FCS LH PITCH AUTO MODE A
C	11 - FCS LH PITCH CSS MODE A
C	13 - FCS LH R-Y AUTO MODE A
C	14 - FCS LH R-Y CSS MODE A
C	15 - LH BODY FLAP AUTO/MANUAL A
	DECLARE FF1_IOM4_CH1_DATA INTEGER SINGLE;
C	0 - LH SPD BK/THROT AUTO/MAN A
C	3 - ENTRY ROLL MODE NO Y JET A
C	4 - R PB/W VENTS 4 & 7 CLOSED 2
C	5 - R PB/W VENTS 4 & 7 OPEN 2
C	6 - R FWD VENTS 1 & 2 CLOSED 1
C	7 - R FWD VENTS 1 & 2 OPEN 1
C	8 - R FWD VENTS 1 & 2 PURGE IND 1
C	9 - L PB VENT 6 CLOSED 1
C	10 - L PB VENT 6 OPEN 1
C	11 - L PB VENT 6 PURGE 1 IND 1
C	12 - R PB VENT 3 CLOSED 1
C	13 - R PB VENT 3 OPEN 1
C	14 - R PB VENT 5 CLOSED 1
C	15 - R PB VENT 5 OPEN 1
	DECLARE FF1_IOM4_CH2_DATA INTEGER SINGLE;
C	7 - FWD THC POS X OUTPUT - A
C	8 - FWD THC NEG X OUTPUT - A
C	9 - FWD THC POS Y OUTPUT - A
C	10 - FWD THC NEG Y OUTPUT - A
C	11 - FWD THC POS Z OUTPUT - A
C	12 - FWD THC NEG Z OUTPUT - A
C	13 - LH SBTC TAKEOVER - A
	DECLARE FF1_IOM6_CH0_DATA INTEGER SINGLE;
C	1 - LH RHC PLUS PITCH TRIM A
C	2 - LH RHC MINUS PITCH TRIM A
C	3 - LH RHC PLUS ROLL TRIM A
C	4 - LH RHC MINUS ROLL TRIM A
C	5 - SRB SEPARATION AUTO A CMD
C	6 - SRB SEPN MANUAL/AUTO ENABLE A CMD
C	7 - SRB SEPARATION INITIATE A CMD
	DECLARE FF1_IOM6_CH1_DATA INTEGER SINGLE;
C	4 - FWD DAP SELECT A - A
C	5 - FWD DAP SELECT B - A
C	6 - AFT DAP SELECT A - C
C	7 - AFT DAP SELECT B - C
C	8 - FWD DAP AUTO A
C	9 - FWD DAP MAN A
C	10 - AFT DAP AUTO C
C	11 - AFT DAP MAN C
	DECLARE FF1_IOM9_CH0_DATA INTEGER SINGLE;
C	1 - SENSE SW -Z CON A
C	2 - SENSE SW -X CON A
C	3 - ENTRY ROLL MODE L GAIN - A
C	4 - FWD ROTATION ROLL DISC RATE A
C	5 - FWD ROTATION ROLL ACCEL A
C	6 - FWD ROTATION ROLL PULSE A
C	7 - FWD ROTATION PITCH DISC RATE A
C	8 - FWD ROTATION PITCH ACCEL A
C	9 - FWD ROTATION PITCH PULSE A
C	10 - FWD ROTATION YAW DISC RATE A
C	11 - FWD ROTATION YAW ACCEL A
C	12 - FWD ROTATION YAW PULSE A
C	13 - FWD RCS JETS NORM A
C	14 - FWD RCS JETS VERNIER A
C	15 - FWD TRANSLATION X NORM A
	DECLARE FF1_IOM9_CH1_DATA INTEGER SINGLE;
C	0 - FWD TRANSLATION X PULSE A
C	1 - FWD TRANSLATION X LVLH A
C	2 - FWD TRANSLATION Y NORM A
C	3 - FWD TRANSLATION Y PULSE A
C	4 - FWD TRANSLATION Y LOW Z A
C	5 - FWD TRANSLATION Z NORM A
C	6 - FWD TRANSLATION Z PULSE A
C	7 - FWD TRANSLATION Z HIGH A
C	8 - MPS PRPLT DUMP SEQUENCE START A
C	9 - MPS PRPLT DUMP SEQUENCE STOP A
	DECLARE FF1_IOM9_CH2_DATA INTEGER SINGLE;
C	1 - LH PLUS PITCH TRIM A
C	2 - LH MINUS PITCH TRIM A
C	3 - LH PLUS ROLL TRIM A
C	4 - LH MINUS ROLL TRIM A
C	5 - LH PLUS YAW TRIM A
C	6 - LH MINUS YAW TRIM A
C	13 - CDR RDR ALTM SEL 1
C	15 - LH HSI MLS SOURCE SELECT
	DECLARE FF1_IOM12_CH0_DATA INTEGER SINGLE;
C	0 - LH HSI NAV SOURCE SELECT
C	1 - LH HSI TACAN SOURCE SELECT
C	2 - LH HSI APPROACH MODE SELECT
C	3 - LH HSI TAEM MODE SELECT
C	4 - LH HSI ENTRY MODE SELECT
C	5 - LH HSI SOURCE SELECT - 3
C	6 - LH HSI SOURCE SELECT - 2
C	7 - LH HSI SOURCE SELECT - 1
C	8 - LH RHC TRIM INHIBIT A
	DECLARE FF1_IOM12_CH1_DATA INTEGER SINGLE;
C	6 - LH ADI ATTITUDE REF PB - A
C	7 - LH ADI ATTITUDE REF PB - B
C	8 - L PB VENT 6 PURGE 2 IND 1
C	14 - AFT RCS OPTIONS NORM C
C	15 - AFT RCS OPTIONS VERNIER C
	DECLARE FF1_IOM12_CH2_DATA INTEGER SINGLE;
C	7 - AFT THC POS X OUTPUT - A
C	8 - AFT THC NEG X OUTPUT - A
C	9 - AFT THC POS Y OUTPUT - A
C	10 - AFT THC NEG Y OUTPUT - A
C	11 - AFT THC POS Z OUTPUT - A
C	12 - AFT THC NEG Z OUTPUT - A
	DECLARE FF1_IOM15_CH0_DATA INTEGER SINGLE;
C	5 - ET SEPARATION MANUAL ENABLE A CMD
C	6 - ET SEPARATION INITIATE A CMD
C	7 - ET SEPARATION AUTO A CMD
	DECLARE FF1_IOM15_CH1_DATA INTEGER SINGLE;
C
C	MDM FF2 input
C	Radar Altimeter 2 data
	DECLARE FF2_IOM0_CH4_DATA INTEGER SINGLE;
C	2 - ENTRY ROLL MODE NO Y JET B
C	3 - LH BODY FLAP UP B
C	4 - LH BODY FLAP DOWN B
C	5 - MPS ME-1 SHUTDOWN CMD B
	DECLARE FF2_IOM4_CH0_DATA INTEGER SINGLE;
C	0 - RH ADI ATTITUDE SEL - INERTIAL
C	1 - RH ADI ATTITUDE SEL - LV/LH
C	2 - RH ADI ATTITUDE SEL - REFERENCE
C	3 - RH ADI RATE SCALE - HIGH
C	4 - RH ADI RATE SCALE - MEDIUM
C	5 - RH ADI RATE SCALE - LOW
C	6 - RH ADI ERROR SCALE - HIGH
C	7 - RH ADI ERROR SCALE - MEDIUM
C	8 - RH ADI ERROR SCALE - LOW
C	10 - FCS LH PITCH AUTO MODE B
C	11 - FCS LH PITCH CSS MODE B
C	13 - FCS LH R-Y AUTO MODE B
C	14 - FCS LH R-Y CSS MODE B
C	15 - LH BODY FLAP AUTO/MANUAL B
	DECLARE FF2_IOM4_CH1_DATA INTEGER SINGLE;
C	0 - LH SPD BK/THROT AUTO/MAN B
C	1 - MPS ENG LIMIT CONTROL NO. 1 ENABLE
C	2 - MPS ENG LIMIT CONTROL NO. 1 INHIBIT
C	3 - MPS ENG LIMIT CONTROL NO. 1 AUTO
C	4 - L PB VENT 3 CLOSED 2
C	5 - L PB VENT 3 OPEN 2
C	6 - L FWD VENTS 1 & 2 CLOSED 2
C	7 - L FWD VENTS 1 & 2 OPEN 2
C	8 - L FWD VENTS 1 & 2 PURGE IND 2
C	9 - R PB VENT 6 CLOSED 2
C	10 - R PB VENT 6 OPEN 2
C	11 - R PB VENT 6 PURGE 1 IND 2
C	12 - L PB/W VENTS 4 & 7 CLOSED 2
C	13 - L PB/W VENTS 4 & 7 OPEN 2
C	14 - R PB VENT 5 CLOSED 2
C	15 - R PB VENT 5 OPEN 2
	DECLARE FF2_IOM4_CH2_DATA INTEGER SINGLE;
C	7 - FWD THC POS X OUTPUT - B
C	8 - FWD THC NEG X OUTPUT - B
C	9 - FWD THC POS Y OUTPUT - B
C	10 - FWD THC NEG Y OUTPUT - B
C	11 - FWD THC POS Z OUTPUT - B
C	12 - FWD THC NEG Z OUTPUT - B
C	13 - LH SBTC TAKEOVER - B
	DECLARE FF2_IOM6_CH0_DATA INTEGER SINGLE;
C	1 - LH RHC PLUS PITCH TRIM B
C	2 - LH RHC MINUS PITCH TRIM B
C	3 - LH RHC PLUS ROLL TRIM B
C	4 - LH RHC MINUS ROLL TRIM B
	DECLARE FF2_IOM6_CH1_DATA INTEGER SINGLE;
C	4 - FWD DAP SELECT A - B
C	5 - FWD DAP SELECT B - B
C	8 - FWD DAP AUTO B
C	9 - FWD DAP MAN B
	DECLARE FF2_IOM9_CH0_DATA INTEGER SINGLE;
C	0 - MPS ME-2 SHUTDOWN CMD A
C	1 - SENSE SW -Z CON B
C	2 - SENSE SW -X CON B
C	3 - ENTRY ROLL MODE L GAIN - B
C	4 - FWD ROTATION ROLL DISC RATE B
C	5 - FWD ROTATION ROLL ACCEL B
C	6 - FWD ROTATION ROLL PULSE B
C	7 - FWD ROTATION PITCH DISC RATE B
C	8 - FWD ROTATION PITCH ACCEL B
C	9 - FWD ROTATION PITCH PULSE B
C	10 - FWD ROTATION YAW DISC RATE B
C	11 - FWD ROTATION YAW ACCEL B
C	12 - FWD ROTATION YAW PULSE B
C	13 - FWD RCS JETS NORM B
C	14 - FWD RCS JETS VERNIER B
C	15 - FWD TRANSLATION X NORM B
	DECLARE FF2_IOM9_CH1_DATA INTEGER SINGLE;
C	0 - FWD TRANSLATION X PULSE B
C	1 - FWD TRANSLATION X LVLH B
C	2 - FWD TRANSLATION Y NORM B
C	3 - FWD TRANSLATION Y PULSE B
C	4 - FWD TRANSLATION Y LOW Z B
C	5 - FWD TRANSLATION Z NORM B
C	6 - FWD TRANSLATION Z PULSE B
C	7 - FWD TRANSLATION Z HIGH B
C	8 - MPS PRPLT DUMP SEQUENCE START B
C	9 - MPS PRPLT DUMP SEQUENCE STOP B
	DECLARE FF2_IOM9_CH2_DATA INTEGER SINGLE;
C	1 - LH PLUS PITCH TRIM B
C	2 - LH MINUS PITCH TRIM B
C	3 - LH PLUS ROLL TRIM B
C	4 - LH MINUS ROLL TRIM B
C	5 - LH PLUS YAW TRIM B
C	6 - LH MINUS YAW TRIM B
C	13 - PLT RDR ALTM SEL 1
C	15 - RH HSI MLS SOURCE SELECT
	DECLARE FF2_IOM12_CH0_DATA INTEGER SINGLE;
C	0 - RH HSI NAV SOURCE SELECT
C	1 - RH HSI TACAN SOURCE SELECT
C	2 - RH HSI APPROACH MODE SELECT
C	3 - RH HSI TAEM MODE SELECT
C	4 - RH HSI ENTRY MODE SELECT
C	5 - RH HSI SOURCE SELECT - 3
C	6 - RH HSI SOURCE SELECT - 2
C	7 - RH HSI SOURCE SELECT - 1
C	8 - LH RHC TRIM INHIBIT B
C	10 - FCS RH PITCH AUTO MODE A
C	11 - FCS RH PITCH CSS MODE A
C	13 - FCS RH R-Y AUTO MODE A
C	14 - FCS RH R-Y CSS MODE A
C	15 - RH BODY FLAP AUTO/MANUAL A
	DECLARE FF2_IOM12_CH1_DATA INTEGER SINGLE;
C	0 - RH SPD BK/THROT AUTO/MAN A
C	6 - LH ADI ATTITUDE REF PB - A
C	7 - LH ADI ATTITUDE REF PB - B
C	8 - R PB VENT 6 PURGE 2 IND 2
	DECLARE FF2_IOM12_CH2_DATA INTEGER SINGLE;
C	7 - AFT THC POS X OUTPUT - B
C	8 - AFT THC NEG X OUTPUT - B
C	9 - AFT THC POS Y OUTPUT - B
C	10 - AFT THC NEG Y OUTPUT - B
C	11 - AFT THC POS Z OUTPUT - B
C	12 - AFT THC NEG Z OUTPUT - B
C	13 - RH SBTC TAKEOVER - A
	DECLARE FF2_IOM15_CH0_DATA INTEGER SINGLE;
C
C	MDM FF3 input
C	3 - RH BODY FLAP UP A
C	4 - RH BODY FLAP DOWN A
C	5 - MPS ME-3 SHUTDOWN CMD A
	DECLARE FF3_IOM4_CH0_DATA INTEGER SINGLE;
C	0 - AFT ADI ATTITUDE SEL - INERTIAL
C	1 - AFT ADI ATTITUDE SEL - LV/LH
C	2 - AFT ADI ATTITUDE SEL - REFERENCE
C	3 - AFT ADI RATE SCALE - HIGH
C	4 - AFT ADI RATE SCALE - MEDIUM
C	5 - AFT ADI RATE SCALE - LOW
C	6 - AFT ADI ERROR SCALE - HIGH
C	7 - AFT ADI ERROR SCALE - MEDIUM
C	8 - AFT ADI ERROR SCALE - LOW
C	10 - FCS LH PITCH AUTO MODE C
C	11 - FCS LH PITCH CSS MODE C
C	13 - FCS LH R-Y AUTO MODE C
C	14 - FCS LH R-Y CSS MODE C
C	15 - LH BODY FLAP AUTO/MANUAL C
	DECLARE FF3_IOM4_CH1_DATA INTEGER SINGLE;
C	0 - LH SPD BK/THROT AUTO/MAN C
C	1 - MPS ENG LIMIT CONTROL NO. 2 ENABLE
C	2 - MPS ENG LIMIT CONTROL NO. 2 INHIBIT
C	3 - MPS ENG LIMIT CONTROL NO. 2 AUTO
C	4 - L PB VENT 3 CLOSED 1
C	5 - L PB VENT 3 OPEN 1
C	6 - L FWD VENTS 1 & 2 CLOSED 1
C	7 - L FWD VENTS 1 & 2 OPEN 1
C	8 - L FWD VENTS 1 & 2 PURGE IND 1
C	9 - R PB VENT 6 CLOSED 1
C	10 - R PB VENT 6 OPEN 1
C	11 - R PB VENT 6 PURGE 1 IND 1
C	12 - L PB/W VENTS 4 & 7 CLOSED 1
C	13 - L PB/W VENTS 4 & 7 OPEN 1
C	14 - L PB VENT 5 CLOSED 1
C	15 - L PB VENT 5 OPEN 1
	DECLARE FF3_IOM4_CH2_DATA INTEGER SINGLE;
C	7 - FWD THC POS X OUTPUT - C
C	8 - FWD THC NEG X OUTPUT - C
C	9 - FWD THC POS Y OUTPUT - C
C	10 - FWD THC NEG Y OUTPUT - C
C	11 - FWD THC POS Z OUTPUT - C
C	12 - FWD THC NEG Z OUTPUT - C
C	13 - LH SBTC TAKEOVER - C
	DECLARE FF3_IOM6_CH0_DATA INTEGER SINGLE;
C	5 - SRB SEPARATION AUTO C CMD
C	6 - SRB SEPN MANUAL/AUTO ENABLE C CMD
C	7 - SRB SEPARATION INITIATE C CMD
	DECLARE FF3_IOM6_CH1_DATA INTEGER SINGLE;
C	4 - AFT DAP SELECT A - A
C	5 - AFT DAP SELECT B - A
C	6 - FWD DAP SELECT A - C
C	7 - FWD DAP SELECT B - C
C	8 - AFT DAP AUTO A
C	9 - AFT DAP MAN A
C	10 - FWD DAP AUTO C
C	11 - FWD DAP MAN C
	DECLARE FF3_IOM9_CH0_DATA INTEGER SINGLE;
C	0 - MPS ME-2 SHUTDOWN CMD B
C	1 - SENSE SW -Z CON C
C	2 - SENSE SW -X CON C
C	3 - ENTRY ROLL MODE L GAIN - C
C	4 - AFT ROTATION ROLL DISC RATE A
C	5 - AFT ROTATION ROLL ACCEL A
C	6 - AFT ROTATION ROLL PULSE A
C	7 - AFT ROTATION PITCH DISC RATE A
C	8 - AFT ROTATION PITCH ACCEL A
C	9 - AFT ROTATION PITCH PULSE A
C	10 - AFT ROTATION YAW DISC RATE A
C	11 - AFT ROTATION YAW ACCEL A
C	12 - AFT ROTATION YAW PULSE A
C	13 - AFT RCS JETS NORM A
C	14 - AFT RCS JETS VERNIER A
C	15 - AFT TRANSLATION X NORM A
	DECLARE FF3_IOM9_CH1_DATA INTEGER SINGLE;
C	0 - AFT TRANSLATION X PULSE A
C	1 - AFT TRANSLATION X LVLH A
C	2 - AFT TRANSLATION Y NORM A
C	3 - AFT TRANSLATION Y PULSE A
C	4 - AFT TRANSLATION Y LOW Z A
C	5 - AFT TRANSLATION Z NORM A
C	6 - AFT TRANSLATION Z PULSE A
C	7 - AFT TRANSLATION Z HIGH A
C	8 - MPS BACKUP LH2 PRPLT DUMP START A
C	9 - MPS BACKUP LH2 PRPLT DUMP STOP A
	DECLARE FF3_IOM9_CH2_DATA INTEGER SINGLE;
C	1 - RH PLUS PITCH TRIM A
C	2 - RH MINUS PITCH TRIM A
C	3 - RH PLUS ROLL TRIM A
C	4 - RH MINUS ROLL TRIM A
C	5 - RH PLUS YAW TRIM A
C	6 - RH MINUS YAW TRIM A
	DECLARE FF3_IOM12_CH0_DATA INTEGER SINGLE;
C	2 - ENTRY ROLL MODE NO Y JET C
C	8 - RH RHC TRIM INHIBIT A
C	10 - FCS RH PITCH AUTO MODE B
C	11 - FCS RH PITCH CSS MODE B
C	13 - FCS RH R-Y AUTO MODE B
C	14 - FCS RH R-Y CSS MODE B
C	15 - RH BODY FLAP AUTO/MANUAL B
	DECLARE FF3_IOM12_CH1_DATA INTEGER SINGLE;
C	0 - RH SPD BK/THROT AUTO/MAN B
C	6 - LH ADI ATTITUDE REF PB - A
C	7 - LH ADI ATTITUDE REF PB - B
C	8 - R PB VENT 6 PURGE 2 IND 1
C	14 - FWD RCS OPTIONS NORM C
C	15 - FWD RCS OPTIONS VERNIER C
	DECLARE FF3_IOM12_CH2_DATA INTEGER SINGLE;
C	7 - AFT THC POS X OUTPUT - C
C	8 - AFT THC NEG X OUTPUT - C
C	9 - AFT THC POS Y OUTPUT - C
C	10 - AFT THC NEG Y OUTPUT - C
C	11 - AFT THC POS Z OUTPUT - C
C	12 - AFT THC NEG Z OUTPUT - C
C	13 - RH SBTC TAKEOVER - B
	DECLARE FF3_IOM15_CH0_DATA INTEGER SINGLE;
C	1 - RH RHC PLUS PITCH TRIM A
C	2 - RH RHC MINUS PITCH TRIM A
C	3 - RH RHC PLUS ROLL TRIM A
C	4 - RH RHC MINUS ROLL TRIM A
C	5 - ET SEPARATION MANUAL ENABLE C CMD
C	6 - ET SEPARATION INITIATE C CMD
C	7 - ET SEPARATION AUTO C CMD
	DECLARE FF3_IOM15_CH1_DATA INTEGER SINGLE;
C
C	MDM FF4 input
C	3 - RH BODY FLAP UP B
C	4 - RH BODY FLAP DOWN B
C	5 - MPS ME-3 SHUTDOWN CMD B
	DECLARE FF4_IOM4_CH0_DATA INTEGER SINGLE;
C	1 - MPS ENG LIMIT CONTROL NO. 3 ENABLE
C	2 - MPS ENG LIMIT CONTROL NO. 3 INHIBIT
C	3 - MPS ENG LIMIT CONTROL NO. 3 AUTO
C	4 - R PB VENT 3 CLOSED 2
C	5 - R PB VENT 3 OPEN 2
C	6 - R FWD VENTS 1 & 2 CLOSED 2
C	7 - R FWD VENTS 1 & 2 OPEN 2
C	8 - R FWD VENTS 1 & 2 PURGE IND 2
C	9 - L PB VENT 6 CLOSED 2
C	10 - L PB VENT 6 OPEN 2
C	11 - L PB VENT 6 PURGE 1 IND 2
C	12 - R PB/W VENTS 4 & 7 CLOSED 1
C	13 - R PB/W VENTS 4 & 7 OPEN 1
C	14 - L PB VENT 5 CLOSED 2
C	15 - L PB VENT 5 OPEN 2
	DECLARE FF4_IOM4_CH2_DATA INTEGER SINGLE;
C	5 - SRB SEPARATION AUTO B CMD
C	6 - SRB SEPN MANUAL/AUTO ENABLE B CMD
C	7 - SRB SEPARATION INITIATE B CMD
	DECLARE FF4_IOM6_CH1_DATA INTEGER SINGLE;
C	4 - AFT DAP SELECT A - B
C	5 - AFT DAP SELECT B - B
C	8 - AFT DAP AUTO B
C	9 - AFT DAP MAN B
	DECLARE FF4_IOM9_CH0_DATA INTEGER SINGLE;
C	3 - ENTRY ROLL MODE L GAIN - D
C	4 - AFT ROTATION ROLL DISC RATE B
C	5 - AFT ROTATION ROLL ACCEL B
C	6 - AFT ROTATION ROLL PULSE B
C	7 - AFT ROTATION PITCH DISC RATE B
C	8 - AFT ROTATION PITCH ACCEL B
C	9 - AFT ROTATION PITCH PULSE B
C	10 - AFT ROTATION YAW DISC RATE B
C	11 - AFT ROTATION YAW ACCEL B
C	12 - AFT ROTATION YAW PULSE B
C	13 - AFT RCS JETS NORM B
C	14 - AFT RCS JETS VERNIER B
C	15 - AFT TRANSLATION X NORM B
	DECLARE FF4_IOM9_CH1_DATA INTEGER SINGLE;
C	0 - AFT TRANSLATION X PULSE B
C	1 - AFT TRANSLATION X LVLH B
C	2 - AFT TRANSLATION Y NORM B
C	3 - AFT TRANSLATION Y PULSE B
C	4 - AFT TRANSLATION Y LOW Z B
C	5 - AFT TRANSLATION Z NORM B
C	6 - AFT TRANSLATION Z PULSE B
C	7 - AFT TRANSLATION Z HIGH B
C	8 - MPS BACKUP LH2 PRPLT DUMP START B
C	9 - MPS BACKUP LH2 PRPLT DUMP STOP B
	DECLARE FF4_IOM9_CH2_DATA INTEGER SINGLE;
C	1 - RH PLUS PITCH TRIM B
C	2 - RH MINUS PITCH TRIM B
C	3 - RH PLUS ROLL TRIM B
C	4 - RH MINUS ROLL TRIM B
C	5 - RH PLUS YAW TRIM B
C	6 - RH MINUS YAW TRIM B
	DECLARE FF4_IOM12_CH0_DATA INTEGER SINGLE;
C	8 - RH RHC TRIM INHIBIT B
C	10 - FCS RH PITCH AUTO MODE C
C	11 - FCS RH PITCH CSS MODE C
C	13 - FCS RH R-Y AUTO MODE C
C	14 - FCS RH R-Y CSS MODE C
C	15 - RH BODY FLAP AUTO/MANUAL C
	DECLARE FF4_IOM12_CH1_DATA INTEGER SINGLE;
C	0 - RH SPD BK/THROT AUTO/MAN C
C	8 - L PB VENT 6 PURGE 2 IND 2
C	15 - ENTRY ROLL MODE NO Y JET D
	DECLARE FF4_IOM12_CH2_DATA INTEGER SINGLE;
C	13 - RH SBTC TAKEOVER - C
	DECLARE FF4_IOM15_CH0_DATA INTEGER SINGLE;
C	1 - RH RHC PLUS PITCH TRIM B
C	2 - RH RHC MINUS PITCH TRIM B
C	3 - RH RHC PLUS ROLL TRIM B
C	4 - RH RHC MINUS ROLL TRIM B
C	5 - ET SEPARATION MANUAL ENABLE B CMD
C	6 - ET SEPARATION INITIATE B CMD
C	7 - ET SEPARATION AUTO B CMD
	DECLARE FF4_IOM15_CH1_DATA INTEGER SINGLE;
C
C	MDM FA1 input
C	9 - ET - LH2 LOW LEVEL LIQ SENSOR NO. 4
	DECLARE FA1_IOM3_CH0_DATA INTEGER SINGLE;
C	ET - LH2 ULLAGE PRESS NO. 1
	DECLARE FA1_IOM6_CH27_DATA INTEGER SINGLE;
C	ET - LO2 ULLAGE PRESS NO. 1
	DECLARE FA1_IOM6_CH28_DATA INTEGER SINGLE;
C	8 - ET - LO2 ECO SENSOR NO. 4
C	13 - L AFT VENTS 8 & 9 CLOSED 1
C	14 - L AFT VENTS 8 & 9 OPEN 1
C	15 - L AFT VENTS 8 & 9 PURGE IND 1
	DECLARE FA1_IOM11_CH0_DATA INTEGER SINGLE;
C	OMS - L ENG ACTV P ACTR POSN IN
	DECLARE FA1_IOM14_CH14_DATA INTEGER SINGLE;
C	OMS - L ENG ACTV Y ACTR POSN IN
	DECLARE FA1_IOM14_CH15_DATA INTEGER SINGLE;
C	MPS LH2 ENG MANF PRESS
	DECLARE FA1_IOM14_CH22_DATA INTEGER SINGLE;
C
C	MDM FA2 input
C	9 - ET - LH2 LOW LEVEL LIQ SENSOR NO. 2
	DECLARE FA2_IOM3_CH0_DATA INTEGER SINGLE;
C	ET - LH2 ULLAGE PRESS NO. 2
	DECLARE FA2_IOM6_CH27_DATA INTEGER SINGLE;
C	ET - LO2 ULLAGE PRESS NO. 2
	DECLARE FA2_IOM6_CH28_DATA INTEGER SINGLE;
C	8 - ET - LO2 ECO SENSOR NO. 2
C	13 - R AFT VENTS 8 & 9 CLOSED 2
C	14 - R AFT VENTS 8 & 9 OPEN 2
C	15 - R AFT VENTS 8 & 9 PURGE IND 2
	DECLARE FA2_IOM11_CH0_DATA INTEGER SINGLE;
C	OMS - L ENG STBY P ACTR POSN IN
	DECLARE FA2_IOM14_CH14_DATA INTEGER SINGLE;
C	OMS - L ENG STBY Y ACTR POSN IN
	DECLARE FA2_IOM14_CH15_DATA INTEGER SINGLE;
C	MPS LO2 ENG MANF PRESS
	DECLARE FA2_IOM14_CH22_DATA INTEGER SINGLE;
C
C	MDM FA3 input
C	9 - ET - LH2 LOW LEVEL LIQ SENSOR NO. 1
	DECLARE FA3_IOM3_CH0_DATA INTEGER SINGLE;
C	ET - LH2 ULLAGE PRESS NO. 3
	DECLARE FA3_IOM6_CH27_DATA INTEGER SINGLE;
C	ET - LO2 ULLAGE PRESS NO. 3
	DECLARE FA3_IOM6_CH28_DATA INTEGER SINGLE;
C	8 - ET - LO2 ECO SENSOR NO. 1
C	13 - R AFT VENTS 8 & 9 CLOSED 1
C	14 - R AFT VENTS 8 & 9 OPEN 1
C	15 - R AFT VENTS 8 & 9 PURGE IND 1
	DECLARE FA3_IOM11_CH0_DATA INTEGER SINGLE;
C	OMS - R ENG STBY P ACTR POSN IN
	DECLARE FA3_IOM14_CH14_DATA INTEGER SINGLE;
C	OMS - R ENG STBY Y ACTR POSN IN
	DECLARE FA3_IOM14_CH15_DATA INTEGER SINGLE;
C
C	MDM FA4 input
C	9 - ET - LH2 LOW LEVEL LIQ SENSOR NO. 3
	DECLARE FA4_IOM3_CH0_DATA INTEGER SINGLE;
C	8 - ET - LO2 ECO SENSOR NO. 3
C	13 - L AFT VENTS 8 & 9 CLOSED 2
C	14 - L AFT VENTS 8 & 9 OPEN 2
C	15 - L AFT VENTS 8 & 9 PURGE IND 2
	DECLARE FA4_IOM11_CH0_DATA INTEGER SINGLE;
C	OMS - R ENG ACTV P ACTR POSN IN
	DECLARE FA4_IOM14_CH14_DATA INTEGER SINGLE;
C	OMS - R ENG ACTV Y ACTR POSN IN
	DECLARE FA4_IOM14_CH15_DATA INTEGER SINGLE;
C
C	MDM PF1 input
C	0 - PLB RIGHT FWD BHD READY FOR LCH 1
C	1 - PLB RIGHT AFT BHD READY FOR LCH 1
C	2 - PLB RIGHT FWD BHD LATCH - REL 1
C	3 - PLB RIGHT FWD BHD LATCH - LCH 1
C	4 - PLB RIGHT AFT BHD LATCH - REL 2
C	5 - PLB RIGHT AFT BHD LATCH - LCH 2
C	6 - PLB RIGHT OPEN 1
C	7 - PLB OPEN CMD C
C	8 - PLB CLOSE CMD C
C	10 - PLB RIGHT CLOSE 1
	DECLARE PF1_IOM3_CH0_DATA INTEGER SINGLE;
C	0 - PLB LEFT FWD BHD READY FOR LCH 1
C	1 - PLB LEFT AFT BHD READY FOR LCH 1
C	2 - PLB LEFT FWD BHD LATCH - REL 1
C	3 - PLB LEFT FWD BHD LATCH - LCH 1
C	4 - PLB LEFT AFT BHD LATCH - REL 1
C	5 - PLB LEFT AFT BHD LATCH - LCH 1
C	6 - PLB LEFT OPEN 2
C	7 - PLB OPEN CMD B
C	8 - PLB CLOSE CMD B
C	11 - PLB LEFT CLOSE 2
	DECLARE PF1_IOM6_CH0_DATA INTEGER SINGLE;
C	0 - PLB LEFT FWD BHD READY FOR LCH 2
C	1 - PLB LEFT AFT BHD READY FOR LCH 2
C	2 - PLB CENTERLINE LCH 1 - 4 REL 1
C	3 - PLB CENTERLINE LCH 1 - 4 LCH 1
C	4 - PLB CENTERLINE LCH 5 - 8 REL 1
C	5 - PLB CENTERLINE LCH 5 - 8 LCH 1
C	6 - PLB CENTERLINE LCH 9 - 12 LCH 1
C	7 - PLB CENTERLINE LCH 9 - 12 REL 1
C	8 - PLB CENTERLINE LCH 13 - 16 LCH 2
C	9 - PLB CENTERLINE LCH 13 - 16 REL 2
	DECLARE PF1_IOM9_CH0_DATA INTEGER SINGLE;
C
C	MDM PF2 input
C	0 - PLB RIGHT FWD BHD READY FOR LCH 2
C	1 - PLB RIGHT AFT BHD READY FOR LCH 2
C	2 - PLB RIGHT FWD BHD LATCH - REL 2
C	3 - PLB RIGHT FWD BHD LATCH - LCH 2
C	4 - PLB RIGHT AFT BHD LATCH - REL 1
C	5 - PLB RIGHT AFT BHD LATCH - LCH 1
C	6 - PLB RIGHT OPEN 2
C	7 - PLB OPEN CMD A
C	8 - PLB CLOSE CMD A
C	10 - PLB RIGHT CLOSE 2
	DECLARE PF2_IOM3_CH0_DATA INTEGER SINGLE;
C	0 - PLB LEFT FWD BHD READY FOR LCH 3
C	1 - PLB LEFT AFT BHD READY FOR LCH 3
C	2 - PLB LEFT FWD BHD LATCH - REL 2
C	3 - PLB LEFT FWD BHD LATCH - LCH 2
C	4 - PLB LEFT AFT BHD LATCH - REL 2
C	5 - PLB LEFT AFT BHD LATCH - LCH 2
C	6 - PLB LEFT OPEN 1
C	7 - PLB OPEN CMD D
C	8 - PLB CLOSE CMD D
C	11 - PLB LEFT CLOSE 1
	DECLARE PF2_IOM6_CH0_DATA INTEGER SINGLE;
C	0 - PLB RIGHT FWD BHD READY FOR LCH 3
C	1 - PLB RIGHT AFT BHD READY FOR LCH 3
C	2 - PLB CENTERLINE LCH 1 - 4 REL 2
C	3 - PLB CENTERLINE LCH 1 - 4 LCH 2
C	4 - PLB CENTERLINE LCH 5 - 8 REL 2
C	5 - PLB CENTERLINE LCH 5 - 8 LCH 2
C	6 - PLB CENTERLINE LCH 9 - 12 LCH 2
C	7 - PLB CENTERLINE LCH 9 - 12 REL 2
C	8 - PLB CENTERLINE LCH 13 - 16 LCH 1
C	9 - PLB CENTERLINE LCH 13 - 16 REL 1
	DECLARE PF2_IOM9_CH0_DATA INTEGER SINGLE;
C
C	MDM FF1 output
C	0 - RH VENTS 1/2 MOTOR 1/CLOSE B (CL/1B)
C	1 - RH VENTS 1/2 MOTOR 1/OPEN B (OP/1B)
C	2 - RH VENTS 1/2 MOTOR 1/PURGE B (PG/1B)
C	11 - RH VENTS 4/7 MOTOR 2/CLOSE B (CL/2B)
	DECLARE FF1_IOM2_CH0_DATA INTEGER SINGLE;
C	0 - F7 LIGHT: C MPS AMBER STATUS
C	7 - F6 LIGHT A: RCS CMD "ROLL LEFT"
C	8 - F6 LIGHT A: RCS CMD "ROLL RIGHT"
C	9 - F6 LIGHT A: RCS CMD "YAW LEFT"
C	10 - F6 LIGHT A: RCS CMD "YAW RIGHT"
C	11 - F6 LIGHT A: RCS CMD "PITCH UP"
C	12 - F6 LIGHT A: RCS CMD "PITCH DOWN"
C	13 - C3 LIGHT: FWD DAP CONTROL "AUTO"
C	14 - C3 LIGHT: FWD DAP SELECT "A"
C	15 - C3 LIGHT: FWD DAP RCS JETS "NORM"
	DECLARE FF1_IOM2_CH1_DATA INTEGER SINGLE;
C	1 - L OMS TVC: PRI ENABLE 1 ("ACTIVE")
C	2 - L OMS TVC: PRI ENABLE 2 ("ACTIVE")
C	3 - C3 LIGHT: FWD DAP CONTROL "MAN"
C	4 - C3 LIGHT: FWD DAP SELECT "B"
C	5 - C3 LIGHT: FWD DAP RCS JETS "VERN"
C	7 - RH VENTS 4/7 MOTOR 2/OPEN B (OP/2B)
C	8 - RH VENT 3 MOTOR 1/CLOSE B (CL/1B)
C	9 - RH VENT 3 MOTOR 1/OPEN B (OP/1B)
C	10 - LH VENT 6 MOTOR 1/CLOSE B (CL/1B)
C	11 - LH VENT 6 MOTOR 1/OPEN B (OP/1B)
C	12 - LH VENT 6 MOTOR 1/PRG-1 B (P1/1B)
C	13 - LH VENT 6 MOTOR 1/PRG-2 B (P2/1B)
C	14 - RH VENT 5 MOTOR 1/CLOSE B (CL/1B)
C	15 - RH VENT 5 MOTOR 1/OPEN B (OP/1B)
	DECLARE FF1_IOM2_CH2_DATA INTEGER SINGLE;
C	0 - FWD EVENT TIMER: ABORT TIMER RESET
C	11 - C&W MATRIX "LEFT RCS" (LEAK DETECT)
	DECLARE FF1_IOM5_CH1_DATA INTEGER SINGLE;
C	F7 TAPE MTR: MPS PRESS "C MPS Pc"
	DECLARE FF1_IOM8_CH0_DATA INTEGER SINGLE;
C	SPI: SPEED BRK "COMMAND"
	DECLARE FF1_IOM8_CH7_DATA INTEGER SINGLE;
C	SPI: "RUDDER" POSITION
	DECLARE FF1_IOM8_CH8_DATA INTEGER SINGLE;
C	SPI: "SPEEDBRAKE" POSITION
	DECLARE FF1_IOM8_CH9_DATA INTEGER SINGLE;
C	SPI: "ELEVONS" L INBD POSITION
	DECLARE FF1_IOM8_CH10_DATA INTEGER SINGLE;
C	SPI: "ELEVONS" L OTBD POSITION
	DECLARE FF1_IOM8_CH11_DATA INTEGER SINGLE;
C	SPI: "ELEVONS" R INBD POSITION
	DECLARE FF1_IOM8_CH12_DATA INTEGER SINGLE;
C	SPI: "ELEVONS" R OTBD POSITION
	DECLARE FF1_IOM8_CH13_DATA INTEGER SINGLE;
C	0 - RH VENTS 1/2 MOTOR 1/CLOSE A (CL/1A)
C	1 - RH VENTS 1/2 MOTOR 1/OPEN A (OP/1A)
C	2 - RH VENTS 1/2 MOTOR 1/PURGE A (PG/1A)
C	4 - F2 LIGHT: LH FCS BODY FLAP "AUTO"
C	5 - F2 LIGHT: LH FCS SPEED BK "AUTO"
C	6 - F2 LIGHT: LH FCS PITCH "AUTO"
C	7 - F2 LIGHT: LH FCS ROLL/YAW "AUTO"
	DECLARE FF1_IOM10_CH0_DATA INTEGER SINGLE;
C	0 - F7 LIGHT: C MPS RED STATUS
C	1 - C3 LIGHT: FWD MAN ROT ROLL "DISC RT"
C	2 - C3 LIGHT: FWD MAN ROT ROLL "ACCEL"
C	3 - C3 LIGHT: FWD MAN ROT ROLL "PULSE"
C	4 - C3 LIGHT: FWD MAN ROT PITCH "DISC RT"
C	5 - C3 LIGHT: FWD MAN ROT PITCH "ACCEL"
C	6 - C3 LIGHT: FWD MAN ROT PITCH "PULSE"
C	7 - C3 LIGHT: FWD MAN ROT YAW "DISC RT"
C	8 - C3 LIGHT: FWD MAN ROT YAW "ACCEL"
C	9 - C3 LIGHT: FWD MAN ROT YAW "PULSE"
C	10 - C3 LIGHT: FWD MAN TRANS X "NORM"
C	11 - C3 LIGHT: FWD MAN TRANS X "PULSE"
C	12 - C3 LIGHT: FWD MAN TRANS X "LVLH"
C	13 - C3 LIGHT: FWD MAN TRANS Y "NORM"
C	14 - C3 LIGHT: FWD MAN TRANS Y "PULSE"
C	15 - C3 LIGHT: FWD MAN TRANS Y "LOW Z"
	DECLARE FF1_IOM10_CH1_DATA INTEGER SINGLE;
C	0 - C3 LIGHT: FWD MAN TRANS Z "NORM"
C	1 - C3 LIGHT: FWD MAN TRANS Z "PULSE"
C	2 - C3 LIGHT: FWD MAN TRANS Z "HIGH"
C	3 - C&W MATRIX "BACKUP C/W ALARM"
C	4 - SM ALERT: TONE A CMD 1
C	5 - SM ALERT: LIGHT A CMD 1
C	6 - RH VENTS 4/7 MOTOR 2/CLOSE A (CL/2A)
C	7 - RH VENTS 4/7 MOTOR 2/OPEN A (OP/2A)
C	8 - RH VENT 3 MOTOR 1/CLOSE A (CL/1A)
C	9 - RH VENT 3 MOTOR 1/OPEN A (OP/1A)
C	10 - LH VENT 6 MOTOR 1/CLOSE A (CL/1A)
C	11 - LH VENT 6 MOTOR 1/OPEN A (OP/1A)
C	12 - LH VENT 6 MOTOR 1/PRG-1 A (P1/1A)
C	13 - LH VENT 6 MOTOR 1/PRG-2 A (P2/1A)
C	14 - RH VENT 5 MOTOR 1/CLOSE A (CL/1A)
C	15 - RH VENT 5 MOTOR 1/OPEN A (OP/1A)
	DECLARE FF1_IOM10_CH2_DATA INTEGER SINGLE;
C	10 - SPI: DATA VALID CMD ("OFF" FLAG)
	DECLARE FF1_IOM13_CH0_DATA INTEGER SINGLE;
C
C	MDM FF2 output
C	0 - LH VENTS 1/2 MOTOR 2/CLOSE B (CL/2B)
C	1 - LH VENTS 1/2 MOTOR 2/OPEN B (OP/2B)
C	2 - LH VENTS 1/2 MOTOR 2/PURGE B (PG/2B)
	DECLARE FF2_IOM2_CH0_DATA INTEGER SINGLE;
C	0 - F7 LIGHT: L MPS AMBER STATUS
C	6 - RH VENT 5 MOTOR 2/CLOSE B (CL/2B)
	DECLARE FF2_IOM2_CH1_DATA INTEGER SINGLE;
C	1 - L OMS TVC: SEC ENABLE 1 ("STBY")
C	2 - L OMS TVC: SEC ENABLE 2 ("STBY")
C	6 - LH VENT 3 MOTOR 2/CLOSE B (CL/2B)
C	7 - LH VENT 3 MOTOR 2/OPEN B (OP/2B)
C	8 - LH VENTS 4/7 MOTOR 2/CLOSE B (CL/2B)
C	9 - LH VENTS 4/7 MOTOR 2/OPEN B (OP/2B)
C	10 - RH VENT 6 MOTOR 2/CLOSE B (CL/2B)
C	11 - RH VENT 6 MOTOR 2/OPEN B (OP/2B)
C	12 - RH VENT 6 MOTOR 2/PRG-1 B (P1/2B)
C	13 - RH VENT 6 MOTOR 2/PRG-2 B (P2/2B)
C	15 - RH VENT 5 MOTOR 2/OPEN B (OP/2B)
	DECLARE FF2_IOM2_CH2_DATA INTEGER SINGLE;
C	F7 TAPE MTR: MPS PRESS "L MPS Pc"
	DECLARE FF2_IOM8_CH0_DATA INTEGER SINGLE;
C	SPI: "BODY FLAP" POSITION
	DECLARE FF2_IOM8_CH8_DATA INTEGER SINGLE;
C	SPI: "AILERON" POSITION
	DECLARE FF2_IOM8_CH9_DATA INTEGER SINGLE;
C	0 - LH VENTS 1/2 MOTOR 2/CLOSE A (CL/2A)
C	1 - LH VENTS 1/2 MOTOR 2/OPEN A (OP/2A)
C	2 - LH VENTS 1/2 MOTOR 2/PURGE A (PG/2A)
C	4 - F2 LIGHT: LH FCS BODY FLAP "MAN"
C	5 - F2 LIGHT: LH FCS SPEED BK "MAN"
C	6 - F2 LIGHT: LH FCS PITCH "CSS"
C	7 - F2 LIGHT: LH FCS ROLL/YAW "CSS"
	DECLARE FF2_IOM10_CH0_DATA INTEGER SINGLE;
C	0 - F7 LIGHT: L MPS RED STATUS
	DECLARE FF2_IOM10_CH1_DATA INTEGER SINGLE;
C	3 - C&W MATRIX "BACKUP C/W ALARM"
C	4 - SM ALERT: TONE A CMD 2
C	5 - SM ALERT: LIGHT A CMD 2
C	6 - LH VENT 3 MOTOR 2/CLOSE A (CL/2A)
C	7 - LH VENT 3 MOTOR 2/OPEN A (OP/2A)
C	8 - LH VENTS 4/7 MOTOR 2/CLOSE A (CL/2A)
C	9 - LH VENTS 4/7 MOTOR 2/OPEN A (OP/2A)
C	10 - RH VENT 6 MOTOR 2/CLOSE A (CL/2A)
C	11 - RH VENT 6 MOTOR 2/OPEN A (OP/2A)
C	12 - RH VENT 6 MOTOR 2/PRG-1 A (P1/2A)
C	13 - RH VENT 6 MOTOR 2/PRG-2 A (P2/2A)
C	14 - RH VENT 5 MOTOR 2/CLOSE A (CL/2A)
C	15 - RH VENT 5 MOTOR 2/OPEN A (OP/2A)
	DECLARE FF2_IOM10_CH2_DATA INTEGER SINGLE;
C
C	MDM FF3 output
C	0 - LH VENT 3 MOTOR 1/OPEN B (OP/1B)
C	1 - LH VENTS 1/2 MOTOR 1/OPEN B (OP/1B)
C	2 - LH VENTS 1/2 MOTOR 1/PURGE B (PG/1B)
	DECLARE FF3_IOM2_CH0_DATA INTEGER SINGLE;
C	0 - F7 LIGHT: R MPS AMBER STATUS
C	6 - LH VENTS 4/7 MOTOR 1/CLOSE B (CL/1B)
C	7 - F6 LIGHT B: RCS CMD "ROLL LEFT"
C	8 - F6 LIGHT B: RCS CMD "ROLL RIGHT"
C	9 - F6 LIGHT B: RCS CMD "YAW LEFT"
C	10 - F6 LIGHT B: RCS CMD "YAW RIGHT"
C	11 - F6 LIGHT B: RCS CMD "PITCH UP"
C	12 - F6 LIGHT B: RCS CMD "PITCH DOWN"
C	13 - A6 LIGHT: AFT DAP CONTROL "AUTO"
C	14 - A6 LIGHT: AFT DAP SELECT "A"
C	15 - A6 LIGHT: AFT DAP RCS JETS "NORM"
	DECLARE FF3_IOM2_CH1_DATA INTEGER SINGLE;
C	1 - R OMS TVC: SEC ENABLE 1 ("ACTIVE")
C	2 - R OMS TVC: SEC ENABLE 2 ("ACTIVE")
C	3 - A6 LIGHT: AFT DAP CONTROL "MAN"
C	4 - A6 LIGHT: AFT DAP SELECT "B"
C	5 - A6 LIGHT: AFT DAP RCS JETS "VERN"
C	6 - LH VENT 3 MOTOR 1/CLOSE B (CL/1B)
C	7 - LH VENTS 1/2 MOTOR 1/CLOSE B (CL/1B)
C	9 - LH VENTS 4/7 MOTOR 1/OPEN B (OP/1B)
C	10 - RH VENT 6 MOTOR 1/CLOSE B (CL/1B)
C	11 - RH VENT 6 MOTOR 1/OPEN B (OP/1B)
C	12 - RH VENT 6 MOTOR 1/PRG-1 B (P1/1B)
C	13 - RH VENT 6 MOTOR 1/PRG-2 B (P2/1B)
C	14 - LH VENT 5 MOTOR 1/CLOSE B (CL/1B)
C	15 - LH VENT 5 MOTOR 1/OPEN B (OP/1B)
	DECLARE FF3_IOM2_CH2_DATA INTEGER SINGLE;
C	0 - C&W MATRIX "RCS JET"
C	1 - C&W MATRIX "OMS TVC"
C	2 - C&W MATRIX "LEFT OMS"
C	3 - C&W MATRIX "RIGHT OMS"
C	4 - C&W MATRIX "FCS CHANNEL"
C	5 - C&W MATRIX "FCS SATURATION"
C	6 - C&W MATRIX "IMU"
C	7 - C&W MATRIX "RIGHT/AFT RHC"
C	8 - C&W MATRIX "LEFT RHC"
C	9 - C&W MATRIX "AIR DATA"
C	10 - C&W MATRIX "RGA/ACCEL"
C	11 - C&W MATRIX "RIGHT RCS" (LEAK DETECT)
C	12 - C&W MATRIX "FWD RCS" (LEAK DETECT)
	DECLARE FF3_IOM5_CH1_DATA INTEGER SINGLE;
C	F7 TAPE MTR: MPS PRESS "R MPS Pc"
	DECLARE FF3_IOM8_CH0_DATA INTEGER SINGLE;
C	0 - LH VENTS 1/2 MOTOR 1/CLOSE A (CL/1A)
C	1 - LH VENTS 1/2 MOTOR 1/OPEN A (OP/1A)
C	2 - LH VENT 3 MOTOR 1/OPEN A (OP/1A)
C	4 - F4 LIGHT: RH FCS BODY FLAP "AUTO"
C	5 - F4 LIGHT: RH FCS SPEED BK "AUTO"
C	6 - F4 LIGHT: RH FCS PITCH "AUTO"
C	7 - F4 LIGHT: RH FCS ROLL/YAW "AUTO"
	DECLARE FF3_IOM10_CH0_DATA INTEGER SINGLE;
C	0 - F7 LIGHT: R MPS RED STATUS
C	1 - A6 LIGHT: AFT MAN ROT ROLL "DISC RT"
C	2 - A6 LIGHT: AFT MAN ROT ROLL "ACCEL"
C	3 - A6 LIGHT: AFT MAN ROT ROLL "PULSE"
C	4 - A6 LIGHT: AFT MAN ROT PITCH "DISC RT"
C	5 - A6 LIGHT: AFT MAN ROT PITCH "ACCEL"
C	6 - A6 LIGHT: AFT MAN ROT PITCH "PULSE"
C	7 - A6 LIGHT: AFT MAN ROT YAW "DISC RT"
C	8 - A6 LIGHT: AFT MAN ROT YAW "ACCEL"
C	9 - A6 LIGHT: AFT MAN ROT YAW "PULSE"
C	10 - A6 LIGHT: AFT MAN TRANS X "NORM"
C	11 - A6 LIGHT: AFT MAN TRANS X "PULSE"
C	12 - A6 LIGHT: AFT MAN TRANS X "LVLH"
C	13 - A6 LIGHT: AFT MAN TRANS Y "NORM"
C	14 - A6 LIGHT: AFT MAN TRANS Y "PULSE"
C	15 - A6 LIGHT: AFT MAN TRANS Y "LOW Z"
	DECLARE FF3_IOM10_CH1_DATA INTEGER SINGLE;
C	0 - A6 LIGHT: AFT MAN TRANS Z "NORM"
C	1 - A6 LIGHT: AFT MAN TRANS Z "PULSE"
C	2 - A6 LIGHT: AFT MAN TRANS Z "HIGH"
C	3 - C&W MATRIX "BACKUP C/W ALARM"
C	4 - SM ALERT: TONE A CMD 3
C	5 - SM ALERT: LIGHT A CMD 3
C	6 - LH VENT 3 MOTOR 1/CLOSE A (CL/1A)
C	7 - LH VENTS 1/2 MOTOR 1/PURGE A (PG/1A)
C	8 - LH VENTS 4/7 MOTOR 1/CLOSE A (CL/1A)
C	9 - LH VENTS 4/7 MOTOR 1/OPEN A (OP/1A)
C	10 - RH VENT 6 MOTOR 1/CLOSE A (CL/1A)
C	11 - RH VENT 6 MOTOR 1/OPEN A (OP/1A)
C	12 - RH VENT 6 MOTOR 1/PRG-1 A (P1/1A)
C	13 - RH VENT 6 MOTOR 1/PRG-2 A (P2/1A)
C	14 - LH VENT 5 MOTOR 1/CLOSE A (CL/1A)
C	15 - LH VENT 5 MOTOR 1/OPEN A (OP/1A)
	DECLARE FF3_IOM10_CH2_DATA INTEGER SINGLE;
C
C	MDM FF4 output
C	0 - RH VENT 3 MOTOR 2/OPEN B (OP/2B)
C	1 - RH VENTS 1/2 MOTOR 2/OPEN B (OP/2B)
C	2 - RH VENTS 1/2 MOTOR 2/PURGE B (PG/2B)
	DECLARE FF4_IOM2_CH0_DATA INTEGER SINGLE;
C	6 - LH VENT 5 MOTOR 2/CLOSE B (CL/2B)
	DECLARE FF4_IOM2_CH1_DATA INTEGER SINGLE;
C	1 - R OMS TVC: PRI ENABLE 1 ("STBY")
C	2 - R OMS TVC: PRI ENABLE 2 ("STBY")
C	6 - RH VENT 3 MOTOR 2/CLOSE B (CL/2B)
C	7 - RH VENTS 1/2 MOTOR 2/CLOSE B (CL/2B)
C	8 - RH VENTS 4/7 MOTOR 1/CLOSE B (CL/1B)
C	9 - RH VENTS 4/7 MOTOR 1/OPEN B (OP/1B)
C	10 - LH VENT 6 MOTOR 2/CLOSE B (CL/2B)
C	11 - LH VENT 6 MOTOR 2/OPEN B (OP/2B)
C	12 - LH VENT 6 MOTOR 2/PRG-1 B (P1/2B)
C	13 - LH VENT 6 MOTOR 2/PRG-2 B (P2/2B)
C	15 - LH VENT 5 MOTOR 2/OPEN B (OP/2B)
	DECLARE FF4_IOM2_CH2_DATA INTEGER SINGLE;
C	0 - FWD EVENT TIMER: LIFT OFF TIMER RESET
	DECLARE FF4_IOM5_CH1_DATA INTEGER SINGLE;
C	0 - RH VENTS 1/2 MOTOR 2/CLOSE A (CL/2A)
C	1 - RH VENTS 1/2 MOTOR 2/OPEN A (OP/2A)
C	2 - RH VENT 3 MOTOR 2/OPEN A (OP/2A)
C	4 - F4 LIGHT: RH FCS BODY FLAP "MAN"
C	5 - F4 LIGHT: RH FCS SPEED BK "MAN"
C	6 - F4 LIGHT: RH FCS PITCH "CSS"
C	7 - F4 LIGHT: RH FCS ROLL/YAW "CSS"
	DECLARE FF4_IOM10_CH0_DATA INTEGER SINGLE;
C	3 - C&W MATRIX "BACKUP C/W ALARM"
C	4 - SM ALERT: TONE A CMD 4
C	5 - SM ALERT: LIGHT A CMD 4
C	6 - RH VENT 3 MOTOR 2/CLOSE A (CL/2A)
C	7 - RH VENTS 1/2 MOTOR 2/PURGE A (PG/2A)
C	8 - RH VENTS 4/7 MOTOR 1/CLOSE A (CL/1A)
C	9 - RH VENTS 4/7 MOTOR 1/OPEN A (OP/1A)
C	10 - LH VENT 6 MOTOR 2/CLOSE A (CL/2A)
C	11 - LH VENT 6 MOTOR 2/OPEN A (OP/2A)
C	12 - LH VENT 6 MOTOR 2/PRG-1 A (P1/2A)
C	13 - LH VENT 6 MOTOR 2/PRG-2 A (P2/2A)
C	14 - LH VENT 5 MOTOR 2/CLOSE A (CL/2A)
C	15 - LH VENT 5 MOTOR 2/OPEN A (OP/2A)
	DECLARE FF4_IOM10_CH2_DATA INTEGER SINGLE;
C
C	MDM FA1 output
C	OMS TVC: L PRI P ACTR CMD ("ACTIVE")
	DECLARE FA1_IOM4_CH7_DATA INTEGER SINGLE;
C	OMS TVC: L PRI Y ACTR CMD ("ACTIVE")
	DECLARE FA1_IOM4_CH8_DATA INTEGER SINGLE;
C	4 - LH VENTS 8/9 MOTOR 1/CLOSE A (CL/1A)
C	5 - LH VENTS 8/9 MOTOR 1/OPEN A (OP/1A)
C	6 - LH VENTS 8/9 MOTOR 1/PURGE A (PG/1A)
	DECLARE FA1_IOM7_CH0_DATA INTEGER SINGLE;
C	3 - LH VENTS 8/9 MOTOR 1/CLOSE B (CL/1B)
C	4 - LH VENTS 8/9 MOTOR 1/OPEN B (OP/1B)
C	5 - LH VENTS 8/9 MOTOR 1/PURGE B (PG/1B)
	DECLARE FA1_IOM15_CH0_DATA INTEGER SINGLE;
C
C	MDM FA2 output
C	OMS TVC: L SEC P ACTR CMD ("STBY")
	DECLARE FA2_IOM4_CH7_DATA INTEGER SINGLE;
C	OMS TVC: L SEC Y ACTR CMD ("STBY")
	DECLARE FA2_IOM4_CH8_DATA INTEGER SINGLE;
C	4 - RH VENTS 8/9 MOTOR 2/CLOSE A (CL/2A)
C	5 - RH VENTS 8/9 MOTOR 2/OPEN A (OP/2A)
C	6 - RH VENTS 8/9 MOTOR 2/PURGE A (PG/2A)
	DECLARE FA2_IOM7_CH0_DATA INTEGER SINGLE;
C	3 - RH VENTS 8/9 MOTOR 2/CLOSE B (CL/2B)
C	4 - RH VENTS 8/9 MOTOR 2/OPEN B (OP/2B)
C	5 - RH VENTS 8/9 MOTOR 2/PURGE B (PG/2B)
	DECLARE FA2_IOM15_CH0_DATA INTEGER SINGLE;
C
C	MDM FA3 output
C	OMS TVC: R SEC P ACTR CMD ("STBY")
	DECLARE FA3_IOM4_CH7_DATA INTEGER SINGLE;
C	OMS TVC: R SEC Y ACTR CMD ("STBY")
	DECLARE FA3_IOM4_CH8_DATA INTEGER SINGLE;
C	4 - RH VENTS 8/9 MOTOR 1/CLOSE A (CL/1A)
C	5 - RH VENTS 8/9 MOTOR 1/OPEN A (OP/1A)
C	6 - RH VENTS 8/9 MOTOR 1/PURGE A (PG/1A)
	DECLARE FA3_IOM7_CH0_DATA INTEGER SINGLE;
C	3 - RH VENTS 8/9 MOTOR 1/CLOSE B (CL/1B)
C	4 - RH VENTS 8/9 MOTOR 1/OPEN B (OP/1B)
C	5 - RH VENTS 8/9 MOTOR 1/PURGE B (PG/1B)
	DECLARE FA3_IOM15_CH0_DATA INTEGER SINGLE;
C
C	MDM FA4 output
C	OMS TVC: R PRI P ACTR CMD ("ACTIVE")
	DECLARE FA4_IOM4_CH7_DATA INTEGER SINGLE;
C	OMS TVC: R PRI Y ACTR CMD ("ACTIVE")
	DECLARE FA4_IOM4_CH8_DATA INTEGER SINGLE;
C	4 - LH VENTS 8/9 MOTOR 2/CLOSE A (CL/2A)
C	5 - LH VENTS 8/9 MOTOR 2/OPEN A (OP/2A)
C	6 - LH VENTS 8/9 MOTOR 2/PURGE A (PG/2A)
	DECLARE FA4_IOM7_CH0_DATA INTEGER SINGLE;
C	3 - LH VENTS 8/9 MOTOR 2/CLOSE B (CL/2B)
C	4 - LH VENTS 8/9 MOTOR 2/OPEN B (OP/2B)
C	5 - LH VENTS 8/9 MOTOR 2/PURGE B (PG/2B)
	DECLARE FA4_IOM15_CH0_DATA INTEGER SINGLE;
C
C	MDM PF1 output
C	0 - R PBD: DOOR DRIVE MOTOR 1/OPEN
C	1 - R PBD: DOOR DRIVE MOTOR 1/CLOSE
C	2 - R PBD: FWD BHD LCH MOTOR 1/RELEASE
C	3 - R PBD: FWD BHD LCH MOTOR 1/LATCH
C	4 - R PBD: AFT BHD LCH MOTOR 2/RELEASE
C	5 - R PBD: AFT BHD LCH MOTOR 2/LATCH
C	6 - PBD ENABLE CMD 1A (AC1 ARM 1-MTRS)
C	7 - PBD ENABLE CMD 3A (AC2 ARM 2-MTRS)
C	8 - PBD ENABLE CMD 4A (AC1 ARM 1-MTRS)
C	12 - C&W MATRIX "BACKUP C/W ALARM"
C	13 - SM ALERT: TONE B CMD 1
C	14 - SM ALERT: LIGHT B CMD 1
	DECLARE PF1_IOM2_CH0_DATA INTEGER SINGLE;
C	0 - R13 TB FLAG: PL BAY DOOR "OP" CMD 1
C	1 - R13 TB FLAG: PL BAY DOOR "CL" CMD 1
C	2 - PBD: C/L LCH 1-4 MOTOR 1/RELEASE
C	3 - PBD: C/L LCH 1-4 MOTOR 1/LATCH
C	4 - PBD: C/L LCH 5-8 MOTOR 1/RELEASE
C	5 - PBD: C/L LCH 5-8 MOTOR 1/LATCH
C	6 - PBD: C/L LCH 9-12 MOTOR 1/RELEASE
C	7 - PBD: C/L LCH 9-12 MOTOR 1/LATCH
C	8 - PBD: C/L LCH 13-16 MOTOR 2/RELEASE
C	9 - PBD: C/L LCH 13-16 MOTOR 2/LATCH
	DECLARE PF1_IOM7_CH0_DATA INTEGER SINGLE;
C	0 - L PBD: DOOR DRIVE MOTOR 2/OPEN
C	1 - L PBD: DOOR DRIVE MOTOR 2/CLOSE
C	2 - L PBD: FWD BHD LCH MOTOR 1/RELEASE
C	3 - L PBD: FWD BHD LCH MOTOR 1/LATCH
C	4 - L PBD: AFT BHD LCH MOTOR 1/RELEASE
C	5 - L PBD: AFT BHD LCH MOTOR 1/LATCH
C	7 - PBD ENABLE CMD 3B (AC2 ARM 2-MTRS)
C	8 - PBD ENABLE CMD 4B (AC1 ARM 1-MTRS)
	DECLARE PF1_IOM14_CH0_DATA INTEGER SINGLE;
C	7 - PBD ENABLE CMD 1B (AC1 ARM 1-MTRS)
	DECLARE PF1_IOM14_CH2_DATA INTEGER SINGLE;
C
C	MDM PF2 output
C	0 - R PBD: DOOR DRIVE MOTOR 2/OPEN
C	1 - R PBD: DOOR DRIVE MOTOR 2/CLOSE
C	2 - R PBD: FWD BHD LCH MOTOR 2/RELEASE
C	3 - R PBD: FWD BHD LCH MOTOR 2/LATCH
C	4 - R PBD: AFT BHD LCH MOTOR 1/RELEASE
C	5 - R PBD: AFT BHD LCH MOTOR 1/LATCH
C	6 - PBD ENABLE CMD 2A (AC3 ARM 2-MTRS)
C	7 - PBD ENABLE CMD 5A (AC2 ARM 2-MTRS)
C	8 - PBD ENABLE CMD 6A (AC3 ARM 1&2-MTRS)
C	12 - C&W MATRIX "BACKUP C/W ALARM"
C	13 - SM ALERT: TONE B CMD 2
C	14 - SM ALERT: LIGHT B CMD 2
	DECLARE PF2_IOM2_CH0_DATA INTEGER SINGLE;
C	0 - R13 TB FLAG: PL BAY DOOR "OP" CMD 2
C	1 - R13 TB FLAG: PL BAY DOOR "CL" CMD 2
C	2 - PBD: C/L LCH 1-4 MOTOR 2/RELEASE
C	3 - PBD: C/L LCH 1-4 MOTOR 2/LATCH
C	4 - PBD: C/L LCH 5-8 MOTOR 2/RELEASE
C	5 - PBD: C/L LCH 5-8 MOTOR 2/LATCH
C	6 - PBD: C/L LCH 9-12 MOTOR 2/RELEASE
C	7 - PBD: C/L LCH 9-12 MOTOR 2/LATCH
C	8 - PBD: C/L LCH 13-16 MOTOR 1/RELEASE
C	9 - PBD: C/L LCH 13-16 MOTOR 1/LATCH
	DECLARE PF2_IOM7_CH0_DATA INTEGER SINGLE;
C	2 - C&W MATRIX "PAYLOAD WARNING"
	DECLARE PF2_IOM10_CH2_DATA INTEGER SINGLE;
C	0 - L PBD: DOOR DRIVE MOTOR 1/OPEN
C	1 - L PBD: DOOR DRIVE MOTOR 1/CLOSE
C	2 - L PBD: FWD BHD LCH MOTOR 2/RELEASE
C	3 - L PBD: FWD BHD LCH MOTOR 2/LATCH
C	4 - L PBD: AFT BHD LCH MOTOR 2/RELEASE
C	5 - L PBD: AFT BHD LCH MOTOR 2/LATCH
C	6 - PBD ENABLE CMD 2B (AC3 ARM 2-MTRS)
C	7 - PBD ENABLE CMD 5B (AC2 ARM 2-MTRS)
	DECLARE PF2_IOM14_CH0_DATA INTEGER SINGLE;
C	1 - PBD ENABLE CMD 6B (AC3 ARM 1&2-MTRS)
	DECLARE PF2_IOM14_CH2_DATA INTEGER SINGLE;
C
C	Radar Altimeter
	DECLARE RA_DATA_CDR_SEL INTEGER SINGLE;
	DECLARE RA_VALIDITY_CDR_SEL INTEGER SINGLE;
	DECLARE RA_DATA_PLT_SEL INTEGER SINGLE;
	DECLARE RA_VALIDITY_PLT_SEL INTEGER SINGLE;
C
C	DAP PBIs light command
C	forward
	DECLARE FWD_DAP_SELECT_A_LT INTEGER SINGLE;
	DECLARE FWD_DAP_SELECT_B_LT INTEGER SINGLE;
	DECLARE FWD_DAP_AUTO_LT INTEGER SINGLE;
	DECLARE FWD_DAP_MAN_INRTL_LT INTEGER SINGLE;
	DECLARE FWD_DAP_MAN_LVLH_LT INTEGER SINGLE;
	DECLARE FWD_DAP_MAN_FREE_DFT_LT INTEGER SINGLE;
	DECLARE FWD_BLANK_LT INTEGER SINGLE;
	DECLARE FWD_TRANSL_X_NORM_LT INTEGER SINGLE;
	DECLARE FWD_TRANSL_X_PULSE_LT INTEGER SINGLE;
	DECLARE FWD_TRANSL_LOW_Z_LT INTEGER SINGLE;
	DECLARE FWD_TRANSL_Y_NORM_LT INTEGER SINGLE;
	DECLARE FWD_TRANSL_Y_PULSE_LT INTEGER SINGLE;
	DECLARE FWD_TRANSL_Z_HIGH_LT INTEGER SINGLE;
	DECLARE FWD_TRANSL_Z_NORM_LT INTEGER SINGLE;
	DECLARE FWD_TRANSL_Z_PULSE_LT INTEGER SINGLE;
	DECLARE FWD_RCS_JETS_NORM_LT INTEGER SINGLE;
	DECLARE FWD_ROT_ROLL_DISC_LT INTEGER SINGLE;
	DECLARE FWD_ROT_ROLL_PULSE_LT INTEGER SINGLE;
	DECLARE FWD_ALT_PRCS_MODE_LT INTEGER SINGLE;
	DECLARE FWD_ROT_PITCH_DISC_LT INTEGER SINGLE;
	DECLARE FWD_ROT_PITCH_PULSE_LT INTEGER SINGLE;
	DECLARE FWD_RCS_JETS_VERN_LT INTEGER SINGLE;
	DECLARE FWD_ROT_YAW_DISC_LT INTEGER SINGLE;
	DECLARE FWD_ROT_YAW_PULSE_LT INTEGER SINGLE;
C	aft
	DECLARE AFT_DAP_SELECT_A_LT INTEGER SINGLE;
	DECLARE AFT_DAP_SELECT_B_LT INTEGER SINGLE;
	DECLARE AFT_DAP_AUTO_LT INTEGER SINGLE;
	DECLARE AFT_DAP_MAN_INRTL_LT INTEGER SINGLE;
	DECLARE AFT_DAP_MAN_LVLH_LT INTEGER SINGLE;
	DECLARE AFT_DAP_MAN_FREE_DFT_LT INTEGER SINGLE;
	DECLARE AFT_BLANK_LT INTEGER SINGLE;
	DECLARE AFT_TRANSL_X_NORM_LT INTEGER SINGLE;
	DECLARE AFT_TRANSL_X_PULSE_LT INTEGER SINGLE;
	DECLARE AFT_TRANSL_LOW_Z_LT INTEGER SINGLE;
	DECLARE AFT_TRANSL_Y_NORM_LT INTEGER SINGLE;
	DECLARE AFT_TRANSL_Y_PULSE_LT INTEGER SINGLE;
	DECLARE AFT_TRANSL_Z_HIGH_LT INTEGER SINGLE;
	DECLARE AFT_TRANSL_Z_NORM_LT INTEGER SINGLE;
	DECLARE AFT_TRANSL_Z_PULSE_LT INTEGER SINGLE;
	DECLARE AFT_RCS_JETS_NORM_LT INTEGER SINGLE;
	DECLARE AFT_ROT_ROLL_DISC_LT INTEGER SINGLE;
	DECLARE AFT_ROT_ROLL_PULSE_LT INTEGER SINGLE;
	DECLARE AFT_ALT_PRCS_MODE_LT INTEGER SINGLE;
	DECLARE AFT_ROT_PITCH_DISC_LT INTEGER SINGLE;
	DECLARE AFT_ROT_PITCH_PULSE_LT INTEGER SINGLE;
	DECLARE AFT_RCS_JETS_VERN_LT INTEGER SINGLE;
	DECLARE AFT_ROT_YAW_DISC_LT INTEGER SINGLE;
	DECLARE AFT_ROT_YAW_PULSE_LT INTEGER SINGLE;
C
C	TAEM parameters
C	maximum shuttle orbiter weight [slugs]
	DECLARE WT_GS1 SCALAR SINGLE;
C	minimum RPRED to issue OHALRT [ft]
	DECLARE RMOH SCALAR SINGLE;
C	HAC turn angle [deg]
	DECLARE PSHA SCALAR SINGLE;
C	HAC radius [ft]
	DECLARE RTURN SCALAR SINGLE;
C	R/L cone indicator [1]
	DECLARE YSGN SCALAR SINGLE;
C	PSHA reset value [deg]
	DECLARE PSHARS SCALAR SINGLE;
C	initial HAC spiral turn radius on final [ft]
	DECLARE RF0 SCALAR SINGLE;
C	linear term in spiral radius eqn. [ft/deg]
	DECLARE R1 SCALAR SINGLE;
C	quadratic term in spiral radius eqn. [ft/deg]
	DECLARE R2 SCALAR SINGLE;
C
C	Autoland parameters
C	pullup circle radius (indexed by IGI,IGS) [ft]
	DECLARE AL_R MATRIX(2,2) SINGLE;
C	pullup circle center (x) (indexed by IGI,IGS) [ft]
	DECLARE X_K MATRIX(2,2) SINGLE;
C	pullup circle center (h) (indexed by IGI,IGS) [ft]
	DECLARE H_K MATRIX(2,2) SINGLE;
C	exponential/circle tangency range (indexed by IGI,IGS) [ft]
	DECLARE X_EXP MATRIX(2,2) SINGLE;
C	exponential decay (indexed by IGI,IGS) [ft]
	DECLARE H_DECAY MATRIX(2,2) SINGLE;
C	exponential decay factor [1]
	DECLARE SIGMA SCALAR SINGLE;
C	steep glideslop angle (indexed by IGS) [deg]
	DECLARE GAMMA_REF_1 VECTOR(2) SINGLE;
C	shallow glideslop angle [deg]
	DECLARE GAMMA_REF_2 SCALAR SINGLE;
C	steep glide slope aim point (indexed by IGI) [ft]
	DECLARE X_ZERO VECTOR(2) SINGLE;
C	shallow glide slope aim point [ft]
	DECLARE X_AIM SCALAR SINGLE;
C	open-loop pull-up altitude [ft]
	DECLARE H_FLARE SCALAR SINGLE;
C	closed-loop pull-up altitude [ft]
	DECLARE H_CLOOP SCALAR SINGLE;
C
C	runway approach mode (1-overhead; 2-strait-in)
	DECLARE OVHD INTEGER SINGLE;
C	glide slope (1-light; 2-heavy)
	DECLARE IGS INTEGER SINGLE;
C	aimpoint (1-nom; 2-close-in)
	DECLARE IGI INTEGER SINGLE;
C	runway ID (1-pri; 2-sec)
	DECLARE RWID INTEGER SINGLE;
C	previous runway ID (1-pri; 2-sec)
	DECLARE RWID0 INTEGER SINGLE;
C	landing site ID [1,45]
	DECLARE LSID INTEGER SINGLE;
C
C	speedbrake logic select (1-nom; 2-short; 3-ELS)
	DECLARE SB_SEL INTEGER SINGLE;
C
C	pri runway name
	DECLARE PRI_ID CHARACTER(5);
C	pri runway heading [deg]
	DECLARE PRI_HDG SCALAR SINGLE;
C	pri runway pos (greenwich=ECEF) [ft]
	DECLARE PRI_POS VECTOR(3) SINGLE;
C	pri greenwich(=ECEF)-to-runway matrix [ft]
	DECLARE PRI_G2R MATRIX(3,3) SINGLE;
C	pri runway length [ft]
	DECLARE PRI_LEN INTEGER SINGLE;
C	sec runway name
	DECLARE SEC_ID CHARACTER(5);
C	sec runway heading [deg]
	DECLARE SEC_HDG SCALAR SINGLE;
C	sec runway pos (greenwich=ECEF) [ft]
	DECLARE SEC_POS VECTOR(3) SINGLE;
C	sec greenwich(=ECEF)-to-runway matrix [ft]
	DECLARE SEC_G2R MATRIX(3,3) SINGLE;
C	sec runway length [ft]
	DECLARE SEC_LEN INTEGER SINGLE;
C
C	Landing SOP
	DECLARE WOWLON INTEGER SINGLE;
	DECLARE FLATTURN INTEGER SINGLE;
	DECLARE ROLLOUT INTEGER SINGLE;
	DECLARE GSENBL INTEGER SINGLE;
	DECLARE HUD_WOWLON INTEGER SINGLE;
	DECLARE HUD_ROLLOUT INTEGER SINGLE;
C
C	Aerojet DAP FCS
C	AerojetDAP FCS pitch control (1-AUTO; 2-CSS)
	DECLARE AEROJET_FCS_PITCH INTEGER SINGLE;
C	AerojetDAP FCS roll control (1-AUTO; 2-CSS)
	DECLARE AEROJET_FCS_ROLL INTEGER SINGLE;
C	AerojetDAP FCS speedbrake control (1-AUTO; 2-CDR; 3-PLT)
	DECLARE AEROJET_FCS_SB INTEGER SINGLE;
C	AerojetDAP body flap control (1-AUTO; 2-CSS)
	DECLARE AEROJET_FCS_BF INTEGER SINGLE;
C	number of RCS roll jets to fire (+right, -left) [1]
	DECLARE UXCMD INTEGER SINGLE;
C	number of RCS pitch jets to fire (+up, -down) [1]
	DECLARE UYCMD INTEGER SINGLE;
C	number of RCS yaw jets to fire (+right, -left) [1]
	DECLARE UZCMD INTEGER SINGLE;
C	aileron trim [deg]
	DECLARE DATRIM SCALAR SINGLE;
C	rudder trim [deg]
	DECLARE DRTRIM SCALAR SINGLE;
C	NY trim [g]
	DECLARE DRTI SCALAR SINGLE;
C	NZ error [g]
	DECLARE NZERR SCALAR SINGLE;
C	bank error [deg]
	DECLARE BANKERR SCALAR SINGLE;
C	wraparound DAP mode (0=INH, 1=ENA, 2=ACT)
	DECLARE WRAP INTEGER SINGLE;
C	elevator command [deg]
	DECLARE DECC SCALAR SINGLE;
C	aileron command [deg]
	DECLARE DAC SCALAR SINGLE;
C	rudder command [deg]
	DECLARE DRC SCALAR SINGLE;
C	speedbrake command [deg]
	DECLARE DSBC SCALAR SINGLE;
C	NWS command [deg]
	DECLARE DNWC SCALAR SINGLE;
C	Entry Mode switch "Low Gain" selected
	DECLARE SEL_L_GAIN INTEGER SINGLE;
C	Entry Mode switch "No Yaw Jet" selected
	DECLARE SEL_NO_Y_JET INTEGER SINGLE;
C	Entry Mode switch override
	DECLARE ENTRY_SW_OVERRIDE INTEGER SINGLE;
C
C	A/L UPP
C	geodetic altitude of vehicle center of mass above rw [ft]
	DECLARE H SCALAR DOUBLE;
C	negative z component of velocity in topodetic coordinates [fps]
	DECLARE HDOT SCALAR SINGLE;
C	true airspeed [fps]
	DECLARE V_T SCALAR SINGLE;
C	equivalent? airspeed [fps]
	DECLARE V_I SCALAR SINGLE;
C	equivalent airspeed [knots]
	DECLARE KEAS SCALAR SINGLE;
C	topodetic horizontal component of earth relative velocity [fps]
	DECLARE VG SCALAR SINGLE;
C	vehicle position in runway coordinates [ft]
	DECLARE X SCALAR SINGLE;
	DECLARE Y SCALAR SINGLE;
	DECLARE Z SCALAR SINGLE;
C	vehicle velocity in runway coordinates [fps]
	DECLARE XDOT SCALAR SINGLE;
	DECLARE YDOT SCALAR SINGLE;
C	heading [deg]
	DECLARE HDG SCALAR SINGLE;
C	topodetic earth relative flight-path angle [deg]
	DECLARE GAMMA SCALAR SINGLE;
C	roll [deg]
	DECLARE PHI SCALAR SINGLE;
C	cosine of body roll euler angle [1]
	DECLARE COSPHI SCALAR SINGLE;
C	sine of body roll euler angle [1]
	DECLARE SINPHI SCALAR SINGLE;
C	tangent of body roll euler angle [1]
	DECLARE TANPHI SCALAR SINGLE;
C	cosine of angle of attack [1]
	DECLARE COSALF SCALAR SINGLE;
C	sine of angle of attack [1]
	DECLARE SINALF SCALAR SINGLE;
C	pitch [deg]
	DECLARE THETA SCALAR SINGLE;
C	cosine of theta [1]
	DECLARE COSTH SCALAR SINGLE;
C	sine of theta [1]
	DECLARE SINTH SCALAR SINGLE;
C	angle-of-attack [deg]
	DECLARE ALPHA SCALAR SINGLE;
C	sideslip [deg]
	DECLARE BETA SCALAR SINGLE;
C	dynamic pressure [psf]
	DECLARE QBAR SCALAR SINGLE;
C	lateral acceleration [g]
	DECLARE NY SCALAR SINGLE;
C	normal acceleration [g]
	DECLARE NZ SCALAR SINGLE;
C	orbiter mass [slugs]
	DECLARE WEIGHT SCALAR SINGLE;
C	body roll rate [deg/s]
	DECLARE P SCALAR SINGLE;
C	body pitch rate [deg/s]
	DECLARE Q SCALAR SINGLE;
C	body yaw rate [deg/s]
	DECLARE R SCALAR SINGLE;
C
C	TAEM UPP
C	mach number [1]
	DECLARE MACH SCALAR SINGLE;
C	course with respect to centerline [deg]
	DECLARE PSD SCALAR SINGLE;
C
C	Entry UPP
C	vehicle position in ECEF [ft]
	DECLARE ECEF_POS VECTOR(3) SINGLE;
C	vehicle velocity in ECEF [fps]
	DECLARE ECEF_VEL VECTOR(3) SINGLE;
C	current relative velocity [fps]
	DECLARE VE SCALAR SINGLE;
C	current inertial velocity [fps]
	DECLARE VI SCALAR SINGLE;
C	current drag acceleration [fps^2]
	DECLARE DRAG SCALAR SINGLE;
C	current lift/drag ratio [1]
	DECLARE LOD SCALAR SINGLE;
C	current load factor [fps^2]
	DECLARE XLFAC SCALAR SINGLE;
C
C	EGRT output
C	azimuth error [rad]
	DECLARE DELAZ SCALAR SINGLE;
C	range to target [NM]
	DECLARE TRANG SCALAR SINGLE;
C
C	Autoland guidance output
C	autoland phase counter
	DECLARE PMODE INTEGER SINGLE;
C	FSGS phase counter
	DECLARE FMODE INTEGER SINGLE;
C	autoland NZ command [g]
	DECLARE NZ_CMD SCALAR SINGLE;
C	autoland roll angle command [deg]
	DECLARE PHIC_AL SCALAR SINGLE;
C	autoland yaw rate command post WOWLON
	DECLARE RC SCALAR SINGLE;
C	autoland speedbrake command [deg]
	DECLARE DSBC_AL SCALAR SINGLE;
C	body flap retract command
	DECLARE RETRACT_BF INTEGER SINGLE;
C	altitude error [ft]
	DECLARE HERR SCALAR SINGLE;
C
C	TAEM guidance output
C	heading error to HAC tangency [deg]
	DECLARE DPSAC SCALAR SINGLE;
C	predicted range to rw [ft]
	DECLARE RPRED SCALAR SINGLE;
C	commanded body normal load factor increment from equilibrium [g]
	DECLARE NZC SCALAR SINGLE;
C	speedbrake angle command (hinge line) [deg]
	DECLARE DSBC_AT SCALAR SINGLE;
C	roll angle command
	DECLARE PHIC_AT SCALAR SINGLE;
C	minimum entry point flag
	DECLARE MEP INTEGER SINGLE;
C	TAEM phase counter [1]
	DECLARE IPHASE INTEGER SINGLE;
C	TAEM end flag
	DECLARE TG_END INTEGER SINGLE;
C	current HAC final size [ft]
	DECLARE RF SCALAR SINGLE;
C	HAC X position [ft]
	DECLARE XHAC SCALAR SINGLE;
C	distance from OV to HAC center [ft]
	DECLARE RCIR SCALAR SINGLE;
C	energy per unit weight [ft]
	DECLARE EOW SCALAR SINGLE;
C	reference energy [ft]
	DECLARE EN SCALAR SINGLE;
C	E/W to start S-turn [ft]
	DECLARE ES SCALAR SINGLE;
C	E/W to switch to MEP [ft]
	DECLARE EMEP SCALAR SINGLE;
C	E/W to downmode to STRN [ft]
	DECLARE EMOH SCALAR SINGLE;
C	altitude error from reference profile [ft]
	DECLARE HERROR SCALAR SINGLE;
C	heading to HAC center [deg]
	DECLARE PSC SCALAR SINGLE;
C	estimated time to HAC [sec]
	DECLARE P2TRNT SCALAR SINGLE;
C	"OTT ST IN" indication
	DECLARE OTT_ST_IN INTEGER SINGLE;
C	"SW TO MEP" indication
	DECLARE SW_TO_MEP INTEGER SINGLE;
C
C	Entry guidance output
C	angle-of-attack command [deg]
	DECLARE ALPCMD SCALAR SINGLE;
C	drag reference [fps^2]
	DECLARE DREFP SCALAR SINGLE;
C	roll angle command about body axis [deg]
	DECLARE ROLLCMD SCALAR SINGLE;
C	roll ref [deg]
	DECLARE ROLLREF SCALAR SINGLE;
C	altitude rate reference [fps]
	DECLARE RDTREF SCALAR SINGLE;
C	derivative of range wrt drag [NM/fps^2]
	DECLARE DRDD SCALAR SINGLE;
C	Rdot feedback term [fps]
	DECLARE DLRDOT SCALAR SINGLE;
C	maximum heading error absolute value [rad]
	DECLARE YL SCALAR SINGLE;
C	scheduled angle of attack [deg]
	DECLARE ACMD1 SCALAR SINGLE;
C	entry guidance subphase counter
	DECLARE ISLECT INTEGER SINGLE;
C	Entry guidance end flag
	DECLARE EG_END INTEGER SINGLE;
C
C	aerosurface position feedback
C	left outboard elevon pos [deg]
	DECLARE LOB_ELVN_POS_FDBK SCALAR SINGLE;
C	left inboard elevon pos [deg]
	DECLARE LIB_ELVN_POS_FDBK SCALAR SINGLE;
C	right inboard elevon pos [deg]
	DECLARE RIB_ELVN_POS_FDBK SCALAR SINGLE;
C	right outboard elevon pos [deg]
	DECLARE ROB_ELVN_POS_FDBK SCALAR SINGLE;
C	elevator pos [deg]
	DECLARE DEFB SCALAR;
C	aileron pos [deg]
	DECLARE DAFB SCALAR SINGLE;
C	body flap pos [deg]
	DECLARE DBFOFB SCALAR SINGLE;
C	rudder pos [deg]
	DECLARE DRFB SCALAR SINGLE;
C	Speedbrake pos [deg]
	DECLARE DSBFB_DEG SCALAR SINGLE;
C	Speedbrake pos [%]
	DECLARE DSBFB_PCT SCALAR SINGLE;
C	speedbrake increment [deg]
	DECLARE DSBPC SCALAR SINGLE;
C
C	Aerosurface command
C	left outboard elevon command [deg]
	DECLARE ELOC SCALAR SINGLE;
C	left inboard elevon command [deg]
	DECLARE ELIC SCALAR SINGLE;
C	right inboard elevon command [deg]
	DECLARE ERIC SCALAR SINGLE;
C	right outboard elevon command [deg]
	DECLARE EROC SCALAR SINGLE;
C	body flap command [deg]
	DECLARE DBFRC SCALAR SINGLE;
C	rudder command [deg]
	DECLARE RUDDER_CMD SCALAR SINGLE;
C	speedbrake command [deg]
	DECLARE SPEED_BRAKE_CMD SCALAR SINGLE;
C
C	Speedbrake AUTO command [deg]
	DECLARE SB_AUTO_CMD SCALAR SINGLE;
C
C	HUD
C	runway to go [ft]
	DECLARE RWTOGO SCALAR SINGLE;
C	max deceleration [fps^2]
	DECLARE HUDMAXDECEL SCALAR SINGLE;
C
C	Trim Switch positions
	DECLARE LH_RHC_TRIM_INHIBIT INTEGER SINGLE;
	DECLARE RH_RHC_TRIM_INHIBIT INTEGER SINGLE;
	DECLARE LH_RHC_PLUS_PITCH_TRIM INTEGER SINGLE;
	DECLARE LH_RHC_MINUS_PITCH_TRIM INTEGER SINGLE;
	DECLARE LH_RHC_PLUS_ROLL_TRIM INTEGER SINGLE;
	DECLARE LH_RHC_MINUS_ROLL_TRIM INTEGER SINGLE;
	DECLARE RH_RHC_PLUS_PITCH_TRIM INTEGER SINGLE;
	DECLARE RH_RHC_MINUS_PITCH_TRIM INTEGER SINGLE;
	DECLARE RH_RHC_PLUS_ROLL_TRIM INTEGER SINGLE;
	DECLARE RH_RHC_MINUS_ROLL_TRIM INTEGER SINGLE;
	DECLARE LH_PLUS_PITCH_TRIM INTEGER SINGLE;
	DECLARE LH_MINUS_PITCH_TRIM INTEGER SINGLE;
	DECLARE LH_PLUS_ROLL_TRIM INTEGER SINGLE;
	DECLARE LH_MINUS_ROLL_TRIM INTEGER SINGLE;
	DECLARE LH_PLUS_YAW_TRIM INTEGER SINGLE;
	DECLARE LH_MINUS_YAW_TRIM INTEGER SINGLE;
	DECLARE RH_PLUS_PITCH_TRIM INTEGER SINGLE;
	DECLARE RH_MINUS_PITCH_TRIM INTEGER SINGLE;
	DECLARE RH_PLUS_ROLL_TRIM INTEGER SINGLE;
	DECLARE RH_MINUS_ROLL_TRIM INTEGER SINGLE;
	DECLARE RH_PLUS_YAW_TRIM INTEGER SINGLE;
	DECLARE RH_MINUS_YAW_TRIM INTEGER SINGLE;
	DECLARE DETM_RHC INTEGER SINGLE;
	DECLARE DATM_RHC INTEGER SINGLE;
	DECLARE DETM_PAN INTEGER SINGLE;
	DECLARE DATM_PAN INTEGER SINGLE;
	DECLARE DRT INTEGER SINGLE;
C
C	Body Flap Switch positions
	DECLARE LH_BODY_FLAP_UP INTEGER SINGLE;
	DECLARE LH_BODY_FLAP_DOWN INTEGER SINGLE;
	DECLARE RH_BODY_FLAP_UP INTEGER SINGLE;
	DECLARE RH_BODY_FLAP_DOWN INTEGER SINGLE;
	DECLARE DBFMAN INTEGER SINGLE;
C
C	MPS switches
	DECLARE MPS_BACKUP_LH2_PRPLT_DUMP_START INTEGER SINGLE;
	DECLARE MPS_BACKUP_LH2_PRPLT_DUMP_STOP INTEGER SINGLE;
	DECLARE MPS_PRPLT_DUMP_SEQUENCE_START INTEGER SINGLE;
	DECLARE MPS_PRPLT_DUMP_SEQUENCE_STOP INTEGER SINGLE;
	DECLARE MPS_ENG_LIMIT_CONTROL_ENABLE INTEGER SINGLE;
	DECLARE MPS_ENG_LIMIT_CONTROL_INHIBIT INTEGER SINGLE;
	DECLARE MPS_ENG_LIMIT_CONTROL_AUTO INTEGER SINGLE;
	DECLARE MPS_ME_1_SHUTDOWN_CMD INTEGER SINGLE;
	DECLARE MPS_ME_2_SHUTDOWN_CMD INTEGER SINGLE;
	DECLARE MPS_ME_3_SHUTDOWN_CMD INTEGER SINGLE;
C
C	Separation switches
	DECLARE SRB_SEPARATION_AUTO_CMD INTEGER SINGLE;
	DECLARE SRB_SEPARATION_MANUAL_AUTO_ENABLE_CMD INTEGER SINGLE;
	DECLARE SRB_SEPARATION_INITIATE_CMD INTEGER SINGLE;
	DECLARE ET_SEPARATION_MANUAL_ENABLE_CMD INTEGER SINGLE;
	DECLARE ET_SEPARATION_INITIATE_CMD INTEGER SINGLE;
	DECLARE ET_SEPARATION_AUTO_CMD INTEGER SINGLE;
C
C	FCS PBIs
	DECLARE FCS_LH_PITCH_AUTO_MODE INTEGER SINGLE;
	DECLARE FCS_LH_PITCH_CSS_MODE INTEGER SINGLE;
	DECLARE FCS_LH_RY_AUTO_MODE INTEGER SINGLE;
	DECLARE FCS_LH_RY_CSS_MODE INTEGER SINGLE;
	DECLARE LH_BODY_FLAP_AUTO_MANUAL INTEGER SINGLE;
	DECLARE LH_SPD_BK_THROT_AUTO_MAN INTEGER SINGLE;
	DECLARE FCS_RH_PITCH_AUTO_MODE INTEGER SINGLE;
	DECLARE FCS_RH_PITCH_CSS_MODE INTEGER SINGLE;
	DECLARE FCS_RH_RY_AUTO_MODE INTEGER SINGLE;
	DECLARE FCS_RH_RY_CSS_MODE INTEGER SINGLE;
	DECLARE RH_BODY_FLAP_AUTO_MANUAL INTEGER SINGLE;
	DECLARE RH_SPD_BK_THROT_AUTO_MAN INTEGER SINGLE;
C
C	Orbit DAP PBIs
	DECLARE FWD_DAP_SELECT_A INTEGER SINGLE;
	DECLARE FWD_DAP_SELECT_B INTEGER SINGLE;
	DECLARE FWD_DAP_AUTO INTEGER SINGLE;
	DECLARE FWD_DAP_MAN INTEGER SINGLE;
	DECLARE FWD_RCS_OPTIONS_NORM INTEGER SINGLE;
	DECLARE FWD_RCS_OPTIONS_VERNIER INTEGER SINGLE;
	DECLARE FWD_ROTATION_ROLL_DISC_RATE INTEGER SINGLE;
	DECLARE FWD_ROTATION_ROLL_ACCEL INTEGER SINGLE;
	DECLARE FWD_ROTATION_ROLL_PULSE INTEGER SINGLE;
	DECLARE FWD_ROTATION_PITCH_DISC_RATE INTEGER SINGLE;
	DECLARE FWD_ROTATION_PITCH_ACCEL INTEGER SINGLE;
	DECLARE FWD_ROTATION_PITCH_PULSE INTEGER SINGLE;
	DECLARE FWD_ROTATION_YAW_DISC_RATE INTEGER SINGLE;
	DECLARE FWD_ROTATION_YAW_ACCEL INTEGER SINGLE;
	DECLARE FWD_ROTATION_YAW_PULSE INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_X_NORM INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_X_PULSE INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_X_LVLH INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_Y_NORM INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_Y_PULSE INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_Y_LOW_Z INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_Z_NORM INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_Z_PULSE INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_Z_HIGH INTEGER SINGLE;
C
	DECLARE AFT_DAP_SELECT_A INTEGER SINGLE;
	DECLARE AFT_DAP_SELECT_B INTEGER SINGLE;
	DECLARE AFT_DAP_AUTO INTEGER SINGLE;
	DECLARE AFT_DAP_MAN INTEGER SINGLE;
	DECLARE AFT_RCS_OPTIONS_NORM INTEGER SINGLE;
	DECLARE AFT_RCS_OPTIONS_VERNIER INTEGER SINGLE;
	DECLARE AFT_ROTATION_ROLL_DISC_RATE INTEGER SINGLE;
	DECLARE AFT_ROTATION_ROLL_ACCEL INTEGER SINGLE;
	DECLARE AFT_ROTATION_ROLL_PULSE INTEGER SINGLE;
	DECLARE AFT_ROTATION_PITCH_DISC_RATE INTEGER SINGLE;
	DECLARE AFT_ROTATION_PITCH_ACCEL INTEGER SINGLE;
	DECLARE AFT_ROTATION_PITCH_PULSE INTEGER SINGLE;
	DECLARE AFT_ROTATION_YAW_DISC_RATE INTEGER SINGLE;
	DECLARE AFT_ROTATION_YAW_ACCEL INTEGER SINGLE;
	DECLARE AFT_ROTATION_YAW_PULSE INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_X_NORM INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_X_PULSE INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_X_LVLH INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_Y_NORM INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_Y_PULSE INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_Y_LOW_Z INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_Z_NORM INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_Z_PULSE INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_Z_HIGH INTEGER SINGLE;
C
C
C	AFT ADI ERROR SCALE SELECT SW (V90X7745X)
C	(1-Low; 2-Medium; 3-High)
	DECLARE AADIESW INTEGER SINGLE;
C	AFT ADI RATE SCALE SELECT SW (V90X7746X)
C	(1-Low; 2-Medium; 3-High)
	DECLARE AADIRSW INTEGER SINGLE;
C	SEL AFT ADI ATT REF PB (V90X7701X)
	DECLARE AFT_ATT_REF_PB INTEGER SINGLE;
C	SEL SENSE -X (V90X7700X)
C	(0-"-Z"; 1-"-X")
	DECLARE SENSE_SW INTEGER SINGLE;
C
C	ADI ATTITUDE SELECT SW
C	(1-Inertial; 2-LVLH; 3-Rerefence)
C	1 - LH (V90J7503C)
C	2 - RH (V90J7504C)
C	3 - AFT (V90J7744C)
	DECLARE ATT_SEL_SW ARRAY(3) INTEGER SINGLE;
C
C	STA SEL FWD ADI ATT REF PB (V90X7897X)
	DECLARE FWD_ATT_REF_PB INTEGER SINGLE;
C
C	LH ADI ERROR SCALE SELECT SW (V90J7520C)
C	(1-Low; 2-Medium; 3-High)
	DECLARE LADIESW INTEGER SINGLE;
C	LH ADI RATE SCALE SELECT SW (V90J7507C)
C	(1-Low; 2-Medium; 3-High)
	DECLARE LADIRSW INTEGER SINGLE;
C	LH HSI SOURCE SELECT (V96X2111X)
C	(1-TACAN; 2-NAV; 3-MSBLS)
	DECLARE SOURCE_LEFT INTEGER SINGLE;
C	LH HSI RECEIVER SELECT (V96J2105C)
C	(1-1; 2-2; 3-3)
	DECLARE RCVR_LEFT INTEGER SINGLE;
C	LH HSI MODE SELECT (V96X2101X)
C	(1-Approach; 2-TAEM; 3-Entry)
	DECLARE MODE_LEFT INTEGER SINGLE;
C	LH HUD ADI RATE SCALING (V72J4126C)
C	(1-Low; 2-Medium; 3-High)
	DECLARE HUD_L_ADI_SCL INTEGER SINGLE;
C	LH HUD HSI SOURCE SELECT (V72J4127C)
C	(1-TACAN; 2-NAV; 3-MSBLS)
	DECLARE HUD_L_HSI_SEL INTEGER SINGLE;
C
C	RH ADI ERROR SCALE SELECT SW (V90J7506C)
C	(1-Low; 2-Medium; 3-High)
	DECLARE RADIESW INTEGER SINGLE;
C	RH ADI RATE SCALE SELECT SW (V90J7508C)
C	(1-Low; 2-Medium; 3-High)
	DECLARE RADIRSW INTEGER SINGLE;
C	RH HSI SOURCE SELECT (V96X2211X)
C	(1-TACAN; 2-NAV; 3-MSBLS)
	DECLARE SOURCE_RIGHT INTEGER SINGLE;
C	RH HSI RECEIVER SELECT (V96J2205C)
C	(1-1; 2-2; 3-3)
	DECLARE RCVR_RIGHT INTEGER SINGLE;
C	RH HSI MODE SELECT (V96X2201X)
C	(1-Approach; 2-TAEM; 3-Entry)
	DECLARE MODE_RIGHT INTEGER SINGLE;
C	RH HUD ADI RATE SCALING (V72J4141C)
C	(1-Low; 2-Medium; 3-High)
	DECLARE HUD_R_ADI_SCL INTEGER SINGLE;
C	RH HUD HSI SOURCE SELECT (V72J4142C)
C	(1-TACAN; 2-NAV; 3-MSBLS)
	DECLARE HUD_R_HSI_SEL INTEGER SINGLE;
C
C
C	Ascent
	DECLARE K_CMD INTEGER SINGLE;
	DECLARE KMIN INTEGER SINGLE;
	DECLARE KMAX INTEGER SINGLE;
C	(0-KMAX_NOM; 1-KMAX_SECONDARY; 2-KMAX_ABORT)
	DECLARE KMAX_SEL INTEGER SINGLE;
C	MPS dump complete flag
	DECLARE MPS_LO2_DUMP_STOP INTEGER SINGLE;
C
C	Vent Doors
C	Config Vent Doors for Launch cmd
	DECLARE CONF_VENT_DOORS INTEGER SINGLE;
C	Orbiter Vent Doors status word
	DECLARE ORBITER_VENT_DOORS_STATUS_WORD INTEGER DOUBLE;
C	Manual Vent Door close/open command
	DECLARE VENT_DOOR_SEQ_INIT INTEGER SINGLE;
C	Manual Vent Door close cmd
	DECLARE ALL_VENT_CLOSE_CMD INTEGER SINGLE;
C	Vent Door position indication (0-no info, 1-open, 2-closed)
	DECLARE VENT_DOOR_POS_IND INTEGER SINGLE;
C
C	SSME and MPS flags
C	ME-x command path fail flag
	DECLARE ME_CMD_PATH_FAIL ARRAY(3) INTEGER SINGLE;
C	ME-x electronic lockup mode flag
	DECLARE ME_ELEC_LOCKUP ARRAY(3) INTEGER SINGLE;
C	ME-x flight data path fail flag
	DECLARE ME_FLT_DATA_PATH_FAIL ARRAY(3) INTEGER SINGLE;
C	ME-x hydraulic lockup mode flag
	DECLARE ME_HYD_LOCKUP ARRAY(3) INTEGER SINGLE;
C	ME-x engine limit exceeded flag
	DECLARE ME_LIM_EX ARRAY(3) INTEGER SINGLE;
C	MPS E-x eng ready ind
	DECLARE ME_READY ARRAY(3) INTEGER SINGLE;
C	MPS E-x post-shutdown phase
	DECLARE MEPSTSHDN ARRAY(3) INTEGER SINGLE;
C	MPS E-x shutdown phase
	DECLARE MESHDN ARRAY(3) INTEGER SINGLE;
C	MPS E1 fail flag
	DECLARE ME1_FAIL_SHUTDOWN INTEGER SINGLE;
C	MPS E2 fail flag
	DECLARE ME2_FAIL_SHUTDOWN INTEGER SINGLE;
C	MPS E3 fail flag
	DECLARE ME3_FAIL_SHUTDOWN INTEGER SINGLE;
C	MECO command flag
	DECLARE MECO_CMD INTEGER SINGLE;
C	MECO confirmed flag
	DECLARE MECO_CONFIRMED INTEGER SINGLE;
C	MPS E-1 percent ch press [pct]
	DECLARE ME1_CH_PRESS_FDBK INTEGER SINGLE;
C	MPS E-2 percent ch press [pct]
	DECLARE ME2_CH_PRESS_FDBK INTEGER SINGLE;
C	MPS E-3 percent ch press [pct]
	DECLARE ME3_CH_PRESS_FDBK INTEGER SINGLE;
C
C	ET separation command flag
	DECLARE ET_SEP_CMD INTEGER SINGLE;
C	GMT of ET separation (V90W8621C) [sec]
	DECLATE T_ET_SEP SCALAR DOUBLE;
C
C	L P/S/OFF GMBL ACTR SEL (V93J6904CA) (0-Pri, 1-Sec, 2-Off)
	DECLARE OMSL_ACT_SEL INTEGER SINGLE;
C	R P/S/OFF GMBL ACTR SEL (V93J6906CA) (0-Pri, 1-Sec, 2-Off)
	DECLARE OMSR_ACT_SEL INTEGER SINGLE;
C	OMS-L ACTIVE PITCH POSN (V95H1140C) [deg]
	DECLARE AOMSLPFDBK SCALAR SINGLE;
C	OMS-L ACTIVE YAW POSN (V95H1141C) [deg]
	DECLARE AOMSLYFDBK SCALAR SINGLE;
C	OMS-R ACTIVE PITCH POSN (V95H1144C) [deg]
	DECLARE AOMSRPFDBK SCALAR SINGLE;
C	OMS-R ACTIVE YAW POSN (V95H1145C) [deg]
	DECLARE AOMSRYFDBK SCALAR SINGLE;
C	OMS-L STBY PITCH POSN (V95H1142C) [deg]
	DECLARE STOMSLPFDBK SCALAR SINGLE;
C	OMS-L STBY YAW POSN (V95H1143C) [deg]
	DECLARE STOMSLYFDBK SCALAR SINGLE;
C	OMS-R STBY PITCH POSN (V95H1146C) [deg]
	DECLARE STOMSRPFDBK SCALAR SINGLE;
C	OMS-R STBY YAW POSN (V95H1147C) [deg]
	DECLARE STOMSRYFDBK SCALAR SINGLE;
C	OMS-L SELECTED PITCH ACTR PFB (V95H1601C) [deg]
	DECLARE SOMSLPFDBK SCALAR SINGLE;
C	OMS-L SELECTED YAW ACTR PFB (V95H1602C) [deg]
	DECLARE SOMSLYFDBK SCALAR SINGLE;
C	OMS-R SELECTED PITCH ACTR PFB (V95H1603C) [deg]
	DECLARE SOMSRPFDBK SCALAR SINGLE;
C	OMS-R SELECTED YAW ACTR PFB (V95H1604C) [deg]
	DECLARE SOMSRYFDBK SCALAR SINGLE;
C	L OMS PITCH DATA GOOD (V95X1606X)
	DECLARE LOMSPDG INTEGER SINGLE;
C	L OMS YAW DATA GOOD (V95X1607X)
	DECLARE LOMSYDG INTEGER SINGLE;
C	R OMS PITCH DATA GOOD (V95X1608X)
	DECLARE ROMSPDG INTEGER SINGLE;
C	R OMS YAW DATA GOOD (V95X1609X)
	DECLARE ROMSYDG INTEGER SINGLE;
C	ZAP COMMAND (V93X6908X)
	DECLARE ZAP_CMD INTEGER SINGLE;
C	OMS CK ENA CMD (V93X6901X)
	DECLARE OMS_CK_ENA_CMD INTEGER SINGLE;
C	OMS DRIVE IN PROCESS (V95X1568X)
	DECLARE DRIVE_OMS INTEGER SINGLE;
C	0 - OMS CMD PITCH LEFT (V90H2180C)
C	1 - OMS CMD YAW LEFT (V90H2181C)
	DECLARE OMSL_PITCH_YAW_CMD VECTOR(2) SINGLE;
C	0 - OMS CMD PITCH RIGHT (V90H2730C)
C	1 - OMS CMD YAW RIGHT (V90H2182C)
	DECLARE OMSR_PITCH_YAW_CMD VECTOR(2) SINGLE;
C	SELECTED OMS-L PITCH CMD (V95H1564C) [deg]
	DECLARE SEL_OMS_LP_CMD SCALAR SINGLE;
C	SELECTED OMS-L YAW CMD (V95H1562C) [deg]
	DECLARE SEL_OMS_LY_CMD SCALAR SINGLE;
C	SELECTED OMS-R PITCH CMD (V95H1565C) [deg]
	DECLARE SEL_OMS_RP_CMD SCALAR SINGLE;
C	SELECTED OMS-R YAW CMD (V95H1563C) [deg]
	DECLARE SEL_OMS_RY_CMD SCALAR SINGLE;
C	OMS L PITCH GIMBAL FAIL FLAG (V90X7677X)
	DECLARE OMSL_PITCH_FAIL INTEGER SINGLE;
C	OMS L YAW GIMBAL FAIL FLAG (V90X7679X)
	DECLARE OMSL_YAW_FAIL INTEGER SINGLE;
C	OMS R PITCH GIMBAL FAIL FLAG (V90X7678X)
	DECLARE OMSR_PITCH_FAIL INTEGER SINGLE;
C	OMS R YAW GIMBAL FAIL FLAG (V90X7680X)
	DECLARE OMSR_YAW_FAIL INTEGER SINGLE;
C	OMS-L PITCH ACTR STATUS (V94J4065C) (0-blank, 1-missing data, 2-down arrow)
	DECLARE OMSL_PITCH_STATUS INTEGER SINGLE;
C	OMS-L YAW ACTR STATUS (V94J4066C) (0-blank, 1-missing data, 2-down arrow)
	DECLARE OMSL_YAW_STATUS INTEGER SINGLE;
C	OMS-R PITCH ACTR STATUS (V94J4067C) (0-blank, 1-missing data, 2-down arrow)
	DECLARE OMSR_PITCH_STATUS INTEGER SINGLE;
C	OMS-R YAW ACTR STATUS (V94J4068C) (0-blank, 1-missing data, 2-down arrow)
	DECLARE OMSR_YAW_STATUS INTEGER SINGLE;
C
C	GAX
C	ET AUTO SEP/INHIBIT CREW ALERT (V90X8259X)
	DECLARE ET_AUTO_SEP_INHIBIT_CREW_ALERT INTEGER SINGLE;
C	RHC DAP DNMODE (V96X0041X)
	DECLARE DAP_ALERT INTEGER SINGLE;
C	REF ROLL STATUS (V94X1253X)
	DECLARE REF_ROL_STAT INTEGER SINGLE;
C	SPEED BRAKE CREW ALERT (V90X8746X)
	DECLARE SPEED_BRAKE_CREW_ALERT INTEGER SINGLE;
	DECLARE TGT_DELTA_T_CREW_ALERT INTEGER SINGLE;
	DECLARE TGT_EL_ANG_CREW_ALERT INTEGER SINGLE;
	DECLARE TGT_ITER_CREW_ALERT INTEGER SINGLE;
C	LIB HI/LO SATURATION STATUS (V94J4135C) (0-up arrow, 1-down arrow, 2-blank)
	DECLARE LIB_HI_LO_SATURATION_STATUS INTEGER SINGLE;
C	LOB HI/LO SATURATION STATUS (V94J4136C) (0-up arrow, 1-down arrow, 2-blank)
	DECLARE LOB_HI_LO_SATURATION_STATUS INTEGER SINGLE;
C	RIB HI/LO SATURATION STATUS (V94J4137C) (0-up arrow, 1-down arrow, 2-blank)
	DECLARE RIB_HI_LO_SATURATION_STATUS INTEGER SINGLE;
C	ROB HI/LO SATURATION STATUS (V94J4138C) (0-up arrow, 1-down arrow, 2-blank)
	DECLARE ROB_HI_LO_SATURATION_STATUS INTEGER SINGLE;
C
C	General coordinate transformation parameters
C	Unit vector along Earth axis
	DECLARE EARTH_POLE VECTOR(3) DOUBLE;
C	GPC clock time in GMT
	DECLARE CLOCK SCALAR DOUBLE;
C	GMT reference time for MET
	DECLARE T_MET_REF SCALAR DOUBLE;
C	Read GMT and store flag (V90X8402X)
	DECLARE STORE_MET_REF INTEGER SINGLE;
C	User parameter processing Shuttle state vector
	DECLARE R_AVGG VECTOR(3) DOUBLE;
	DECLARE V_AVGG VECTOR(3) DOUBLE;
	DECLARE T_STATE SCALAR DOUBLE;
C	User parameter processing target state vector
	DECLARE R_TARGET VECTOR(3) DOUBLE;
	DECLARE V_TARGET VECTOR(3) DOUBLE;
	DECLARE G_TARGET VECTOR(3) DOUBLE;
C	Target relative state
	DECLARE DEL_R_TARG VECTOR(3) DOUBLE;
	DECLARE DEL_V_TARG VECTOR(3) DOUBLE;
C	Sun unit vector
	DECLARE UR_SUN VECTOR(3) DOUBLE;
C	Flag indicating a rendezvous navigation phase is active
	DECLARE DOING_REND_NAV INTEGER SINGLE;
C	Attitude quaternion
	DECLARE Q_B_I VECTOR(4) SINGLE;
C	Unit reference commanded thrust direction vector in M50 coordinates
	DECLARE LAMC VECTOR(3) SINGLE;
C
C	--------------------------------
C	temporary SM section
C	--------------------------------
C
C	System Services Common Compool - CZ1_COMMON
C	Mode transition enable/inhibit event
C	2 - SSB_PL_BAY_DOORS
	DECLARE CZ1E_OPS_MODE_INHIBIT INTEGER SINGLE;
C
C	MDM OF1 input
C	0 - PL3_1B_REL
C	1 - PL3_1B_LAT
C	2 - PL3_1B_RDY
C	3 - PL2_2B_REL
C	4 - PL2_2B_LAT
C	5 - PL2_2B_RDY
C	6 - PL3_2B_REL
C	7 - PL3_2B_LAT
C	8 - PL3_2B_RDY
C	9 - PL2_3B_REL
C	10 - PL2_3B_LAT
C	11 - PL2_3B_RDY
C	12 - PL3_3B_REL
C	13 - PL3_3B_LAT
C	14 - PL3_3B_RDY
C	15 -
	DECLARE OF1_IOM14_CH0_DATA INTEGER SINGLE;
C	0 - PL2_4B_REL
C	1 - PL2_4B_LAT
C	2 - PL2_4B_RDY
C	3 - PL3_4B_REL
C	4 - PL3_4B_LAT
C	5 - PL3_4B_RDY
C	6 - PL2_5B_REL
C	7 - PL2_5B_LAT
C	8 - PL2_5B_RDY
C	9 - PL3_5B_REL
C	10 - PL3_5B_LAT
C	11 - PL3_5B_RDY
C	12 -
C	13 -
C	14 -
C	15 -
	DECLARE OF1_IOM14_CH1_DATA INTEGER SINGLE;
C
C	MDM OF2 input
C	0 - PL3_1A_REL
C	1 - PL3_1A_LAT
C	2 - PL3_1A_RDY
C	3 - PL1_1B_REL
C	4 - PL1_1B_LAT
C	5 - PL1_1B_RDY
C	6 - PL2_1B_REL
C	7 - PL2_1B_LAT
C	8 - PL2_1B_RDY
C	9 - PL3_2A_REL
C	10 - PL3_2A_LAT
C	11 - PL3_2A_RDY
C	12 - PL1_2B_REL
C	13 - PL1_2B_LAT
C	14 - PL1_2B_RDY
C	15 -
	DECLARE OF2_IOM14_CH0_DATA INTEGER SINGLE;
C	0 - PL3_3A_REL
C	1 - PL3_3A_LAT
C	2 - PL3_3A_RDY
C	3 - PL1_3B_REL
C	4 - PL1_3B_LAT
C	5 - PL1_3B_RDY
C	6 - PL3_4A_REL
C	7 - PL3_4A_LAT
C	8 - PL3_4A_RDY
C	9 - PL1_4B_REL
C	10 - PL1_4B_LAT
C	11 - PL1_4B_RDY
C	12 - PL2_5A_REL
C	13 - PL2_5A_LAT
C	14 - PL2_5A_RDY
C	15 -
	DECLARE OF2_IOM14_CH1_DATA INTEGER SINGLE;
C	0 - PL3_5A_REL
C	1 - PL3_5A_LAT
C	2 - PL3_5A_RDY
C	3 - PL1_5B_REL
C	4 - PL1_5B_LAT
C	5 - PL1_5B_RDY
C	6 -
C	7 -
C	8 -
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
	DECLARE OF2_IOM14_CH2_DATA INTEGER SINGLE;
C
C	MDM OF4 input
C	0 - PL2_2A_REL
C	1 - PL2_2A_LAT
C	2 - PL2_2A_RDY
C	3 - PL2_3A_REL
C	4 - PL2_3A_LAT
C	5 - PL2_3A_RDY
C	6 - PL2_4A_REL
C	7 - PL2_4A_LAT
C	8 - PL2_4A_RDY
C	9 -
C	10 -
C	11 -
C	12 - PLD_SEL_POS_1
C	13 - PLD_SEL_POS_2
C	14 - PLD_SEL_POS_3
C	15 - PLD_SEL_MONITOR
	DECLARE OF4_IOM15_CH0_DATA INTEGER SINGLE;
C
C	MDM OA3 input
C	0 - PL1_1A_REL
C	1 - PL1_1A_LAT
C	2 - PL1_1A_RDY
C	3 - PL2_1A_REL
C	4 - PL2_1A_LAT
C	5 - PL2_1A_RDY
C	6 - PL1_2A_REL
C	7 - PL1_2A_LAT
C	8 - PL1_2A_RDY
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
	DECLARE OA3_IOM12_CH0_DATA INTEGER SINGLE;
C	0 - PL1_3A_REL
C	1 - PL1_3A_LAT
C	2 - PL1_3A_RDY
C	3 - PL1_4A_REL
C	4 - PL1_4A_LAT
C	5 - PL1_4A_RDY
C	6 - PL1_5A_REL
C	7 - PL1_5A_LAT
C	8 - PL1_5A_RDY
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
	DECLARE OA3_IOM12_CH1_DATA INTEGER SINGLE;
C
C
C	Payload Bay Doors Communications Table - CSB_PBD_CMT
C	Auto Mode Item (V93X5800X)
	DECLARE CSBB_AUTO_MODE_ITEM INTEGER SINGLE;
C	indicates manual mode ITEM input (ITEM-1)
C	3 - Centerline Latch Group 5-8 Item (V93X5801X)
C	4 - Centerline Latch Group 9-12 Item (V93X5802X)
C	5 - Centerline Latch Group 1-4 Item (V93X58013)
C	6 - Centerline Latch Group 13-16 Item (V93X5804X)
C	7 - Right FWD BKHD Latch Group Item (V93X5810X)
C	8 - Right AFT BKHD Latch Group Item (V93X5811X)
C	9 - Right PBD Door Item (V93X5821X)
C	10 - Left FWD BKHD Latch Group Item (V93X5819X)
C	11 - Left AFT BKHD Latch Group Item (V93X5820X)
C	12 - Left PBD Door Item (V93X5821X)
	DECLARE CSBB_MANUAL_MODE_ITEM INTEGER SINGLE;
C	indicates power on/off ITEM input (ITEM-1)
C	0 - Power On Item (V93X5830X)
C	1 - Power Off Item (V93X5831X)
	DECLARE CSBB_POWER_ON_OFF_ITEM INTEGER SINGLE;
C	Switch Bypass Item (V93X5814X)
	DECLARE CSBB_SWITCH_BYPASS_ITEM INTEGER SINGLE;
C	Open Item (V93X5815X)
	DECLARE CSBB_PBD_OPEN_ITEM INTEGER SINGLE;
C	Stop Item (V93X5816X)
	DECLARE CSBB_PBD_STOP_ITEM INTEGER SINGLE;
C	Close Item (V93X5817X)
	DECLARE CSBB_PBD_CLOSE_ITEM INTEGER SINGLE;
C	0 - Centerline Latch Group 5-8 Open Fail Indicator (V92X0555X)
C	1 - Centerline Latch Group 9-12 Open Fail Indicator (V92X0556X)
C	2 - Centerline Latch Group 1-4 Open Fail Indicator (V92X0554X)
C	3 - Centerline Latch Group 13-16 Open Fail Indicator (V92X0557X)
C	4 - Right FWD BHD Latch Group Open Fail Indicator (V92X0531X)
C	5 - Right AFT BHD Latch Group Open Fail Indicator (V92X0536X)
C	6 - Right Door Panel Open Fail Indicator (V92X0510X)
C	7 - Left FWD BHD Latch Group Open Fail Indicator (V92X0516X)
C	8 - Left AFT BHD Latch Group Open Fail Indicator (V92X0521X)
C	9 - Left Door Panel Open Fail Indicator (V92X0505X)
	DECLARE CSBB_OPEN_FAIL_INDICATOR INTEGER SINGLE;
C	0 - Centerline Latch Group 5-8 Close Fail Indicator (V92X0551X)
C	1 - Centerline Latch Group 9-12 Close Fail Indicator (V92X0552X)
C	2 - Centerline Latch Group 1-4 Close Fail Indicator (V92X0550X)
C	3 - Centerline Latch Group 13-16 Close Fail Indicator (V92X0553X)
C	4 - Right FWD BHD Latch Group Close Fail Indicator (V92X0530X)
C	5 - Right AFT BHD Latch Group Close Fail Indicator (V92X0535X)
C	6 - Right Door Panel Close Fail Indicator (V92X0511X)
C	7 - Left FWD BHD Latch Group Close Fail Indicator (V92X0515X)
C	8 - Left AFT BHD Latch Group Close Fail Indicator (V92X0520X)
C	9 - Left Door Panel Close Fail Indicator (V92X0506X)
	DECLARE CSBB_CLOSE_FAIL_INDICATOR INTEGER SINGLE;
C	Control Switch Position Indicator
C	0 = stop; 1 = open; 2 = close
	DECLARE CSBB_CONTROL_SWITCH_POS_INDIC INTEGER SINGLE;
C	PBD Switch Indicator Text (V92J0508C)
	DECLARE CSBB_PBD_SWITCH_IND_TEXT CHARACTER(4);
	DECLARE CSBB_PBD_SW_OUT_STAT INTEGER SINGLE;
C	Centerline Latch 5-8 Text (V92J0492C)
	DECLARE CSBB_C_LCH_5_8_TEXT CHARACTER(2);
C	Centerline Latch 9-12 Text (V92J0493C)
	DECLARE CSBB_C_LCH_9_12_TEXT CHARACTER(2);
C	Centerline Latch 1-4 Text (V92J0494C)
	DECLARE CSBB_C_LCH_1_4_TEXT CHARACTER(2);
C	Centerline Latch 13-16 Text (V92J0495C)
	DECLARE CSBB_C_LCH_13_16_TEXT CHARACTER(2);
C	Right FWD BHD Latch Text (V92J0496C)
	DECLARE CSBB_R_FWD_BHD_TEXT CHARACTER(2);
C	Right AFT BHD Latch Text (V92J0498C)
	DECLARE CSBB_R_AFT_BHD_TEXT CHARACTER(2);
C	Left FWD BHD Latch Text (V92J0497C)
	DECLARE CSBB_L_FWD_BHD_TEXT CHARACTER(2);
C	Left AFT BHD Latch Text (V92J0499C)
	DECLARE CSBB_L_AFT_BHD_TEXT CHARACTER(2);
C	Right Door Text (V92J0503C)
	DECLARE CSBB_R_DOOR_TEXT CHARACTER(3);
C	Left Door Text (V92J0504C)
	DECLARE CSBB_L_DOOR_TEXT CHARACTER(3);
	DECLARE CSBB_LATCH_DOOR_OUT_STAT INTEGER SINGLE;
C	PBD Output Indicator
	DECLARE CSBB_PBD_OUTPUT_INDICATOR INTEGER SINGLE;
	DECLARE CSBB_AUTO_MODE_FLAG INTEGER SINGLE;
	DECLARE CSBB_MANUAL_MODE_FLAG INTEGER SINGLE;
	DECLARE CSBB_POWER_ON_OFF_FLAG INTEGER SINGLE;
C
C	Common PBD Fail Indicator (V92X0490X)
	DECLARE CSBB_COMMON_PBD_FAIL_INDICATOR INTEGER SINGLE;
C
	DECLARE CSBB_PBD_CONFIG_INDICATOR INTEGER SINGLE;
C
C	Special Processes Output Buffer - CSS_SPOB
C	PF1_IOM2_CH0 output
C	0 - Right Door Open Command 1 (V37K2050Y)
C	1 - Right Door Close Command 1 (V37K2060Y)
C	2 - Right FWD BHD Latch Group Open Command 1 (V37K2100Y)
C	3 - Right FWD BHD Latch Group Close Command 1 (V37K2110Y)
C	4 - Right AFT BHD Latch Group Open Command 2 (V37K2121Y)
C	5 - Right AFT BHD Latch Group Close Command 2 (V37K2131Y)
C	6 - Power On/Off Command 1A (V37K2000Y)
C	7 - Power On/Off Command 3A (V37K2004Y)
C	8 - Power On/Off Command 4A (V37K2006Y)
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
	DECLARE CSBB_PF01_OUTPUT_1 INTEGER SINGLE;
C	PF1_IOM7_CH0 output
C	0 - PBD Open Complete Indicator 1 (V72X3780Y)
C	1 - PBD Close Complete Indicator 1 (V72X3785Y)
C	2 - Centerline Latch Group 1-4 Open Command 1 (V37K2200Y)
C	3 - Centerline Latch Group 1-4 Close Command 1 (V37K2210Y)
C	4 - Centerline Latch Group 5-8 Open Command 1 (V37K2220Y)
C	5 - Centerline Latch Group 5-8 Close Command 1 (V37K2230Y)
C	6 - Centerline Latch Group 9-12 Open Command 1 (V37K2240Y)
C	7 - Centerline Latch Group 9-12 Close Command 1 (V37K2250Y)
C	8 - Centerline Latch Group 13-16 Open Command 2 (V37K2261Y)
C	9 - Centerline Latch Group 13-16 Close Command 2 (V37K2271Y)
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
	DECLARE CSBB_PF01_OUTPUT_2 INTEGER SINGLE;
C	PF1_IOM14_CH0 output
C	0 - Left Door Open Command 2 (V37K2071Y)
C	1 - Left Door Close Command 2 (V37K2081Y)
C	2 - Left FWD BHD Latch Group Open Command 1 (V37K2150Y)
C	3 - Left FWD BHD Latch Group Close Command 1 (V37K2160Y)
C	4 - Left AFT BHD Latch Group Open Command 1 (V37K2170Y)
C	5 - Left AFT BHD Latch Group Close Command 1 (V37K2180Y)
C	6 -
C	7 - Power On/Off Command 3B (V37K2005Y)
C	8 - Power On/Off Command 4B (V37K2007Y)
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
	DECLARE CSBB_PF01_OUTPUT_3 INTEGER SINGLE;
C	PF1_IOM14_CH2 output
C	0 -
C	1 -
C	2 -
C	3 -
C	4 -
C	5 -
C	6 -
C	7 - Power On/Off Command 1B (V37K2001Y)
C	8 -
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
	DECLARE CSBB_PF01_OUTPUT_4 INTEGER SINGLE;
C	PF2_IOM2_CH0 output
C	0 - Right Door Open Command 2 (V37K2051Y)
C	1 - Right Door Close Command 2 (V37K2061Y)
C	2 - Right FWD BHD Latch Group Open Command 2 (V37K2101Y)
C	3 - Right FWD BHD Latch Group Close Command 2 (V37K2111Y)
C	4 - Right AFT BHD Latch Group Open Command 1 (V37K2120Y)
C	5 - Right AFT BHD Latch Group Close Command 1 (V37K2130Y)
C	6 - Power On/Off Command 2A (V37K2002Y)
C	7 - Power On/Off Command 5A (V37K2008Y)
C	8 - Power On/Off Command 6A (V37K2010Y)
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
	DECLARE CSBB_PF02_OUTPUT_1 INTEGER SINGLE;
C	PF2_IOM7_CH0 output
C	0 - PBD Open Complete Indicator 2 (V72X3781Y)
C	1 - PBD Close Complete Indicator 2 (V72X3786Y)
C	2 - Centerline Latch Group 1-4 Open Command 2 (V37K2201Y)
C	3 - Centerline Latch Group 1-4 Close Command 2 (V37K2211Y)
C	4 - Centerline Latch Group 5-8 Open Command 2 (V37K2221Y)
C	5 - Centerline Latch Group 5-8 Close Command 2 (V37K2231Y)
C	6 - Centerline Latch Group 9-12 Open Command 2 (V37K2241Y)
C	7 - Centerline Latch Group 9-12 Close Command 2 (V37K2251Y)
C	8 - Centerline Latch Group 13-16 Open Command 1 (V37K2260Y)
C	9 - Centerline Latch Group 13-16 Close Command 1 (V37K2270Y)
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
	DECLARE CSBB_PF02_OUTPUT_2 INTEGER SINGLE;
C	PF2_IOM14_CH0 output
C	0 - Left Door Open Command 1 (V37K2070Y)
C	1 - Left Door Close Command 1 (V37K2080Y)
C	2 - Left FWD BHD Latch Group Open Command 2 (V37K2151Y)
C	3 - Left FWD BHD Latch Group Close Command 2 (V37K2161Y)
C	4 - Left AFT BHD Latch Group Open Command 2 (V37K2171Y)
C	5 - Left AFT BHD Latch Group Close Command 2 (V37K2181Y)
C	6 - Power On/Off Command 2B (V37K2003Y)
C	7 - Power On/Off Command 5B (V37K2009Y)
C	8 -
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
	DECLARE CSBB_PF02_OUTPUT_3 INTEGER SINGLE;
C	PF2_IOM14_CH2 output
C	0 -
C	1 - Power On/Off Command 6B (V37K2011Y)
C	2 -
C	3 -
C	4 -
C	5 -
C	6 -
C	7 -
C	8 -
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
	DECLARE CSBB_PF02_OUTPUT_4 INTEGER SINGLE;
C
C	SSO current annunciation indicators
C	0 -
C	1 -
C	2 - FC Purge temp fail flag
C	3 - FC Purge 1 fail flag
C	4 - FC Purge 2 fail flag
C	5 - FC Purge 3 fail flag
C	6 - PLBD SEQ FAIL
C	7 - PLBD CONFIG
C	8 -
C	9 -
C	10 -
C	11 -
C	12 -
C	13 -
C	14 -
C	15 -
	DECLARE CSSB_CUR_ANN INTEGER SINGLE;
C	SSO previous annunciation indicators
	DECLARE CSSB_PREV_ANN INTEGER SINGLE;