C	----------------------------------------------------------------
C	SSV COMPOOL definition
C	----------------------------------------------------------------
C	SINGLE => 16b
C	DOUBLE => 32b
C
C	INFO: SCALAR should always be DOUBLE, and implemented in C with a 32b float
C
C	current major mode
	DECLARE MM INTEGER SINGLE;
C	new major mode
	DECLARE NEW_MM INTEGER SINGLE;
C
C	Fault input buffer
	DECLARE FAULT_IN_IDX INTEGER SINGLE;
	DECLARE FAULT_IN_CWCLASS ARRAY(5) INTEGER SINGLE;
	DECLARE FAULT_IN_MSG ARRAY(5) CHARACTER(19);
C	Fault display buffer
	DECLARE FAULT_DISPBUF ARRAY(15) CHARACTER(43);
	DECLARE FAULT_DISPBUF_CNT INTEGER SINGLE;
	DECLARE FAULT_DISPBUF_CLEAR INTEGER SINGLE;
C	Fault message buffer indicator
	DECLARE FAULT_MSG_BUF_IND INTEGER SINGLE;
C	Fault message line buffer
	DECLARE FAULT_MSG_LINE CHARACTER(43);
C	Fault message line state (0 = empty, 1 = flashing, 2 = static)
	DECLARE FAULT_MSG_LINE_STATE INTEGER SINGLE;
C	Illegal Entry indication for each CRT
	DECLARE ILLEGAL_ENTRY_FAULT INTEGER SINGLE;
C
	DECLARE ACK_KEY INTEGER SINGLE;
	DECLARE MSGRESET_KEY INTEGER SINGLE;
C
C	duration of SM tone [s]
	DECLARE SM_TONE_DURATION INTEGER SINGLE;
C
C	outputs to EIUs
	DECLARE EIU_1_CMD INTEGER SINGLE;
	DECLARE EIU_2_CMD INTEGER SINGLE;
	DECLARE EIU_3_CMD INTEGER SINGLE;
C
C	inputs from EIUs
	DECLARE EIU_1_PRIDATA ARRAY(32) INTEGER SINGLE;
	DECLARE EIU_2_PRIDATA ARRAY(32) INTEGER SINGLE;
	DECLARE EIU_3_PRIDATA ARRAY(32) INTEGER SINGLE;
	DECLARE EIU_1_SECDATA ARRAY(6) INTEGER SINGLE;
	DECLARE EIU_2_SECDATA ARRAY(6) INTEGER SINGLE;
	DECLARE EIU_3_SECDATA ARRAY(6) INTEGER SINGLE;
C
C	output to DDU-1
	DECLARE DDU1_ADI ARRAY(14) INTEGER SINGLE;
	DECLARE DDU1_HSI ARRAY(10) INTEGER SINGLE;
	DECLARE DDU1_AVVI ARRAY(6) INTEGER SINGLE;
	DECLARE DDU1_AMI ARRAY(6) INTEGER SINGLE;
C
C	output to DDU-2
	DECLARE DDU2_ADI ARRAY(14) INTEGER SINGLE;
	DECLARE DDU2_HSI ARRAY(10) INTEGER SINGLE;
	DECLARE DDU2_AVVI ARRAY(6) INTEGER SINGLE;
	DECLARE DDU2_AMI ARRAY(6) INTEGER SINGLE;
C
C	output to HUD-1
	DECLARE HUD1_MSG1 ARRAY(31) INTEGER SINGLE;
	DECLARE HUD1_MSG2 ARRAY(12) INTEGER SINGLE;
C
C	output to HUD-2
	DECLARE HUD2_MSG1 ARRAY(31) INTEGER SINGLE;
	DECLARE HUD2_MSG2 ARRAY(12) INTEGER SINGLE;
C
C	MDM FF1 input
C	Radar Altimeter 1 data
	DECLARE FF1_IOM0_CH4_DATA INTEGER SINGLE;
C	3-LH_BODY_FLAP_UP_A
C	4-LH_BODY_FLAP_DOWN_A
C	5-MPS ME-1 SHUTDOWN CMD A
	DECLARE FF1_IOM4_CH0_DATA INTEGER SINGLE;
C	10-FCS LH PITCH AUTO MODE A
C	11-FCS LH PITCH CSS MODE A
C	13-FCS LH R-Y AUTO MODE A
C	14-FCS LH R-Y CSS MODE A
C	15-LH BODY FLAP AUTO/MANUAL A
	DECLARE FF1_IOM4_CH1_DATA INTEGER SINGLE;
C	0-LH SPD BK/THROT AUTO/MAN A
C	3-ENTRY ROLL MODE NO Y JET A
C	4-R PB/W VENTS 4 & 7 CLOSED 2
C	5-R PB/W VENTS 4 & 7 OPEN 2
C	6-R FWD VENTS 1 & 2 CLOSED 1
C	7-R FWD VENTS 1 & 2 OPEN 1
C	8-R FWD VENTS 1 & 2 PURGE IND 1
C	9-L PB VENT 6 CLOSED 1
C	10-L PB VENT 6 OPEN 1
C	11-L PB VENT 6 PURGE 1 IND 1
C	12-R PB VENT 3 CLOSED 1
C	13-R PB VENT 3 OPEN 1
C	14-R PB VENT 5 CLOSED 1
C	15-R PB VENT 5 OPEN 1
	DECLARE FF1_IOM4_CH2_DATA INTEGER SINGLE;
C	7-FWD THC POS X OUTPUT - A
C	8-FWD THC NEG X OUTPUT - A
C	9-FWD THC POS Y OUTPUT - A
C	10-FWD THC NEG Y OUTPUT - A
C	11-FWD THC POS Z OUTPUT - A
C	12-FWD THC NEG Z OUTPUT - A
C	13-LH SBTC TAKEOVER - A
	DECLARE FF1_IOM6_CH0_DATA INTEGER SINGLE;
C	1-LH_RHC_PLUS_PITCH_TRIM_A
C	2-LH_RHC_MINUS_PITCH_TRIM_A
C	3-LH_RHC_PLUS_ROLL_TRIM_A
C	4-LH_RHC_MINUS_ROLL_TRIM_A
C	5-SRB SEPARATION AUTO A CMD
C	6-SRB SEPN MANUAL/AUTO ENABLE A CMD
C	7-SRB SEPARATION INITIATE A CMD
	DECLARE FF1_IOM6_CH1_DATA INTEGER SINGLE;
C	4-FWD DAP SELECT A - A
C	5-FWD DAP SELECT B - A
C	6-AFT DAP SELECT A - C
C	7-AFT DAP SELECT B - C
C	8-FWD DAP AUTO A
C	9-FWD DAP MAN A
C	10-AFT DAP AUTO C
C	11-AFT DAP MAN C
	DECLARE FF1_IOM9_CH0_DATA INTEGER SINGLE;
C	1-SENSE SW -Z CON A
C	2-SENSE SW -X CON A
C	3-ENTRY ROLL MODE L GAIN - A
C	4-FWD ROTATION ROLL DISC RATE A
C	5-FWD ROTATION ROLL ACCEL A
C	6-FWD ROTATION ROLL PULSE A
C	7-FWD ROTATION PITCH DISC RATE A
C	8-FWD ROTATION PITCH ACCEL A
C	9-FWD ROTATION PITCH PULSE A
C	10-FWD ROTATION YAW DISC RATE A
C	11-FWD ROTATION YAW ACCEL A
C	12-FWD ROTATION YAW PULSE A
C	13-FWD RCS JETS NORM A
C	14-FWD RCS JETS VERNIER A
C	15-FWD TRANSLATION X NORM A
	DECLARE FF1_IOM9_CH1_DATA INTEGER SINGLE;
C	0-FWD TRANSLATION X PULSE A
C	1-FWD TRANSLATION X LVLH A
C	2-FWD TRANSLATION Y NORM A
C	3-FWD TRANSLATION Y PULSE A
C	4-FWD TRANSLATION Y LOW Z A
C	5-FWD TRANSLATION Z NORM A
C	6-FWD TRANSLATION Z PULSE A
C	7-FWD TRANSLATION Z HIGH A
C	8-MPS PRPLT DUMP SEQUENCE START A
C	9-MPS PRPLT DUMP SEQUENCE STOP A
	DECLARE FF1_IOM9_CH2_DATA INTEGER SINGLE;
C	1-LH_PLUS_PITCH_TRIM_A
C	2-LH_MINUS_PITCH_TRIM_A
C	3-LH_PLUS_ROLL_TRIM_A
C	4-LH_MINUS_ROLL_TRIM_A
C	5-LH_PLUS_YAW_TRIM_A
C	6-LH_MINUS_YAW_TRIM_A
C	13-CDR RDR ALTM SEL 1
	DECLARE FF1_IOM12_CH0_DATA INTEGER SINGLE;
C	8-LH_RHC_TRIM_INHIBIT_A
	DECLARE FF1_IOM12_CH1_DATA INTEGER SINGLE;
C	8-L PB VENT 6 PURGE 2 IND 1
C	14-AFT RCS OPTIONS NORM C
C	15-AFT RCS OPTIONS VERNIER C
	DECLARE FF1_IOM12_CH2_DATA INTEGER SINGLE;
C	7-AFT THC POS X OUTPUT - A
C	8-AFT THC NEG X OUTPUT - A
C	9-AFT THC POS Y OUTPUT - A
C	10-AFT THC NEG Y OUTPUT - A
C	11-AFT THC POS Z OUTPUT - A
C	12-AFT THC NEG Z OUTPUT - A
	DECLARE FF1_IOM15_CH0_DATA INTEGER SINGLE;
C	5-ET SEPARATION MANUAL ENABLE A CMD
C	6-ET SEPARATION INITIATE A CMD
C	7-ET SEPARATION AUTO A CMD
	DECLARE FF1_IOM15_CH1_DATA INTEGER SINGLE;
C
C	MDM FF2 input
C	Radar Altimeter 2 data
	DECLARE FF2_IOM0_CH4_DATA INTEGER SINGLE;
C	2-ENTRY ROLL MODE NO Y JET B
C	3-LH_BODY_FLAP_UP_B
C	4-LH_BODY_FLAP_DOWN_B
C	5-MPS ME-1 SHUTDOWN CMD B
	DECLARE FF2_IOM4_CH0_DATA INTEGER SINGLE;
C	10-FCS LH PITCH AUTO MODE B
C	11-FCS LH PITCH CSS MODE B
C	13-FCS LH R-Y AUTO MODE B
C	14-FCS LH R-Y CSS MODE B
C	15-LH BODY FLAP AUTO/MANUAL B
	DECLARE FF2_IOM4_CH1_DATA INTEGER SINGLE;
C	0-LH SPD BK/THROT AUTO/MAN B
C	1-MPS ENG LIMIT CONTROL NO. 1 ENABLE
C	2-MPS ENG LIMIT CONTROL NO. 1 INHIBIT
C	3-MPS ENG LIMIT CONTROL NO. 1 AUTO
C	4-L PB VENT 3 CLOSED 2
C	5-L PB VENT 3 OPEN 2
C	6-L FWD VENTS 1 & 2 CLOSED 2
C	7-L FWD VENTS 1 & 2 OPEN 2
C	8-L FWD VENTS 1 & 2 PURGE IND 2
C	9-R PB VENT 6 CLOSED 2
C	10-R PB VENT 6 OPEN 2
C	11-R PB VENT 6 PURGE 1 IND 2
C	12-L PB/W VENTS 4 & 7 CLOSED 2
C	13-L PB/W VENTS 4 & 7 OPEN 2
C	14-R PB VENT 5 CLOSED 2
C	15-R PB VENT 5 OPEN 2
	DECLARE FF2_IOM4_CH2_DATA INTEGER SINGLE;
C	7-FWD THC POS X OUTPUT - B
C	8-FWD THC NEG X OUTPUT - B
C	9-FWD THC POS Y OUTPUT - B
C	10-FWD THC NEG Y OUTPUT - B
C	11-FWD THC POS Z OUTPUT - B
C	12-FWD THC NEG Z OUTPUT - B
C	13-LH SBTC TAKEOVER - B
	DECLARE FF2_IOM6_CH0_DATA INTEGER SINGLE;
C	1-LH_RHC_PLUS_PITCH_TRIM_B
C	2-LH_RHC_MINUS_PITCH_TRIM_B
C	3-LH_RHC_PLUS_ROLL_TRIM_B
C	4-LH_RHC_MINUS_ROLL_TRIM_B
	DECLARE FF2_IOM6_CH1_DATA INTEGER SINGLE;
C	4-FWD DAP SELECT A - B
C	5-FWD DAP SELECT B - B
C	8-FWD DAP AUTO B
C	9-FWD DAP MAN B
	DECLARE FF2_IOM9_CH0_DATA INTEGER SINGLE;
C	0-MPS ME-2 SHUTDOWN CMD A
C	1-SENSE SW -Z CON B
C	2-SENSE SW -X CON B
C	3-ENTRY ROLL MODE L GAIN - B
C	4-FWD ROTATION ROLL DISC RATE B
C	5-FWD ROTATION ROLL ACCEL B
C	6-FWD ROTATION ROLL PULSE B
C	7-FWD ROTATION PITCH DISC RATE B
C	8-FWD ROTATION PITCH ACCEL B
C	9-FWD ROTATION PITCH PULSE B
C	10-FWD ROTATION YAW DISC RATE B
C	11-FWD ROTATION YAW ACCEL B
C	12-FWD ROTATION YAW PULSE B
C	13-FWD RCS JETS NORM B
C	14-FWD RCS JETS VERNIER B
C	15-FWD TRANSLATION X NORM B
	DECLARE FF2_IOM9_CH1_DATA INTEGER SINGLE;
C	0-FWD TRANSLATION X PULSE B
C	1-FWD TRANSLATION X LVLH B
C	2-FWD TRANSLATION Y NORM B
C	3-FWD TRANSLATION Y PULSE B
C	4-FWD TRANSLATION Y LOW Z B
C	5-FWD TRANSLATION Z NORM B
C	6-FWD TRANSLATION Z PULSE B
C	7-FWD TRANSLATION Z HIGH B
C	8-MPS PRPLT DUMP SEQUENCE START B
C	9-MPS PRPLT DUMP SEQUENCE STOP B
	DECLARE FF2_IOM9_CH2_DATA INTEGER SINGLE;
C	1-LH_PLUS_PITCH_TRIM_B
C	2-LH_MINUS_PITCH_TRIM_B
C	3-LH_PLUS_ROLL_TRIM_B
C	4-LH_MINUS_ROLL_TRIM_B
C	5-LH_PLUS_YAW_TRIM_B
C	6-LH_MINUS_YAW_TRIM_B
C	13-PLT RDR ALTM SEL 1
	DECLARE FF2_IOM12_CH0_DATA INTEGER SINGLE;
C	8-LH_RHC_TRIM_INHIBIT_B
C	10-FCS RH PITCH AUTO MODE A
C	11-FCS RH PITCH CSS MODE A
C	13-FCS RH R-Y AUTO MODE A
C	14-FCS RH R-Y CSS MODE A
C	15-RH BODY FLAP AUTO/MANUAL A
	DECLARE FF2_IOM12_CH1_DATA INTEGER SINGLE;
C	0-RH SPD BK/THROT AUTO/MAN A
C	8-R PB VENT 6 PURGE 2 IND 2
	DECLARE FF2_IOM12_CH2_DATA INTEGER SINGLE;
C	7-AFT THC POS X OUTPUT - B
C	8-AFT THC NEG X OUTPUT - B
C	9-AFT THC POS Y OUTPUT - B
C	10-AFT THC NEG Y OUTPUT - B
C	11-AFT THC POS Z OUTPUT - B
C	12-AFT THC NEG Z OUTPUT - B
C	13-RH SBTC TAKEOVER - A
	DECLARE FF2_IOM15_CH0_DATA INTEGER SINGLE;
C
C	MDM FF3 input
C	3-RH_BODY_FLAP_UP_A
C	4-RH_BODY_FLAP_DOWN_A
C	5-MPS ME-3 SHUTDOWN CMD A
	DECLARE FF3_IOM4_CH0_DATA INTEGER SINGLE;
C	10-FCS LH PITCH AUTO MODE C
C	11-FCS LH PITCH CSS MODE C
C	13-FCS LH R-Y AUTO MODE C
C	14-FCS LH R-Y CSS MODE C
C	15-LH BODY FLAP AUTO/MANUAL C
	DECLARE FF3_IOM4_CH1_DATA INTEGER SINGLE;
C	0-LH SPD BK/THROT AUTO/MAN C
C	1-MPS ENG LIMIT CONTROL NO. 2 ENABLE
C	2-MPS ENG LIMIT CONTROL NO. 2 INHIBIT
C	3-MPS ENG LIMIT CONTROL NO. 2 AUTO
C	4-L PB VENT 3 CLOSED 1
C	5-L PB VENT 3 OPEN 1
C	6-L FWD VENTS 1 & 2 CLOSED 1
C	7-L FWD VENTS 1 & 2 OPEN 1
C	8-L FWD VENTS 1 & 2 PURGE IND 1
C	9-R PB VENT 6 CLOSED 1
C	10-R PB VENT 6 OPEN 1
C	11-R PB VENT 6 PURGE 1 IND 1
C	12-L PB/W VENTS 4 & 7 CLOSED 1
C	13-L PB/W VENTS 4 & 7 OPEN 1
C	14-L PB VENT 5 CLOSED 1
C	15-L PB VENT 5 OPEN 1
	DECLARE FF3_IOM4_CH2_DATA INTEGER SINGLE;
C	7-FWD THC POS X OUTPUT - C
C	8-FWD THC NEG X OUTPUT - C
C	9-FWD THC POS Y OUTPUT - C
C	10-FWD THC NEG Y OUTPUT - C
C	11-FWD THC POS Z OUTPUT - C
C	12-FWD THC NEG Z OUTPUT - C
C	13-LH SBTC TAKEOVER - C
	DECLARE FF3_IOM6_CH0_DATA INTEGER SINGLE;
C	5-SRB SEPARATION AUTO C CMD
C	6-SRB SEPN MANUAL/AUTO ENABLE C CMD
C	7-SRB SEPARATION INITIATE C CMD
	DECLARE FF3_IOM6_CH1_DATA INTEGER SINGLE;
C	4-AFT DAP SELECT A - A
C	5-AFT DAP SELECT B - A
C	6-FWD DAP SELECT A - C
C	7-FWD DAP SELECT B - C
C	8-AFT DAP AUTO A
C	9-AFT DAP MAN A
C	10-FWD DAP AUTO C
C	11-FWD DAP MAN C
	DECLARE FF3_IOM9_CH0_DATA INTEGER SINGLE;
C	0-MPS ME-2 SHUTDOWN CMD B
C	1-SENSE SW -Z CON C
C	2-SENSE SW -X CON C
C	3-ENTRY ROLL MODE L GAIN - C
C	4-AFT ROTATION ROLL DISC RATE A
C	5-AFT ROTATION ROLL ACCEL A
C	6-AFT ROTATION ROLL PULSE A
C	7-AFT ROTATION PITCH DISC RATE A
C	8-AFT ROTATION PITCH ACCEL A
C	9-AFT ROTATION PITCH PULSE A
C	10-AFT ROTATION YAW DISC RATE A
C	11-AFT ROTATION YAW ACCEL A
C	12-AFT ROTATION YAW PULSE A
C	13-AFT RCS JETS NORM A
C	14-AFT RCS JETS VERNIER A
C	15-AFT TRANSLATION X NORM A
	DECLARE FF3_IOM9_CH1_DATA INTEGER SINGLE;
C	0-AFT TRANSLATION X PULSE A
C	1-AFT TRANSLATION X LVLH A
C	2-AFT TRANSLATION Y NORM A
C	3-AFT TRANSLATION Y PULSE A
C	4-AFT TRANSLATION Y LOW Z A
C	5-AFT TRANSLATION Z NORM A
C	6-AFT TRANSLATION Z PULSE A
C	7-AFT TRANSLATION Z HIGH A
C	8-MPS BACKUP LH2 PRPLT DUMP START A
C	9-MPS BACKUP LH2 PRPLT DUMP STOP A
	DECLARE FF3_IOM9_CH2_DATA INTEGER SINGLE;
C	1-RH_PLUS_PITCH_TRIM_A
C	2-RH_MINUS_PITCH_TRIM_A
C	3-RH_PLUS_ROLL_TRIM_A
C	4-RH_MINUS_ROLL_TRIM_A
C	5-RH_PLUS_YAW_TRIM_A
C	6-RH_MINUS_YAW_TRIM_A
	DECLARE FF3_IOM12_CH0_DATA INTEGER SINGLE;
C	2-ENTRY ROLL MODE NO Y JET C
C	8-RH_RHC_TRIM_INHIBIT_A
C	10-FCS RH PITCH AUTO MODE B
C	11-FCS RH PITCH CSS MODE B
C	13-FCS RH R-Y AUTO MODE B
C	14-FCS RH R-Y CSS MODE B
C	15-RH BODY FLAP AUTO/MANUAL B
	DECLARE FF3_IOM12_CH1_DATA INTEGER SINGLE;
C	0-RH SPD BK/THROT AUTO/MAN B
C	8-R PB VENT 6 PURGE 2 IND 1
C	14-FWD RCS OPTIONS NORM C
C	15-FWD RCS OPTIONS VERNIER C
	DECLARE FF3_IOM12_CH2_DATA INTEGER SINGLE;
C	7-AFT THC POS X OUTPUT - C
C	8-AFT THC NEG X OUTPUT - C
C	9-AFT THC POS Y OUTPUT - C
C	10-AFT THC NEG Y OUTPUT - C
C	11-AFT THC POS Z OUTPUT - C
C	12-AFT THC NEG Z OUTPUT - C
C	13-RH SBTC TAKEOVER - B
	DECLARE FF3_IOM15_CH0_DATA INTEGER SINGLE;
C	1-RH_RHC_PLUS_PITCH_TRIM_A
C	2-RH_RHC_MINUS_PITCH_TRIM_A
C	3-RH_RHC_PLUS_ROLL_TRIM_A
C	4-RH_RHC_MINUS_ROLL_TRIM_A
C	5-ET SEPARATION MANUAL ENABLE C CMD
C	6-ET SEPARATION INITIATE C CMD
C	7-ET SEPARATION AUTO C CMD
	DECLARE FF3_IOM15_CH1_DATA INTEGER SINGLE;
C
C	MDM FF4 input
C	3-RH_BODY_FLAP_UP_B
C	4-RH_BODY_FLAP_DOWN_B
C	5-MPS ME-3 SHUTDOWN CMD B
	DECLARE FF4_IOM4_CH0_DATA INTEGER SINGLE;
C	1-MPS ENG LIMIT CONTROL NO. 3 ENABLE
C	2-MPS ENG LIMIT CONTROL NO. 3 INHIBIT
C	3-MPS ENG LIMIT CONTROL NO. 3 AUTO
C	4-R PB VENT 3 CLOSED 2
C	5-R PB VENT 3 OPEN 2
C	6-R FWD VENTS 1 & 2 CLOSED 2
C	7-R FWD VENTS 1 & 2 OPEN 2
C	8-R FWD VENTS 1 & 2 PURGE IND 2
C	9-L PB VENT 6 CLOSED 2
C	10-L PB VENT 6 OPEN 2
C	11-L PB VENT 6 PURGE 1 IND 2
C	12-R PB/W VENTS 4 & 7 CLOSED 1
C	13-R PB/W VENTS 4 & 7 OPEN 1
C	14-L PB VENT 5 CLOSED 2
C	15-L PB VENT 5 OPEN 2
	DECLARE FF4_IOM4_CH2_DATA INTEGER SINGLE;
C	5-SRB SEPARATION AUTO B CMD
C	6-SRB SEPN MANUAL/AUTO ENABLE B CMD
C	7-SRB SEPARATION INITIATE B CMD
	DECLARE FF4_IOM6_CH1_DATA INTEGER SINGLE;
C	4-AFT DAP SELECT A - B
C	5-AFT DAP SELECT B - B
C	8-AFT DAP AUTO B
C	9-AFT DAP MAN B
	DECLARE FF4_IOM9_CH0_DATA INTEGER SINGLE;
C	3-ENTRY ROLL MODE L GAIN - D
C	4-AFT ROTATION ROLL DISC RATE B
C	5-AFT ROTATION ROLL ACCEL B
C	6-AFT ROTATION ROLL PULSE B
C	7-AFT ROTATION PITCH DISC RATE B
C	8-AFT ROTATION PITCH ACCEL B
C	9-AFT ROTATION PITCH PULSE B
C	10-AFT ROTATION YAW DISC RATE B
C	11-AFT ROTATION YAW ACCEL B
C	12-AFT ROTATION YAW PULSE B
C	13-AFT RCS JETS NORM B
C	14-AFT RCS JETS VERNIER B
C	15-AFT TRANSLATION X NORM B
	DECLARE FF4_IOM9_CH1_DATA INTEGER SINGLE;
C	0-AFT TRANSLATION X PULSE B
C	1-AFT TRANSLATION X LVLH B
C	2-AFT TRANSLATION Y NORM B
C	3-AFT TRANSLATION Y PULSE B
C	4-AFT TRANSLATION Y LOW Z B
C	5-AFT TRANSLATION Z NORM B
C	6-AFT TRANSLATION Z PULSE B
C	7-AFT TRANSLATION Z HIGH B
C	8-MPS BACKUP LH2 PRPLT DUMP START B
C	9-MPS BACKUP LH2 PRPLT DUMP STOP B
	DECLARE FF4_IOM9_CH2_DATA INTEGER SINGLE;
C	1-RH_PLUS_PITCH_TRIM_B
C	2-RH_MINUS_PITCH_TRIM_B
C	3-RH_PLUS_ROLL_TRIM_B
C	4-RH_MINUS_ROLL_TRIM_B
C	5-RH_PLUS_YAW_TRIM_B
C	6-RH_MINUS_YAW_TRIM_B
	DECLARE FF4_IOM12_CH0_DATA INTEGER SINGLE;
C	8-RH_RHC_TRIM_INHIBIT_B
C	10-FCS RH PITCH AUTO MODE C
C	11-FCS RH PITCH CSS MODE C
C	13-FCS RH R-Y AUTO MODE C
C	14-FCS RH R-Y CSS MODE C
C	15-RH BODY FLAP AUTO/MANUAL C
	DECLARE FF4_IOM12_CH1_DATA INTEGER SINGLE;
C	0-RH SPD BK/THROT AUTO/MAN C
C	8-L PB VENT 6 PURGE 2 IND 2
C	15-ENTRY ROLL MODE NO Y JET D
	DECLARE FF4_IOM12_CH2_DATA INTEGER SINGLE;
C	13-RH SBTC TAKEOVER - C
	DECLARE FF4_IOM15_CH0_DATA INTEGER SINGLE;
C	1-RH_RHC_PLUS_PITCH_TRIM_B
C	2-RH_RHC_MINUS_PITCH_TRIM_B
C	3-RH_RHC_PLUS_ROLL_TRIM_B
C	4-RH_RHC_MINUS_ROLL_TRIM_B
C	5-ET SEPARATION MANUAL ENABLE B CMD
C	6-ET SEPARATION INITIATE B CMD
C	7-ET SEPARATION AUTO B CMD
	DECLARE FF4_IOM15_CH1_DATA INTEGER SINGLE;
C
C	MDM FA1 input
C	13-L AFT VENTS 8 & 9 CLOSED 1
C	14-L AFT VENTS 8 & 9 OPEN 1
C	15-L AFT VENTS 8 & 9 PURGE IND 1
	DECLARE FA1_IOM11_CH0_DATA INTEGER SINGLE;
C
C	MDM FA2 input
C	13-R AFT VENTS 8 & 9 CLOSED 2
C	14-R AFT VENTS 8 & 9 OPEN 2
C	15-R AFT VENTS 8 & 9 PURGE IND 2
	DECLARE FA2_IOM11_CH0_DATA INTEGER SINGLE;
C
C	MDM FA3 input
C	13-R AFT VENTS 8 & 9 CLOSED 1
C	14-R AFT VENTS 8 & 9 OPEN 1
C	15-R AFT VENTS 8 & 9 PURGE IND 1
	DECLARE FA3_IOM11_CH0_DATA INTEGER SINGLE;
C
C	MDM FA4 input
C	13-L AFT VENTS 8 & 9 CLOSED 2
C	14-L AFT VENTS 8 & 9 OPEN 2
C	15-L AFT VENTS 8 & 9 PURGE IND 2
	DECLARE FA4_IOM11_CH0_DATA INTEGER SINGLE;
C
C	MDM FF1 output
C	0-RH VENTS 1/2 MOTOR 1/CLOSE B (CL/1B)
C	1-RH VENTS 1/2 MOTOR 1/OPEN B (OP/1B)
C	2-RH VENTS 1/2 MOTOR 1/PURGE B (PG/1B)
C	11-RH VENTS 4/7 MOTOR 2/CLOSE B (CL/2B)
	DECLARE FF1_IOM2_CH0_DATA INTEGER SINGLE;
C	0-F7 LIGHT: C MPS AMBER STATUS
C	7-F6 LIGHT A: RCS CMD "ROLL LEFT"
C	8-F6 LIGHT A: RCS CMD "ROLL RIGHT"
C	9-F6 LIGHT A: RCS CMD "YAW LEFT"
C	10-F6 LIGHT A: RCS CMD "YAW RIGHT"
C	11-F6 LIGHT A: RCS CMD "PITCH UP"
C	12-F6 LIGHT A: RCS CMD "PITCH DOWN"
C	13-C3 LIGHT: FWD DAP CONTROL "AUTO"
C	14-C3 LIGHT: FWD DAP SELECT "A"
C	15-C3 LIGHT: FWD DAP RCS JETS "NORM"
	DECLARE FF1_IOM2_CH1_DATA INTEGER SINGLE;
C	3-C3 LIGHT: FWD DAP CONTROL "MAN"
C	4-C3 LIGHT: FWD DAP SELECT "B"
C	5-C3 LIGHT: FWD DAP RCS JETS "VERN"
C	7-RH VENTS 4/7 MOTOR 2/OPEN B (OP/2B)
C	8-RH VENT 3 MOTOR 1/CLOSE B (CL/1B)
C	9-RH VENT 3 MOTOR 1/OPEN B (OP/1B)
C	10-LH VENT 6 MOTOR 1/CLOSE B (CL/1B)
C	11-LH VENT 6 MOTOR 1/OPEN B (OP/1B)
C	12-LH VENT 6 MOTOR 1/PRG-1 B (P1/1B)
C	13-LH VENT 6 MOTOR 1/PRG-2 B (P2/1B)
C	14-RH VENT 5 MOTOR 1/CLOSE B (CL/1B)
C	15-RH VENT 5 MOTOR 1/OPEN B (OP/1B)
	DECLARE FF1_IOM2_CH2_DATA INTEGER SINGLE;
C	0-FWD EVENT TIMER: ABORT TIMER_RESET
C	11-C&W MATRIX "LEFT RCS" (LEAK DETECT)
	DECLARE FF1_IOM5_CH1_DATA INTEGER SINGLE;
C	0-RH VENTS 1/2 MOTOR 1/CLOSE A (CL/1A)
C	1-RH VENTS 1/2 MOTOR 1/OPEN A (OP/1A)
C	2-RH VENTS 1/2 MOTOR 1/PURGE A (PG/1A)
C	4-F2 LIGHT: LH FCS BODY FLAP "AUTO"
C	5-F2 LIGHT: LH FCS SPEED BK "AUTO"
C	6-F2 LIGHT: LH FCS PITCH "AUTO"
C	7-F2 LIGHT: LH FCS ROLL/YAW "AUTO"
	DECLARE FF1_IOM10_CH0_DATA INTEGER SINGLE;
C	0-F7 LIGHT: C MPS RED STATUS
C	1-C3 LIGHT: FWD MAN ROT ROLL "DISC RT"
C	2-C3 LIGHT: FWD MAN ROT ROLL "ACCEL"
C	3-C3 LIGHT: FWD MAN ROT ROLL "PULSE"
C	4-C3 LIGHT: FWD MAN ROT PITCH "DISC RT"
C	5-C3 LIGHT: FWD MAN ROT PITCH "ACCEL"
C	6-C3 LIGHT: FWD MAN ROT PITCH "PULSE"
C	7-C3 LIGHT: FWD MAN ROT YAW "DISC RT"
C	8-C3 LIGHT: FWD MAN ROT YAW "ACCEL"
C	9-C3 LIGHT: FWD MAN ROT YAW "PULSE"
C	10-C3 LIGHT: FWD MAN TRANS X "NORM"
C	11-C3 LIGHT: FWD MAN TRANS X "PULSE"
C	12-C3 LIGHT: FWD MAN TRANS X "LVLH"
C	13-C3 LIGHT: FWD MAN TRANS Y "NORM"
C	14-C3 LIGHT: FWD MAN TRANS Y "PULSE"
C	15-C3 LIGHT: FWD MAN TRANS Y "LOW Z"
	DECLARE FF1_IOM10_CH1_DATA INTEGER SINGLE;
C	0-C3 LIGHT: FWD MAN TRANS Z "NORM"
C	1-C3 LIGHT: FWD MAN TRANS Z "PULSE"
C	2-C3 LIGHT: FWD MAN TRANS Z "HIGH"
C	3-C&W MATRIX "BACKUP C/W ALARM"
C	4-SM ALERT: TONE A CMD 1
C	5-SM ALERT: LIGHT A CMD 1
C	6-RH VENTS 4/7 MOTOR 2/CLOSE A (CL/2A)
C	7-RH VENTS 4/7 MOTOR 2/OPEN A (OP/2A)
C	8-RH VENT 3 MOTOR 1/CLOSE A (CL/1A)
C	9-RH VENT 3 MOTOR 1/OPEN A (OP/1A)
C	10-LH VENT 6 MOTOR 1/CLOSE A (CL/1A)
C	11-LH VENT 6 MOTOR 1/OPEN A (OP/1A)
C	12-LH VENT 6 MOTOR 1/PRG-1 A (P1/1A)
C	13-LH VENT 6 MOTOR 1/PRG-2 A (P2/1A)
C	14-RH VENT 5 MOTOR 1/CLOSE A (CL/1A)
C	15-RH VENT 5 MOTOR 1/OPEN A (OP/1A)
	DECLARE FF1_IOM10_CH2_DATA INTEGER SINGLE;
C
C	MDM FF2 output
C	0-LH VENTS 1/2 MOTOR 2/CLOSE B (CL/2B)
C	1-LH VENTS 1/2 MOTOR 2/OPEN B (OP/2B)
C	2-LH VENTS 1/2 MOTOR 2/PURGE B (PG/2B)
	DECLARE FF2_IOM2_CH0_DATA INTEGER SINGLE;
C	0-F7 LIGHT: L MPS AMBER STATUS
C	6-RH VENT 5 MOTOR 2/CLOSE B (CL/2B)
	DECLARE FF2_IOM2_CH1_DATA INTEGER SINGLE;
C	6-LH VENT 3 MOTOR 2/CLOSE B (CL/2B)
C	7-LH VENT 3 MOTOR 2/OPEN B (OP/2B)
C	8-LH VENTS 4/7 MOTOR 2/CLOSE B (CL/2B)
C	9-LH VENTS 4/7 MOTOR 2/OPEN B (OP/2B)
C	10-RH VENT 6 MOTOR 2/CLOSE B (CL/2B)
C	11-RH VENT 6 MOTOR 2/OPEN B (OP/2B)
C	12-RH VENT 6 MOTOR 2/PRG-1 B (P1/2B)
C	13-RH VENT 6 MOTOR 2/PRG-2 B (P2/2B)
C	15-RH VENT 5 MOTOR 2/OPEN B (OP/2B)
	DECLARE FF2_IOM2_CH2_DATA INTEGER SINGLE;
C	0-LH VENTS 1/2 MOTOR 2/CLOSE A (CL/2A)
C	1-LH VENTS 1/2 MOTOR 2/OPEN A (OP/2A)
C	2-LH VENTS 1/2 MOTOR 2/PURGE A (PG/2A)
C	4-F2 LIGHT: LH FCS BODY FLAP "MAN"
C	5-F2 LIGHT: LH FCS SPEED BK "MAN"
C	6-F2 LIGHT: LH FCS PITCH "CSS"
C	7-F2 LIGHT: LH FCS ROLL/YAW "CSS"
	DECLARE FF2_IOM10_CH0_DATA INTEGER SINGLE;
C	0-F7 LIGHT: L MPS RED STATUS
	DECLARE FF2_IOM10_CH1_DATA INTEGER SINGLE;
C	3-C&W MATRIX "BACKUP C/W ALARM"
C	4-SM ALERT: TONE A CMD 2
C	5-SM ALERT: LIGHT A CMD 2
C	6-LH VENT 3 MOTOR 2/CLOSE A (CL/2A)
C	7-LH VENT 3 MOTOR 2/OPEN A (OP/2A)
C	8-LH VENTS 4/7 MOTOR 2/CLOSE A (CL/2A)
C	9-LH VENTS 4/7 MOTOR 2/OPEN A (OP/2A)
C	10-RH VENT 6 MOTOR 2/CLOSE A (CL/2A)
C	11-RH VENT 6 MOTOR 2/OPEN A (OP/2A)
C	12-RH VENT 6 MOTOR 2/PRG-1 A (P1/2A)
C	13-RH VENT 6 MOTOR 2/PRG-2 A (P2/2A)
C	14-RH VENT 5 MOTOR 2/CLOSE A (CL/2A)
C	15-RH VENT 5 MOTOR 2/OPEN A (OP/2A)
	DECLARE FF2_IOM10_CH2_DATA INTEGER SINGLE;
C
C	MDM FF3 output
C	0-LH VENT 3 MOTOR 1/OPEN B (OP/1B)
C	1-LH VENTS 1/2 MOTOR 1/OPEN B (OP/1B)
C	2-LH VENTS 1/2 MOTOR 1/PURGE B (PG/1B)
	DECLARE FF3_IOM2_CH0_DATA INTEGER SINGLE;
C	0-F7 LIGHT: R MPS AMBER STATUS
C	6-LH VENTS 4/7 MOTOR 1/CLOSE B (CL/1B)
C	7-F6 LIGHT B: RCS CMD "ROLL LEFT"
C	8-F6 LIGHT B: RCS CMD "ROLL RIGHT"
C	9-F6 LIGHT B: RCS CMD "YAW LEFT"
C	10-F6 LIGHT B: RCS CMD "YAW RIGHT"
C	11-F6 LIGHT B: RCS CMD "PITCH UP"
C	12-F6 LIGHT B: RCS CMD "PITCH DOWN"
C	13-A6 LIGHT: AFT DAP CONTROL "AUTO"
C	14-A6 LIGHT: AFT DAP SELECT "A"
C	15-A6 LIGHT: AFT DAP RCS JETS "NORM"
	DECLARE FF3_IOM2_CH1_DATA INTEGER SINGLE;
C	3-A6 LIGHT: AFT DAP CONTROL "MAN"
C	4-A6 LIGHT: AFT DAP SELECT "B"
C	5-A6 LIGHT: AFT DAP RCS JETS "VERN"
C	6-LH VENT 3 MOTOR 1/CLOSE B (CL/1B)
C	7-LH VENTS 1/2 MOTOR 1/CLOSE B (CL/1B)
C	9-LH VENTS 4/7 MOTOR 1/OPEN B (OP/1B)
C	10-RH VENT 6 MOTOR 1/CLOSE B (CL/1B)
C	11-RH VENT 6 MOTOR 1/OPEN B (OP/1B)
C	12-RH VENT 6 MOTOR 1/PRG-1 B (P1/1B)
C	13-RH VENT 6 MOTOR 1/PRG-2 B (P2/1B)
C	14-LH VENT 5 MOTOR 1/CLOSE B (CL/1B)
C	15-LH VENT 5 MOTOR 1/OPEN B (OP/1B)
	DECLARE FF3_IOM2_CH2_DATA INTEGER SINGLE;
C	0-C&W MATRIX "RCS JET"
C	1-C&W MATRIX "OMS TVC"
C	2-C&W MATRIX "LEFT OMS"
C	3-C&W MATRIX "RIGHT OMS"
C	4-C&W MATRIX "FCS CHANNEL"
C	5-C&W MATRIX "FCS SATURATION"
C	6-C&W MATRIX "IMU"
C	7-C&W MATRIX "RIGHT/AFT RHC"
C	8-C&W MATRIX "LEFT RHC"
C	9-C&W MATRIX "AIR DATA"
C	10-C&W MATRIX "RGA/ACCEL"
C	11-C&W MATRIX "RIGHT RCS" (LEAK DETECT)
C	12-C&W MATRIX "FWD RCS" (LEAK DETECT)
	DECLARE FF3_IOM5_CH1_DATA INTEGER SINGLE;
C	0-LH VENTS 1/2 MOTOR 1/CLOSE A (CL/1A)
C	1-LH VENTS 1/2 MOTOR 1/OPEN A (OP/1A)
C	2-LH VENT 3 MOTOR 1/OPEN A (OP/1A)
C	4-F4 LIGHT: RH FCS BODY FLAP "AUTO"
C	5-F4 LIGHT: RH FCS SPEED BK "AUTO"
C	6-F4 LIGHT: RH FCS PITCH "AUTO"
C	7-F4 LIGHT: RH FCS ROLL/YAW "AUTO"
	DECLARE FF3_IOM10_CH0_DATA INTEGER SINGLE;
C	0-F7 LIGHT: R MPS RED STATUS
C	1-A6 LIGHT: AFT MAN ROT ROLL "DISC RT"
C	2-A6 LIGHT: AFT MAN ROT ROLL "ACCEL"
C	3-A6 LIGHT: AFT MAN ROT ROLL "PULSE"
C	4-A6 LIGHT: AFT MAN ROT PITCH "DISC RT"
C	5-A6 LIGHT: AFT MAN ROT PITCH "ACCEL"
C	6-A6 LIGHT: AFT MAN ROT PITCH "PULSE"
C	7-A6 LIGHT: AFT MAN ROT YAW "DISC RT"
C	8-A6 LIGHT: AFT MAN ROT YAW "ACCEL"
C	9-A6 LIGHT: AFT MAN ROT YAW "PULSE"
C	10-A6 LIGHT: AFT MAN TRANS X "NORM"
C	11-A6 LIGHT: AFT MAN TRANS X "PULSE"
C	12-A6 LIGHT: AFT MAN TRANS X "LVLH"
C	13-A6 LIGHT: AFT MAN TRANS Y "NORM"
C	14-A6 LIGHT: AFT MAN TRANS Y "PULSE"
C	15-A6 LIGHT: AFT MAN TRANS Y "LOW Z"
	DECLARE FF3_IOM10_CH1_DATA INTEGER SINGLE;
C	0-A6 LIGHT: AFT MAN TRANS Z "NORM"
C	1-A6 LIGHT: AFT MAN TRANS Z "PULSE"
C	2-A6 LIGHT: AFT MAN TRANS Z "HIGH"
C	3-C&W MATRIX "BACKUP C/W ALARM"
C	4-SM ALERT: TONE A CMD 3
C	5-SM ALERT: LIGHT A CMD 3
C	6-LH VENT 3 MOTOR 1/CLOSE A (CL/1A)
C	7-LH VENTS 1/2 MOTOR 1/PURGE A (PG/1A)
C	8-LH VENTS 4/7 MOTOR 1/CLOSE A (CL/1A)
C	9-LH VENTS 4/7 MOTOR 1/OPEN A (OP/1A)
C	10-RH VENT 6 MOTOR 1/CLOSE A (CL/1A)
C	11-RH VENT 6 MOTOR 1/OPEN A (OP/1A)
C	12-RH VENT 6 MOTOR 1/PRG-1 A (P1/1A)
C	13-RH VENT 6 MOTOR 1/PRG-2 A (P2/1A)
C	14-LH VENT 5 MOTOR 1/CLOSE A (CL/1A)
C	15-LH VENT 5 MOTOR 1/OPEN A (OP/1A)
	DECLARE FF3_IOM10_CH2_DATA INTEGER SINGLE;
C
C	MDM FF4 output
C	0-RH VENT 3 MOTOR 2/OPEN B (OP/2B)
C	1-RH VENTS 1/2 MOTOR 2/OPEN B (OP/2B)
C	2-RH VENTS 1/2 MOTOR 2/PURGE B (PG/2B)
	DECLARE FF4_IOM2_CH0_DATA INTEGER SINGLE;
C	6-LH VENT 5 MOTOR 2/CLOSE B (CL/2B)
	DECLARE FF4_IOM2_CH1_DATA INTEGER SINGLE;
C	6-RH VENT 3 MOTOR 2/CLOSE B (CL/2B)
C	7-RH VENTS 1/2 MOTOR 2/CLOSE B (CL/2B)
C	8-RH VENTS 4/7 MOTOR 1/CLOSE B (CL/1B)
C	9-RH VENTS 4/7 MOTOR 1/OPEN B (OP/1B)
C	10-LH VENT 6 MOTOR 2/CLOSE B (CL/2B)
C	11-LH VENT 6 MOTOR 2/OPEN B (OP/2B)
C	12-LH VENT 6 MOTOR 2/PRG-1 B (P1/2B)
C	13-LH VENT 6 MOTOR 2/PRG-2 B (P2/2B)
C	15-LH VENT 5 MOTOR 2/OPEN B (OP/2B)
	DECLARE FF4_IOM2_CH2_DATA INTEGER SINGLE;
C	0-FWD EVENT TIMER: LIFT OFF TIMER_RESET
	DECLARE FF4_IOM5_CH1_DATA INTEGER SINGLE;
C	0-RH VENTS 1/2 MOTOR 2/CLOSE A (CL/2A)
C	1-RH VENTS 1/2 MOTOR 2/OPEN A (OP/2A)
C	2-RH VENT 3 MOTOR 2/OPEN A (OP/2A)
C	4-F4 LIGHT: RH FCS BODY FLAP "MAN"
C	5-F4 LIGHT: RH FCS SPEED BK "MAN"
C	6-F4 LIGHT: RH FCS PITCH "CSS"
C	7-F4 LIGHT: RH FCS ROLL/YAW "CSS"
	DECLARE FF4_IOM10_CH0_DATA INTEGER SINGLE;
C	3-C&W MATRIX "BACKUP C/W ALARM"
C	4-SM ALERT: TONE A CMD 4
C	5-SM ALERT: LIGHT A CMD 4
C	6-RH VENT 3 MOTOR 2/CLOSE A (CL/2A)
C	7-RH VENTS 1/2 MOTOR 2/PURGE A (PG/2A)
C	8-RH VENTS 4/7 MOTOR 1/CLOSE A (CL/1A)
C	9-RH VENTS 4/7 MOTOR 1/OPEN A (OP/1A)
C	10-LH VENT 6 MOTOR 2/CLOSE A (CL/2A)
C	11-LH VENT 6 MOTOR 2/OPEN A (OP/2A)
C	12-LH VENT 6 MOTOR 2/PRG-1 A (P1/2A)
C	13-LH VENT 6 MOTOR 2/PRG-2 A (P2/2A)
C	14-LH VENT 5 MOTOR 2/CLOSE A (CL/2A)
C	15-LH VENT 5 MOTOR 2/OPEN A (OP/2A)
	DECLARE FF4_IOM10_CH2_DATA INTEGER SINGLE;
C
C	MDM FA1 output
C	4-LH VENTS 8/9 MOTOR 1/CLOSE A (CL/1A)
C	5-LH VENTS 8/9 MOTOR 1/OPEN A (OP/1A)
C	6-LH VENTS 8/9 MOTOR 1/PURGE A (PG/1A)
	DECLARE FA1_IOM7_CH0_DATA INTEGER SINGLE;
C	3-LH VENTS 8/9 MOTOR 1/CLOSE B (CL/1B)
C	4-LH VENTS 8/9 MOTOR 1/OPEN B (OP/1B)
C	5-LH VENTS 8/9 MOTOR 1/PURGE B (PG/1B)
	DECLARE FA1_IOM15_CH0_DATA INTEGER SINGLE;
C
C	MDM FA2 output
C	4-RH VENTS 8/9 MOTOR 2/CLOSE A (CL/2A)
C	5-RH VENTS 8/9 MOTOR 2/OPEN A (OP/2A)
C	6-RH VENTS 8/9 MOTOR 2/PURGE A (PG/2A)
	DECLARE FA2_IOM7_CH0_DATA INTEGER SINGLE;
C	3-RH VENTS 8/9 MOTOR 2/CLOSE B (CL/2B)
C	4-RH VENTS 8/9 MOTOR 2/OPEN B (OP/2B)
C	5-RH VENTS 8/9 MOTOR 2/PURGE B (PG/2B)
	DECLARE FA2_IOM15_CH0_DATA INTEGER SINGLE;
C
C	MDM FA3 output
C	4-RH VENTS 8/9 MOTOR 1/CLOSE A (CL/1A)
C	5-RH VENTS 8/9 MOTOR 1/OPEN A (OP/1A)
C	6-RH VENTS 8/9 MOTOR 1/PURGE A (PG/1A)
	DECLARE FA3_IOM7_CH0_DATA INTEGER SINGLE;
C	3-RH VENTS 8/9 MOTOR 1/CLOSE B (CL/1B)
C	4-RH VENTS 8/9 MOTOR 1/OPEN B (OP/1B)
C	5-RH VENTS 8/9 MOTOR 1/PURGE B (PG/1B)
	DECLARE FA3_IOM15_CH0_DATA INTEGER SINGLE;
C
C	MDM FA4 output
C	4-LH VENTS 8/9 MOTOR 2/CLOSE A (CL/2A)
C	5-LH VENTS 8/9 MOTOR 2/OPEN A (OP/2A)
C	6-LH VENTS 8/9 MOTOR 2/PURGE A (PG/2A)
	DECLARE FA4_IOM7_CH0_DATA INTEGER SINGLE;
C	3-LH VENTS 8/9 MOTOR 2/CLOSE B (CL/2B)
C	4-LH VENTS 8/9 MOTOR 2/OPEN B (OP/2B)
C	5-LH VENTS 8/9 MOTOR 2/PURGE B (PG/2B)
	DECLARE FA4_IOM15_CH0_DATA INTEGER SINGLE;
C
C	MDM PF1 output
C	12-C&W MATRIX "BACKUP C/W ALARM"
C	13-SM ALERT: TONE B CMD 1
C	14-SM ALERT: LIGHT B CMD 1
	DECLARE PF1_IOM2_CH0_DATA INTEGER SINGLE;
C
C	MDM PF2 output
C	12-C&W MATRIX "BACKUP C/W ALARM"
C	13-SM ALERT: TONE B CMD 2
C	14-SM ALERT: LIGHT B CMD 2
	DECLARE PF2_IOM2_CH0_DATA INTEGER SINGLE;
C	2-C&W MATRIX "PAYLOAD WARNING"
	DECLARE PF2_IOM10_CH2_DATA INTEGER SINGLE;
C
C	Radar Altimeter
	DECLARE RA_DATA_CDR_SEL INTEGER SINGLE;
	DECLARE RA_VALIDITY_CDR_SEL INTEGER SINGLE;
	DECLARE RA_DATA_PLT_SEL INTEGER SINGLE;
	DECLARE RA_VALIDITY_PLT_SEL INTEGER SINGLE;
C
C	DAP PBIs light command
C	forward
	DECLARE FWD_DAP_SELECT_A_LT INTEGER SINGLE;
	DECLARE FWD_DAP_SELECT_B_LT INTEGER SINGLE;
	DECLARE FWD_DAP_AUTO_LT INTEGER SINGLE;
	DECLARE FWD_DAP_MAN_INRTL_LT INTEGER SINGLE;
	DECLARE FWD_DAP_MAN_LVLH_LT INTEGER SINGLE;
	DECLARE FWD_DAP_MAN_FREE_DFT_LT INTEGER SINGLE;
	DECLARE FWD_BLANK_LT INTEGER SINGLE;
	DECLARE FWD_TRANSL_X_NORM_LT INTEGER SINGLE;
	DECLARE FWD_TRANSL_X_PULSE_LT INTEGER SINGLE;
	DECLARE FWD_TRANSL_LOW_Z_LT INTEGER SINGLE;
	DECLARE FWD_TRANSL_Y_NORM_LT INTEGER SINGLE;
	DECLARE FWD_TRANSL_Y_PULSE_LT INTEGER SINGLE;
	DECLARE FWD_TRANSL_Z_HIGH_LT INTEGER SINGLE;
	DECLARE FWD_TRANSL_Z_NORM_LT INTEGER SINGLE;
	DECLARE FWD_TRANSL_Z_PULSE_LT INTEGER SINGLE;
	DECLARE FWD_RCS_JETS_NORM_LT INTEGER SINGLE;
	DECLARE FWD_ROT_ROLL_DISC_LT INTEGER SINGLE;
	DECLARE FWD_ROT_ROLL_PULSE_LT INTEGER SINGLE;
	DECLARE FWD_ALT_PRCS_MODE_LT INTEGER SINGLE;
	DECLARE FWD_ROT_PITCH_DISC_LT INTEGER SINGLE;
	DECLARE FWD_ROT_PITCH_PULSE_LT INTEGER SINGLE;
	DECLARE FWD_RCS_JETS_VERN_LT INTEGER SINGLE;
	DECLARE FWD_ROT_YAW_DISC_LT INTEGER SINGLE;
	DECLARE FWD_ROT_YAW_PULSE_LT INTEGER SINGLE;
C	aft
	DECLARE AFT_DAP_SELECT_A_LT INTEGER SINGLE;
	DECLARE AFT_DAP_SELECT_B_LT INTEGER SINGLE;
	DECLARE AFT_DAP_AUTO_LT INTEGER SINGLE;
	DECLARE AFT_DAP_MAN_INRTL_LT INTEGER SINGLE;
	DECLARE AFT_DAP_MAN_LVLH_LT INTEGER SINGLE;
	DECLARE AFT_DAP_MAN_FREE_DFT_LT INTEGER SINGLE;
	DECLARE AFT_BLANK_LT INTEGER SINGLE;
	DECLARE AFT_TRANSL_X_NORM_LT INTEGER SINGLE;
	DECLARE AFT_TRANSL_X_PULSE_LT INTEGER SINGLE;
	DECLARE AFT_TRANSL_LOW_Z_LT INTEGER SINGLE;
	DECLARE AFT_TRANSL_Y_NORM_LT INTEGER SINGLE;
	DECLARE AFT_TRANSL_Y_PULSE_LT INTEGER SINGLE;
	DECLARE AFT_TRANSL_Z_HIGH_LT INTEGER SINGLE;
	DECLARE AFT_TRANSL_Z_NORM_LT INTEGER SINGLE;
	DECLARE AFT_TRANSL_Z_PULSE_LT INTEGER SINGLE;
	DECLARE AFT_RCS_JETS_NORM_LT INTEGER SINGLE;
	DECLARE AFT_ROT_ROLL_DISC_LT INTEGER SINGLE;
	DECLARE AFT_ROT_ROLL_PULSE_LT INTEGER SINGLE;
	DECLARE AFT_ALT_PRCS_MODE_LT INTEGER SINGLE;
	DECLARE AFT_ROT_PITCH_DISC_LT INTEGER SINGLE;
	DECLARE AFT_ROT_PITCH_PULSE_LT INTEGER SINGLE;
	DECLARE AFT_RCS_JETS_VERN_LT INTEGER SINGLE;
	DECLARE AFT_ROT_YAW_DISC_LT INTEGER SINGLE;
	DECLARE AFT_ROT_YAW_PULSE_LT INTEGER SINGLE;
C
C	TAEM parameters
C	maximum shuttle orbiter weight [slugs]
	DECLARE WT_GS1 SCALAR DOUBLE;
C	minimum RPRED to issue OHALRT [ft]
	DECLARE RMOH SCALAR DOUBLE;
C	HAC turn angle [deg]
	DECLARE PSHA SCALAR DOUBLE;
C	HAC radius [ft]
	DECLARE RTURN SCALAR DOUBLE;
C	R/L cone indicator [1]
	DECLARE YSGN SCALAR DOUBLE;
C	PSHA reset value [deg]
	DECLARE PSHARS SCALAR DOUBLE;
C	initial HAC spiral turn radius on final [ft]
	DECLARE RF0 SCALAR DOUBLE;
C	linear term in spiral radius eqn. [ft/deg]
	DECLARE R1 SCALAR DOUBLE;
C	quadratic term in spiral radius eqn. [ft/deg]
	DECLARE R2 SCALAR DOUBLE;
C
C	Autoland parameters
C	pullup circle radius (indexed by IGI,IGS) [ft]
	DECLARE AL_R MATRIX(2,2) DOUBLE;
C	pullup circle center (x) (indexed by IGI,IGS) [ft]
	DECLARE X_K MATRIX(2,2) DOUBLE;
C	pullup circle center (h) (indexed by IGI,IGS) [ft]
	DECLARE H_K MATRIX(2,2) DOUBLE;
C	exponential/circle tangency range (indexed by IGI,IGS) [ft]
	DECLARE X_EXP MATRIX(2,2) DOUBLE;
C	exponential decay (indexed by IGI,IGS) [ft]
	DECLARE H_DECAY MATRIX(2,2) DOUBLE;
C	exponential decay factor [1]
	DECLARE SIGMA SCALAR DOUBLE;
C	steep glideslop angle (indexed by IGS) [deg]
	DECLARE GAMMA_REF_1 VECTOR(2) DOUBLE;
C	shallow glideslop angle [deg]
	DECLARE GAMMA_REF_2 SCALAR DOUBLE;
C	steep glide slope aim point (indexed by IGI) [ft]
	DECLARE X_ZERO VECTOR(2) DOUBLE;
C	shallow glide slope aim point [ft]
	DECLARE X_AIM SCALAR DOUBLE;
C	open-loop pull-up altitude [ft]
	DECLARE H_FLARE SCALAR DOUBLE;
C	closed-loop pull-up altitude [ft]
	DECLARE H_CLOOP SCALAR DOUBLE;
C
C	runway approach mode (1-overhead; 2-strait-in)
	DECLARE OVHD INTEGER SINGLE;
C	glide slope (1-light; 2-heavy)
	DECLARE IGS INTEGER SINGLE;
C	aimpoint (1-nom; 2-close-in)
	DECLARE IGI INTEGER SINGLE;
C	runway ID (1-pri; 2-sec)
	DECLARE RWID INTEGER SINGLE;
C	previous runway ID (1-pri; 2-sec)
	DECLARE RWID0 INTEGER SINGLE;
C	landing site ID [1,45]
	DECLARE LSID INTEGER SINGLE;
C
C	speedbrake logic select (1-nom; 2-short; 3-ELS)
	DECLARE SB_SEL INTEGER SINGLE;
C
C	pri runway name
	DECLARE PRI_ID CHARACTER(5);
C	pri runway heading [deg]
	DECLARE PRI_HDG SCALAR DOUBLE;
C	pri runway pos (greenwich=ECEF) [ft]
	DECLARE PRI_POS VECTOR(3) DOUBLE;
C	pri greenwich(=ECEF)-to-runway matrix [ft]
	DECLARE PRI_G2R MATRIX(3,3) DOUBLE;
C	pri runway length [ft]
	DECLARE PRI_LEN INTEGER SINGLE;
C	sec runway name
	DECLARE SEC_ID CHARACTER(5);
C	sec runway heading [deg]
	DECLARE SEC_HDG SCALAR DOUBLE;
C	sec runway pos (greenwich=ECEF) [ft]
	DECLARE SEC_POS VECTOR(3) DOUBLE;
C	sec greenwich(=ECEF)-to-runway matrix [ft]
	DECLARE SEC_G2R MATRIX(3,3) DOUBLE;
C	sec runway length [ft]
	DECLARE SEC_LEN INTEGER SINGLE;
C
C	Landing SOP
	DECLARE WOWLON INTEGER SINGLE;
	DECLARE FLATTURN INTEGER SINGLE;
	DECLARE ROLLOUT INTEGER SINGLE;
	DECLARE GSENBL INTEGER SINGLE;
	DECLARE HUD_WOWLON INTEGER SINGLE;
	DECLARE HUD_ROLLOUT INTEGER SINGLE;
C
C	Aerojet DAP FCS
C	AerojetDAP FCS pitch control (1-AUTO; 2-CSS)
	DECLARE AEROJET_FCS_PITCH INTEGER SINGLE;
C	AerojetDAP FCS roll control (1-AUTO; 2-CSS)
	DECLARE AEROJET_FCS_ROLL INTEGER SINGLE;
C	AerojetDAP FCS speedbrake control (1-AUTO; 2-CDR; 3-PLT)
	DECLARE AEROJET_FCS_SB INTEGER SINGLE;
C	AerojetDAP body flap control (1-AUTO; 2-CSS)
	DECLARE AEROJET_FCS_BF INTEGER SINGLE;
C	number of RCS roll jets to fire (+right, -left) [1]
	DECLARE UXCMD INTEGER SINGLE;
C	number of RCS pitch jets to fire (+up, -down) [1]
	DECLARE UYCMD INTEGER SINGLE;
C	number of RCS yaw jets to fire (+right, -left) [1]
	DECLARE UZCMD INTEGER SINGLE;
C	aileron trim [deg]
	DECLARE DATRIM SCALAR DOUBLE;
C	rudder trim [deg]
	DECLARE DRTRIM SCALAR DOUBLE;
C	NY trim [g]
	DECLARE DRTI SCALAR DOUBLE;
C	NZ error [g]
	DECLARE NZERR SCALAR DOUBLE;
C	bank error [deg]
	DECLARE BANKERR SCALAR DOUBLE;
C	wraparound DAP mode (0=INH, 1=ENA, 2=ACT)
	DECLARE WRAP INTEGER SINGLE;
C	elevator command [deg]
	DECLARE DECC SCALAR DOUBLE;
C	aileron command [deg]
	DECLARE DAC SCALAR DOUBLE;
C	rudder command [deg]
	DECLARE DRC SCALAR DOUBLE;
C	speedbrake command [deg]
	DECLARE DSBC SCALAR DOUBLE;
C	NWS command [deg]
	DECLARE DNWC SCALAR DOUBLE;
C	Entry Mode switch "Low Gain" selected
	DECLARE SEL_L_GAIN INTEGER SINGLE;
C	Entry Mode switch "No Yaw Jet" selected
	DECLARE SEL_NO_Y_JET INTEGER SINGLE;
C	Entry Mode switch override
	DECLARE ENTRY_SW_OVERRIDE INTEGER SINGLE;
C
C	A/L UPP
C	geodetic altitude of vehicle center of mass above rw [ft]
	DECLARE H SCALAR DOUBLE;
C	negative z component of velocity in topodetic coordinates [fps]
	DECLARE HDOT SCALAR DOUBLE;
C	true airspeed [fps]
	DECLARE V_T SCALAR DOUBLE;
C	equivalent? airspeed [fps]
	DECLARE V_I SCALAR DOUBLE;
C	equivalent airspeed [knots]
	DECLARE KEAS SCALAR DOUBLE;
C	topodetic horizontal component of earth relative velocity [fps]
	DECLARE VG SCALAR DOUBLE;
C	vehicle position in runway coordinates [ft]
	DECLARE X SCALAR DOUBLE;
	DECLARE Y SCALAR DOUBLE;
	DECLARE Z SCALAR DOUBLE;
C	vehicle velocity in runway coordinates [fps]
	DECLARE XDOT SCALAR DOUBLE;
	DECLARE YDOT SCALAR DOUBLE;
C	heading [deg]
	DECLARE HDG SCALAR DOUBLE;
C	topodetic earth relative flight-path angle [deg]
	DECLARE GAMMA SCALAR DOUBLE;
C	roll [deg]
	DECLARE PHI SCALAR DOUBLE;
C	cosine of body roll euler angle [1]
	DECLARE COSPHI SCALAR DOUBLE;
C	sine of body roll euler angle [1]
	DECLARE SINPHI SCALAR DOUBLE;
C	tangent of body roll euler angle [1]
	DECLARE TANPHI SCALAR DOUBLE;
C	cosine of angle of attack [1]
	DECLARE COSALF SCALAR DOUBLE;
C	sine of angle of attack [1]
	DECLARE SINALF SCALAR DOUBLE;
C	pitch [deg]
	DECLARE THETA SCALAR DOUBLE;
C	cosine of theta [1]
	DECLARE COSTH SCALAR DOUBLE;
C	sine of theta [1]
	DECLARE SINTH SCALAR DOUBLE;
C	angle-of-attack [deg]
	DECLARE ALPHA SCALAR DOUBLE;
C	sideslip [deg]
	DECLARE BETA SCALAR DOUBLE;
C	dynamic pressure [psf]
	DECLARE QBAR SCALAR DOUBLE;
C	lateral acceleration [g]
	DECLARE NY SCALAR DOUBLE;
C	normal acceleration [g]
	DECLARE NZ SCALAR DOUBLE;
C	orbiter mass [slugs]
	DECLARE WEIGHT SCALAR DOUBLE;
C	body roll rate [deg/s]
	DECLARE P SCALAR DOUBLE;
C	body pitch rate [deg/s]
	DECLARE Q SCALAR DOUBLE;
C	body yaw rate [deg/s]
	DECLARE R SCALAR DOUBLE;
C
C	TAEM UPP
C	mach number [1]
	DECLARE MACH SCALAR DOUBLE;
C	course with respect to centerline [deg]
	DECLARE PSD SCALAR DOUBLE;
C
C	Entry UPP
C	vehicle position in ECEF [ft]
	DECLARE ECEF_POS VECTOR(3) DOUBLE;
C	vehicle velocity in ECEF [fps]
	DECLARE ECEF_VEL VECTOR(3) DOUBLE;
C	current relative velocity [fps]
	DECLARE VE SCALAR DOUBLE;
C	current inertial velocity [fps]
	DECLARE VI SCALAR DOUBLE;
C	current drag acceleration [fps^2]
	DECLARE DRAG SCALAR DOUBLE;
C	current lift/drag ratio [1]
	DECLARE LOD SCALAR DOUBLE;
C	current load factor [fps^2]
	DECLARE XLFAC SCALAR DOUBLE;
C
C	EGRT output
C	azimuth error [rad]
	DECLARE DELAZ SCALAR DOUBLE;
C	range to target [NM]
	DECLARE TRANG SCALAR DOUBLE;
C
C	Autoland guidance output
C	autoland phase counter
	DECLARE PMODE INTEGER SINGLE;
C	FSGS phase counter
	DECLARE FMODE INTEGER SINGLE;
C	autoland NZ command [g]
	DECLARE NZ_CMD SCALAR DOUBLE;
C	autoland roll angle command [deg]
	DECLARE PHIC_AL SCALAR DOUBLE;
C	autoland yaw rate command post WOWLON
	DECLARE RC SCALAR DOUBLE;
C	autoland speedbrake command [deg]
	DECLARE DSBC_AL SCALAR DOUBLE;
C	body flap retract command
	DECLARE RETRACT_BF INTEGER SINGLE;
C	altitude error [ft]
	DECLARE HERR SCALAR DOUBLE;
C
C	TAEM guidance output
C	heading error to HAC tangency [deg]
	DECLARE DPSAC SCALAR DOUBLE;
C	predicted range to rw [ft]
	DECLARE RPRED SCALAR DOUBLE;
C	commanded body normal load factor increment from equilibrium [g]
	DECLARE NZC SCALAR DOUBLE;
C	speedbrake angle command (hinge line) [deg]
	DECLARE DSBC_AT SCALAR DOUBLE;
C	roll angle command
	DECLARE PHIC_AT SCALAR DOUBLE;
C	minimum entry point flag
	DECLARE MEP INTEGER SINGLE;
C	TAEM phase counter [1]
	DECLARE IPHASE INTEGER SINGLE;
C	TAEM end flag
	DECLARE TG_END INTEGER SINGLE;
C	current HAC final size [ft]
	DECLARE RF SCALAR DOUBLE;
C	HAC X position [ft]
	DECLARE XHAC SCALAR DOUBLE;
C	distance from OV to HAC center [ft]
	DECLARE RCIR SCALAR DOUBLE;
C	energy per unit weight [ft]
	DECLARE EOW SCALAR DOUBLE;
C	reference energy [ft]
	DECLARE EN SCALAR DOUBLE;
C	E/W to start S-turn [ft]
	DECLARE ES SCALAR DOUBLE;
C	E/W to switch to MEP [ft]
	DECLARE EMEP SCALAR DOUBLE;
C	E/W to downmode to STRN [ft]
	DECLARE EMOH SCALAR DOUBLE;
C	altitude error from reference profile [ft]
	DECLARE HERROR SCALAR DOUBLE;
C	heading to HAC center [deg]
	DECLARE PSC SCALAR DOUBLE;
C	estimated time to HAC [sec]
	DECLARE P2TRNT SCALAR DOUBLE;
C	"OTT ST IN" indication
	DECLARE OTT_ST_IN INTEGER SINGLE;
C	"SW TO MEP" indication
	DECLARE SW_TO_MEP INTEGER SINGLE;
C
C	Entry guidance output
C	angle-of-attack command [deg]
	DECLARE ALPCMD SCALAR DOUBLE;
C	drag reference [fps^2]
	DECLARE DREFP SCALAR DOUBLE;
C	roll angle command about body axis [deg]
	DECLARE ROLLCMD SCALAR DOUBLE;
C	roll ref [deg]
	DECLARE ROLLREF SCALAR DOUBLE;
C	altitude rate reference [fps]
	DECLARE RDTREF SCALAR DOUBLE;
C	derivative of range wrt drag [NM/fps^2]
	DECLARE DRDD SCALAR DOUBLE;
C	Rdot feedback term [fps]
	DECLARE DLRDOT SCALAR DOUBLE;
C	maximum heading error absolute value [rad]
	DECLARE YL SCALAR DOUBLE;
C	scheduled angle of attack [deg]
	DECLARE ACMD1 SCALAR DOUBLE;
C	entry guidance subphase counter
	DECLARE ISLECT INTEGER SINGLE;
C	Entry guidance end flag
	DECLARE EG_END INTEGER SINGLE;
C
C	aerosurface position feedback
C	left outboard elevon pos [deg]
	DECLARE LOB_ELVN_POS_FDBK SCALAR DOUBLE;
C	left inboard elevon pos [deg]
	DECLARE LIB_ELVN_POS_FDBK SCALAR DOUBLE;
C	right inboard elevon pos [deg]
	DECLARE RIB_ELVN_POS_FDBK SCALAR DOUBLE;
C	right outboard elevon pos [deg]
	DECLARE ROB_ELVN_POS_FDBK SCALAR DOUBLE;
C	elevator pos [deg]
	DECLARE DEFB SCALAR DOUBLE;
C	aileron pos [deg]
	DECLARE DAFB SCALAR DOUBLE;
C	body flap pos [deg]
	DECLARE DBFOFB SCALAR DOUBLE;
C	rudder pos [deg]
	DECLARE DRFB SCALAR DOUBLE;
C	Speedbrake pos [deg]
	DECLARE DSBFB_DEG SCALAR DOUBLE;
C	Speedbrake pos [%]
	DECLARE DSBFB_PCT SCALAR DOUBLE;
C	speedbrake increment [deg]
	DECLARE DSBPC SCALAR DOUBLE;
C
C	Aerosurface command
C	left outboard elevon command [deg]
	DECLARE ELOC SCALAR DOUBLE;
C	left inboard elevon command [deg]
	DECLARE ELIC SCALAR DOUBLE;
C	right inboard elevon command [deg]
	DECLARE ERIC SCALAR DOUBLE;
C	right outboard elevon command [deg]
	DECLARE EROC SCALAR DOUBLE;
C	body flap command [deg]
	DECLARE DBFRC SCALAR DOUBLE;
C	rudder command [deg]
	DECLARE RUDDER_CMD SCALAR DOUBLE;
C	speedbrake command [deg]
	DECLARE SPEED_BRAKE_CMD SCALAR DOUBLE;
C
C	Speedbrake AUTO command [deg]
	DECLARE SB_AUTO_CMD SCALAR DOUBLE;
C
C	HUD
C	runway to go [ft]
	DECLARE RWTOGO SCALAR DOUBLE;
C	max deceleration [fps^2]
	DECLARE HUDMAXDECEL SCALAR DOUBLE;
C
C	Trim Switch positions
	DECLARE LH_RHC_TRIM_INHIBIT INTEGER SINGLE;
	DECLARE RH_RHC_TRIM_INHIBIT INTEGER SINGLE;
	DECLARE LH_RHC_PLUS_PITCH_TRIM INTEGER SINGLE;
	DECLARE LH_RHC_MINUS_PITCH_TRIM INTEGER SINGLE;
	DECLARE LH_RHC_PLUS_ROLL_TRIM INTEGER SINGLE;
	DECLARE LH_RHC_MINUS_ROLL_TRIM INTEGER SINGLE;
	DECLARE RH_RHC_PLUS_PITCH_TRIM INTEGER SINGLE;
	DECLARE RH_RHC_MINUS_PITCH_TRIM INTEGER SINGLE;
	DECLARE RH_RHC_PLUS_ROLL_TRIM INTEGER SINGLE;
	DECLARE RH_RHC_MINUS_ROLL_TRIM INTEGER SINGLE;
	DECLARE LH_PLUS_PITCH_TRIM INTEGER SINGLE;
	DECLARE LH_MINUS_PITCH_TRIM INTEGER SINGLE;
	DECLARE LH_PLUS_ROLL_TRIM INTEGER SINGLE;
	DECLARE LH_MINUS_ROLL_TRIM INTEGER SINGLE;
	DECLARE LH_PLUS_YAW_TRIM INTEGER SINGLE;
	DECLARE LH_MINUS_YAW_TRIM INTEGER SINGLE;
	DECLARE RH_PLUS_PITCH_TRIM INTEGER SINGLE;
	DECLARE RH_MINUS_PITCH_TRIM INTEGER SINGLE;
	DECLARE RH_PLUS_ROLL_TRIM INTEGER SINGLE;
	DECLARE RH_MINUS_ROLL_TRIM INTEGER SINGLE;
	DECLARE RH_PLUS_YAW_TRIM INTEGER SINGLE;
	DECLARE RH_MINUS_YAW_TRIM INTEGER SINGLE;
	DECLARE DETM_RHC INTEGER SINGLE;
	DECLARE DATM_RHC INTEGER SINGLE;
	DECLARE DETM_PAN INTEGER SINGLE;
	DECLARE DATM_PAN INTEGER SINGLE;
	DECLARE DRT INTEGER SINGLE;
C
C	Body Flap Switch positions
	DECLARE LH_BODY_FLAP_UP INTEGER SINGLE;
	DECLARE LH_BODY_FLAP_DOWN INTEGER SINGLE;
	DECLARE RH_BODY_FLAP_UP INTEGER SINGLE;
	DECLARE RH_BODY_FLAP_DOWN INTEGER SINGLE;
	DECLARE DBFMAN INTEGER SINGLE;
C
C	MPS switches
	DECLARE MPS_BACKUP_LH2_PRPLT_DUMP_START INTEGER SINGLE;
	DECLARE MPS_BACKUP_LH2_PRPLT_DUMP_STOP INTEGER SINGLE;
	DECLARE MPS_PRPLT_DUMP_SEQUENCE_START INTEGER SINGLE;
	DECLARE MPS_PRPLT_DUMP_SEQUENCE_STOP INTEGER SINGLE;
	DECLARE MPS_ENG_LIMIT_CONTROL_ENABLE INTEGER SINGLE;
	DECLARE MPS_ENG_LIMIT_CONTROL_INHIBIT INTEGER SINGLE;
	DECLARE MPS_ENG_LIMIT_CONTROL_AUTO INTEGER SINGLE;
	DECLARE MPS_ME_1_SHUTDOWN_CMD INTEGER SINGLE;
	DECLARE MPS_ME_2_SHUTDOWN_CMD INTEGER SINGLE;
	DECLARE MPS_ME_3_SHUTDOWN_CMD INTEGER SINGLE;
C
C	Separation switches
	DECLARE SRB_SEPARATION_AUTO_CMD INTEGER SINGLE;
	DECLARE SRB_SEPARATION_MANUAL_AUTO_ENABLE_CMD INTEGER SINGLE;
	DECLARE SRB_SEPARATION_INITIATE_CMD INTEGER SINGLE;
	DECLARE ET_SEPARATION_MANUAL_ENABLE_CMD INTEGER SINGLE;
	DECLARE ET_SEPARATION_INITIATE_CMD INTEGER SINGLE;
	DECLARE ET_SEPARATION_AUTO_CMD INTEGER SINGLE;
C
C	(0-"-Z"; 1-"-X")
	DECLARE SENSE_SWITCH INTEGER SINGLE;
C
C	FCS PBIs
	DECLARE FCS_LH_PITCH_AUTO_MODE INTEGER SINGLE;
	DECLARE FCS_LH_PITCH_CSS_MODE INTEGER SINGLE;
	DECLARE FCS_LH_RY_AUTO_MODE INTEGER SINGLE;
	DECLARE FCS_LH_RY_CSS_MODE INTEGER SINGLE;
	DECLARE LH_BODY_FLAP_AUTO_MANUAL INTEGER SINGLE;
	DECLARE LH_SPD_BK_THROT_AUTO_MAN INTEGER SINGLE;
	DECLARE FCS_RH_PITCH_AUTO_MODE INTEGER SINGLE;
	DECLARE FCS_RH_PITCH_CSS_MODE INTEGER SINGLE;
	DECLARE FCS_RH_RY_AUTO_MODE INTEGER SINGLE;
	DECLARE FCS_RH_RY_CSS_MODE INTEGER SINGLE;
	DECLARE RH_BODY_FLAP_AUTO_MANUAL INTEGER SINGLE;
	DECLARE RH_SPD_BK_THROT_AUTO_MAN INTEGER SINGLE;
C
C	Orbit DAP PBIs
	DECLARE FWD_DAP_SELECT_A INTEGER SINGLE;
	DECLARE FWD_DAP_SELECT_B INTEGER SINGLE;
	DECLARE FWD_DAP_AUTO INTEGER SINGLE;
	DECLARE FWD_DAP_MAN INTEGER SINGLE;
	DECLARE FWD_RCS_OPTIONS_NORM INTEGER SINGLE;
	DECLARE FWD_RCS_OPTIONS_VERNIER INTEGER SINGLE;
	DECLARE FWD_ROTATION_ROLL_DISC_RATE INTEGER SINGLE;
	DECLARE FWD_ROTATION_ROLL_ACCEL INTEGER SINGLE;
	DECLARE FWD_ROTATION_ROLL_PULSE INTEGER SINGLE;
	DECLARE FWD_ROTATION_PITCH_DISC_RATE INTEGER SINGLE;
	DECLARE FWD_ROTATION_PITCH_ACCEL INTEGER SINGLE;
	DECLARE FWD_ROTATION_PITCH_PULSE INTEGER SINGLE;
	DECLARE FWD_ROTATION_YAW_DISC_RATE INTEGER SINGLE;
	DECLARE FWD_ROTATION_YAW_ACCEL INTEGER SINGLE;
	DECLARE FWD_ROTATION_YAW_PULSE INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_X_NORM INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_X_PULSE INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_X_LVLH INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_Y_NORM INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_Y_PULSE INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_Y_LOW_Z INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_Z_NORM INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_Z_PULSE INTEGER SINGLE;
	DECLARE FWD_TRANSLATION_Z_HIGH INTEGER SINGLE;
C
	DECLARE AFT_DAP_SELECT_A INTEGER SINGLE;
	DECLARE AFT_DAP_SELECT_B INTEGER SINGLE;
	DECLARE AFT_DAP_AUTO INTEGER SINGLE;
	DECLARE AFT_DAP_MAN INTEGER SINGLE;
	DECLARE AFT_RCS_OPTIONS_NORM INTEGER SINGLE;
	DECLARE AFT_RCS_OPTIONS_VERNIER INTEGER SINGLE;
	DECLARE AFT_ROTATION_ROLL_DISC_RATE INTEGER SINGLE;
	DECLARE AFT_ROTATION_ROLL_ACCEL INTEGER SINGLE;
	DECLARE AFT_ROTATION_ROLL_PULSE INTEGER SINGLE;
	DECLARE AFT_ROTATION_PITCH_DISC_RATE INTEGER SINGLE;
	DECLARE AFT_ROTATION_PITCH_ACCEL INTEGER SINGLE;
	DECLARE AFT_ROTATION_PITCH_PULSE INTEGER SINGLE;
	DECLARE AFT_ROTATION_YAW_DISC_RATE INTEGER SINGLE;
	DECLARE AFT_ROTATION_YAW_ACCEL INTEGER SINGLE;
	DECLARE AFT_ROTATION_YAW_PULSE INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_X_NORM INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_X_PULSE INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_X_LVLH INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_Y_NORM INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_Y_PULSE INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_Y_LOW_Z INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_Z_NORM INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_Z_PULSE INTEGER SINGLE;
	DECLARE AFT_TRANSLATION_Z_HIGH INTEGER SINGLE;
C
C	Ascent
	DECLARE KMIN INTEGER SINGLE;
	DECLARE KMAX INTEGER SINGLE;
C	(0-KMAX_NOM; 1-KMAX_SECONDARY; 2-KMAX_ABORT)
	DECLARE KMAX_SEL INTEGER SINGLE;
C	MPS dump complete flag
	DECLARE MPS_LO2_DUMP_STOP INTEGER SINGLE;
C
C	Vent Doors
C	Config Vent Doors for Launch cmd
	DECLARE CONF_VENT_DOORS INTEGER SINGLE;
C	Orbiter Vent Doors status word
	DECLARE ORBITER_VENT_DOORS_STATUS_WORD INTEGER DOUBLE;
C	Manual Vent Door close/open command
	DECLARE VENT_DOOR_SEQ_INIT INTEGER SINGLE;
C	Manual Vent Door close cmd
	DECLARE ALL_VENT_CLOSE_CMD INTEGER SINGLE;
C	Vent Door position indication (0-no info, 1-open, 2-closed)
	DECLARE VENT_DOOR_POS_IND INTEGER SINGLE;
C
C	SSME and MPS flags
C	ME-x command path fail flag
	DECLARE ME_CMD_PATH_FAIL ARRAY(3) INTEGER SINGLE;
C	ME-x electronic lockup mode flag
	DECLARE ME_ELEC_LOCKUP ARRAY(3) INTEGER SINGLE;
C	ME-x flight data path fail flag
	DECLARE ME_FLT_DATA_PATH_FAIL ARRAY(3) INTEGER SINGLE;
C	ME-x hydraulic lockup mode flag
	DECLARE ME_HYD_LOCKUP ARRAY(3) INTEGER SINGLE;
C	ME-x engine limit exceeded flag
	DECLARE ME_LIM_EX ARRAY(3) INTEGER SINGLE;
C	MPS E-x eng ready ind
	DECLARE ME_READY ARRAY(3) INTEGER SINGLE;
C	MPS E-x post-shutdown phase
	DECLARE MEPSTSHDN ARRAY(3) INTEGER SINGLE;
C	MPS E-x shutdown phase
	DECLARE MESHDN ARRAY(3) INTEGER SINGLE;
C	MPS E1 fail flag
	DECLARE ME1_FAIL_SHUTDOWN INTEGER SINGLE;
C	MPS E2 fail flag
	DECLARE ME2_FAIL_SHUTDOWN INTEGER SINGLE;
C	MPS E3 fail flag
	DECLARE ME3_FAIL_SHUTDOWN INTEGER SINGLE;
C	MECO command flag
	DECLARE MECO_CMD INTEGER SINGLE;
C	MECO confirmed flag
	DECLARE MECO_CONFIRMED INTEGER SINGLE;
C
C	ET separation command flag
	DECLARE ET_SEP_CMD INTEGER SINGLE;
C
	DECLARE ET_AUTO_SEP_INHIBIT_CREW_ALERT INTEGER SINGLE;
	DECLARE DAP_DNMODE_RHC_CREW_ALERT INTEGER SINGLE;
	DECLARE ROLL_REF_CREW_ALERT INTEGER SINGLE;
	DECLARE LOB_SAT_POS_CREW_ALERT INTEGER SINGLE;
	DECLARE LIB_SAT_POS_CREW_ALERT INTEGER SINGLE;
	DECLARE RIB_SAT_POS_CREW_ALERT INTEGER SINGLE;
	DECLARE ROB_SAT_POS_CREW_ALERT INTEGER SINGLE;
	DECLARE SPEEDBRAKE_POS_CREW_ALERT INTEGER SINGLE;